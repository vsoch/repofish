{
    "": {
        "args": [
            {
                "name": "the ault) just the coefficients are returned"
            },
            {
                "name": "when True"
            }
        ]
    },
    "\"\"\"+gentitle": {
        "args": [
            {
                "name": "\"See f2py2e/cfuncs.py: types_generated\")+\"\"\""
            }
        ]
    },
    "\"\"\"Return the ine value to use for NPY_VISIBILITY_HIDDEN ": {
        "args": [
            {
                "name": "may be empty"
            }
        ]
    },
    "\"\"\"abfunc": {
        "args": [
            {
                "name": "fillx"
            },
            {
                "name": "filly) must be ined."
            }
        ]
    },
    "\"Close to zero\" is ined as `tol` * ": {
        "args": [
            {
                "name": "machine epsilon of the type for"
            }
        ]
    },
    "\"but no C++ linker found, using ault linker\" % ": {
        "args": [
            {
                "name": "ext.name"
            }
        ]
    },
    "\"but no Fortran linker found, using ault linker\" % ": {
        "args": [
            {
                "name": "ext.name"
            }
        ]
    },
    "\"row major\" order ": {
        "args": [
            {
                "name": "the ault)"
            },
            {
                "name": "'F' -> \"column major\""
            }
        ]
    },
    "#               ines a configuration": {
        "args": [
            {
                "name": "function."
            }
        ]
    },
    "#  isintent_f": {
        "args": [
            {
                "name": "var"
            }
        ]
    },
    "# Couldn't find a mask: use the ault ": {
        "args": [
            {
                "name": "nomask"
            }
        ]
    },
    "# Let the ault Unicode -> string encoding ": {
        "args": [
            {
                "name": "if any) take"
            }
        ]
    },
    "# On windows platforms, we want to ault to mingw32 ": {
        "args": [
            {
                "name": "gcc"
            }
        ]
    },
    "# Set to a ault converter ": {
        "args": [
            {
                "name": "but w/ different missing values"
            }
        ]
    },
    "# clump_masked": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "# compilers ": {
        "args": [
            {
                "name": "they must ine linker_exe first)."
            }
        ]
    },
    "# get_linker_so": {
        "args": []
    },
    "# inition is binary compatible with C99 complex type ": {
        "args": [
            {
                "name": "check done at"
            }
        ]
    },
    "# io files ": {
        "args": [
            {
                "name": "ault in python3) return None or raise on would-block"
            },
            {
                "name": ""
            }
        ]
    },
    "# isfunction_wrap": {
        "args": [
            {
                "name": "rout"
            }
        ]
    },
    "# missing Numarray ined names ": {
        "args": [
            {
                "name": "in from numarray import *"
            }
        ]
    },
    "##  vstr2hex": {
        "args": [
            {
                "name": "version"
            }
        ]
    },
    "## #ine CHECKDIMS": {
        "args": [
            {
                "name": "dims"
            },
            {
                "name": "rank) \\\\"
            }
        ]
    },
    "## #ine CNUMFROMARROBJ": {
        "args": [
            {
                "name": "typenum"
            },
            {
                "name": "ctype) \\\\"
            }
        ]
    },
    "## #ine NUMFROMARROBJ": {
        "args": [
            {
                "name": "typenum"
            },
            {
                "name": "ctype) \\\\"
            }
        ]
    },
    "#if ined": {
        "args": [
            {
                "name": "UPPERCASE_FORTRAN"
            }
        ]
    },
    "#ifn __GNUC__ && ": {
        "args": [
            {
                "default": " 4",
                "name": "__GNUC__ >"
            }
        ]
    },
    "#ine CFUNCSMESS": {
        "args": [
            {
                "name": "mess"
            }
        ]
    },
    "#ine CFUNCSMESSPY": {
        "args": [
            {
                "name": "mess"
            },
            {
                "name": "obj"
            }
        ]
    },
    "#ine CHECKARRAY": {
        "args": [
            {
                "name": "check"
            },
            {
                "name": "tcheck"
            },
            {
                "name": "name) \\\\"
            }
        ]
    },
    "#ine CHECKGENERIC": {
        "args": [
            {
                "name": "check"
            },
            {
                "name": "tcheck"
            },
            {
                "name": "name) \\\\"
            }
        ]
    },
    "#ine CHECKSCALAR": {
        "args": [
            {
                "name": "check"
            },
            {
                "name": "tcheck"
            },
            {
                "name": "name"
            },
            {
                "name": "show"
            },
            {
                "name": "var)\\\\"
            }
        ]
    },
    "#ine CHECKSTRING": {
        "args": [
            {
                "name": "check"
            },
            {
                "name": "tcheck"
            },
            {
                "name": "name"
            },
            {
                "name": "show"
            },
            {
                "name": "var)\\\\"
            }
        ]
    },
    "#ine FAILNULL": {
        "args": [
            {
                "name": "p) do {                                            \\\\"
            }
        ]
    },
    "#ine F_FUNC": {
        "args": [
            {
                "name": "f"
            },
            {
                "name": "F) f##_"
            }
        ]
    },
    "#ine F_MODFUNCNAME": {
        "args": [
            {
                "name": "m"
            },
            {
                "name": "f)  f ## .in. ## m ## _"
            }
        ]
    },
    "#ine F_WRAPPEDFUNC": {
        "args": [
            {
                "name": "f"
            },
            {
                "name": "F) f2pywrap##f##_"
            }
        ]
    },
    "#ine GETSCALARFROMPYTUPLE": {
        "args": [
            {
                "name": "tuple"
            },
            {
                "name": "index"
            },
            {
                "name": "var"
            },
            {
                "name": "ctype"
            },
            {
                "name": "mess) {\\\\"
            }
        ]
    },
    "#ine GETSTRFROMPYTUPLE": {
        "args": [
            {
                "name": "tuple"
            },
            {
                "name": "index"
            },
            {
                "name": "str"
            },
            {
                "name": "len) {\\\\"
            }
        ]
    },
    "#ine MEMCOPY": {
        "args": [
            {
                "name": "to"
            },
            {
                "name": "from"
            },
            {
                "name": "n)\\\\"
            }
        ]
    },
    "#ine PRINTPYOBJERR": {
        "args": [
            {
                "name": "obj)\\\\"
            }
        ]
    },
    "#ine STRINGCOPY": {
        "args": [
            {
                "name": "to"
            },
            {
                "name": "from)\\\\"
            }
        ]
    },
    "#ine STRINGCOPYN": {
        "args": [
            {
                "name": "to"
            },
            {
                "name": "from"
            },
            {
                "name": "buf_size)                           \\\\"
            }
        ]
    },
    "#ine STRINGMALLOC": {
        "args": [
            {
                "name": "str"
            },
            {
                "name": "len)\\\\"
            }
        ]
    },
    "#ine SWAP": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "b"
            },
            {
                "name": "t) {\\\\"
            }
        ]
    },
    "#ine TRYCOMPLEXPYARRAYTEMPLATE": {
        "args": [
            {
                "name": "ctype"
            },
            {
                "name": "typecode)\\\\"
            }
        ]
    },
    "#ine TRYPYARRAYTEMPLATE": {
        "args": [
            {
                "name": "ctype"
            },
            {
                "name": "typecode) \\\\"
            }
        ]
    },
    "#ine rank": {
        "args": [
            {
                "name": "var) var ## _Rank"
            }
        ]
    },
    "#ine shape": {
        "args": [
            {
                "name": "var"
            },
            {
                "name": "dim) var ## _Dims[dim]"
            }
        ]
    },
    "#ine slen": {
        "args": [
            {
                "name": "var) capi_ ## var ## _len"
            }
        ]
    },
    "', using first in list as ault' % ": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "l"
            }
        ]
    },
    "'deprecated ault_config_dict": {
        "args": [
            {
                "name": "%r"
            },
            {
                "name": "%r"
            },
            {
                "name": "%r)'"
            }
        ]
    },
    "'docstrshort':' #argname#": {
        "args": [
            {
                "name": "#docsignature#): return #docreturn#'"
            }
        ]
    },
    "* 'raise' -- raise an error ": {
        "args": [
            {
                "name": "ault"
            }
        ]
    },
    "* if ``mode=raise`` ": {
        "args": [
            {
                "name": "the ault)"
            },
            {
                "name": "then"
            },
            {
                "name": "first of all"
            },
            {
                "name": "each element of"
            }
        ]
    },
    "--compiler=          Specify C compiler type ": {
        "args": [
            {
                "name": "as ined by distutils"
            }
        ]
    },
    "...      write": {
        "args": [
            {
                "name": "msg"
            }
        ]
    },
    "/* #ine index": {
        "args": [
            {
                "name": "i) capi_i ## i */"
            }
        ]
    },
    ">>>  add_mod5": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "y"
            }
        ]
    },
    ">>>  err_handler": {
        "args": [
            {
                "name": "type"
            },
            {
                "name": "flag"
            }
        ]
    },
    ">>>  my_func": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    ">>>  myfunc": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "b"
            }
        ]
    },
    ">>>  mypolyval": {
        "args": [
            {
                "name": "p"
            },
            {
                "name": "x"
            }
        ]
    },
    ">>>  padwithtens": {
        "args": [
            {
                "name": "vector"
            },
            {
                "name": "pad_width"
            },
            {
                "name": "iaxis"
            },
            {
                "name": "kwargs"
            }
        ]
    },
    ">>>  pprint": {
        "args": [
            {
                "name": "arr"
            }
        ]
    },
    ">>> I=np.eye": {
        "args": [
            {
                "name": "4); I[-1"
            },
            {
                "default": " 0. # rank icient matrix",
                "name": "-1] "
            }
        ]
    },
    ">>> english_lower": {
        "args": [
            {
                "name": "'ABCDEFGHIJKLMNOPQRSTUVWXYZabcghijklmnopqrstuvwxyz0123456789_'"
            }
        ]
    },
    ">>> english_upper": {
        "args": [
            {
                "name": "'ABCDEFGHIJKLMNOPQRSTUVWXYZabcghijklmnopqrstuvwxyz0123456789_'"
            }
        ]
    },
    ">>> np.add.reduce": {
        "args": [
            {
                "name": "X) # confirm: ault axis value is 0"
            }
        ]
    },
    ">>> np.geterrobj": {
        "args": [
            {
                "name": "# first get the aults"
            }
        ]
    },
    ">>> np.ma.ault_fill_value": {
        "args": [
            {
                "name": "1"
            }
        ]
    },
    ">>> np.mintypecode": {
        "args": [
            {
                "name": "'abceh'"
            },
            {
                "default": "'G'",
                "name": "ault"
            }
        ]
    },
    ">>> np.obj2sctype": {
        "args": [
            {
                "name": "1"
            },
            {
                "default": "list",
                "name": "ault"
            }
        ]
    },
    ">>> np.seterr": {
        "args": [
            {
                "name": "**old_settings)  # reset to ault"
            }
        ]
    },
    ">>> np.tensordot": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "A) # third argument ault is 2"
            }
        ]
    },
    ">>> old_errobj = np.geterrobj": {
        "args": [
            {
                "name": "# first get the aults"
            }
        ]
    },
    "Axis along which the medians are computed. The ault ": {
        "args": [
            {
                "default": "None",
                "name": "axis"
            }
        ]
    },
    "Axis along which the percentiles are computed. The ault ": {
        "args": [
            {
                "name": "None"
            }
        ]
    },
    "Axis along which the sum is computed. The ault ": {
        "args": [
            {
                "default": " None) is to",
                "name": "`axis` "
            }
        ]
    },
    "Axis along which to count. If None ": {
        "args": [
            {
                "name": "ault)"
            },
            {
                "name": "a flattened"
            }
        ]
    },
    "Axis along which to find the peaks.  If None ": {
        "args": [
            {
                "name": "ault) the"
            }
        ]
    },
    "Axis along which to sort.  The ault is -1 ": {
        "args": [
            {
                "name": "the last axis). If None"
            },
            {
                "name": ""
            }
        ]
    },
    "Axis along which to take slices. If None ": {
        "args": [
            {
                "name": "ault)"
            },
            {
                "name": "work on the"
            }
        ]
    },
    "Axis of `a` that ines the vector": {
        "args": [
            {
                "name": "s).  By ault"
            },
            {
                "name": "the last axis."
            }
        ]
    },
    "Axis of `b` that ines the vector": {
        "args": [
            {
                "name": "s).  By ault"
            },
            {
                "name": "the last axis."
            }
        ]
    },
    "Axis of `c` containing the cross product vector": {
        "args": [
            {
                "name": "s).  By ault"
            },
            {
                "name": "the"
            }
        ]
    },
    "B['commonvars'] --- list of variables used in common blocks ": {
        "args": [
            {
                "name": "dimensions are moved to variable initions"
            }
        ]
    },
    "B['sortvars'] --- dictionary of variable initions sorted by dependence ": {
        "args": [
            {
                "name": "independent first"
            }
        ]
    },
    "By ault, load": {
        "args": [
            {
                "name": "restores every variable/object in the session file"
            }
        ]
    },
    "By ault, save": {
        "args": [
            {
                "name": "stores every variable in the caller's namespace"
            }
        ]
    },
    "C-contiguous ": {
        "args": [
            {
                "name": "False"
            },
            {
                "name": "the ault) if we are creating a new file"
            }
        ]
    },
    "CCompiler_compile": {
        "args": [
            {
                "name": "sources"
            },
            {
                "default": "None",
                "name": "output_dir"
            },
            {
                "default": "None",
                "name": "macros"
            },
            {
                "name": ""
            }
        ]
    },
    "CCompiler_customize": {
        "args": [
            {
                "name": "dist"
            },
            {
                "default": "0",
                "name": "need_cxx"
            }
        ]
    },
    "CCompiler_cxx_compiler": {
        "args": []
    },
    "CCompiler_get_version": {
        "args": [
            {
                "default": "False",
                "name": "force"
            },
            {
                "default": "[0]",
                "name": "ok_status"
            }
        ]
    },
    "CCompiler_object_filenames": {
        "args": [
            {
                "name": "source_filenames"
            },
            {
                "default": "0",
                "name": "strip_dir"
            },
            {
                "default": "''",
                "name": "output_dir"
            }
        ]
    },
    "CCompiler_show_customization": {
        "args": []
    },
    "CCompiler_spawn": {
        "args": [
            {
                "name": "cmd"
            },
            {
                "default": "None",
                "name": "display"
            }
        ]
    },
    "Diagonal above which to zero elements.  `k = 0` ": {
        "args": [
            {
                "name": "the ault) is the"
            }
        ]
    },
    "DumpArray": {
        "args": [
            {
                "name": "m"
            },
            {
                "name": "fp"
            }
        ]
    },
    "F": {
        "args": [
            {
                "name": "dfn"
            },
            {
                "name": "dfd"
            },
            {
                "default": "[]",
                "name": "shape"
            }
        ]
    },
    "False ": {
        "args": [
            {
                "name": "the ault) just the coefficients are returned"
            },
            {
                "name": "when True"
            }
        ]
    },
    "Fast Fourier Transform ": {
        "args": [
            {
                "name": "FFT).  By ault"
            },
            {
                "name": "the transform is computed over"
            }
        ]
    },
    "Fourier Transform ": {
        "args": [
            {
                "name": "FFT).  By ault"
            },
            {
                "name": "all axes are transformed"
            },
            {
                "name": "with the"
            }
        ]
    },
    "Future value ": {
        "args": [
            {
                "default": " 0",
                "name": "ault "
            }
        ]
    },
    "Heigenvalues": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": "'L'",
                "name": "UPLO"
            }
        ]
    },
    "Heigenvectors": {
        "args": [
            {
                "name": "A"
            }
        ]
    },
    "Hermitian ": {
        "args": [
            {
                "name": "symmetric if all elements are real)"
            },
            {
                "name": "positive-inite"
            }
        ]
    },
    "If None ": {
        "args": [
            {
                "name": "ault)"
            },
            {
                "name": "applies to a flattened version of the array."
            }
        ]
    },
    "If True ": {
        "args": [
            {
                "name": "ault) make a copy of `a` in the result.  If False modify"
            }
        ]
    },
    "If True, then sub-classes will be passed-through ": {
        "args": [
            {
                "name": "ault)"
            },
            {
                "name": "otherwise"
            }
        ]
    },
    "If ``None`` ": {
        "args": [
            {
                "name": "ault)"
            },
            {
                "name": "all constants are assumed to be zero."
            }
        ]
    },
    "If `rowvar` is True ": {
        "args": [
            {
                "name": "ault)"
            },
            {
                "name": "then each row represents a"
            }
        ]
    },
    "If `rowvar` is non-zero ": {
        "args": [
            {
                "name": "ault)"
            },
            {
                "name": "then each row represents a"
            }
        ]
    },
    "If ined, the axis of `a`, `b` and `c` that ines the vector": {
        "args": [
            {
                "name": "s"
            }
        ]
    },
    "If true ": {
        "args": [
            {
                "name": "ault)"
            },
            {
                "name": "then the object is copied.  Otherwise"
            },
            {
                "name": "a copy"
            }
        ]
    },
    "Index of the diagonal: 0 ": {
        "args": [
            {
                "name": "the ault) refers to the main diagonal"
            },
            {
                "name": ""
            }
        ]
    },
    "IsType": {
        "args": [
            {
                "name": "rep"
            }
        ]
    },
    "Legal values: 0 ": {
        "args": [
            {
                "name": "ault)"
            },
            {
                "name": "1 or 2."
            }
        ]
    },
    "LoadArray": {
        "args": [
            {
                "name": "fp"
            }
        ]
    },
    "Matrix": {
        "args": [
            {
                "name": "data"
            },
            {
                "default": "None",
                "name": "typecode"
            },
            {
                "default": "1",
                "name": "copy"
            },
            {
                "default": "0",
                "name": "savespace"
            }
        ]
    },
    "MaximumType": {
        "args": [
            {
                "name": "t"
            }
        ]
    },
    "Number of decimal places to round to ": {
        "args": [
            {
                "name": "ault: 0).  If"
            }
        ]
    },
    "Number of digits of precision for floating point output ": {
        "args": [
            {
                "name": "ault 8)."
            }
        ]
    },
    "Order of differentiation ": {
        "args": [
            {
                "name": "ault: 1"
            }
        ]
    },
    "Return an antiderivative ": {
        "args": [
            {
                "name": "ininite integral) of this polynomial."
            }
        ]
    },
    "Return angle in degrees if True, radians if False ": {
        "args": [
            {
                "name": "ault)."
            }
        ]
    },
    "Specify the order of the array.  If order is 'C' ": {
        "args": [
            {
                "name": "ault)"
            },
            {
                "name": "then the"
            }
        ]
    },
    "String representation of floating point infinity ": {
        "args": [
            {
                "name": "ault inf)."
            }
        ]
    },
    "String representation of floating point not-a-number ": {
        "args": [
            {
                "name": "ault nan)."
            }
        ]
    },
    "The ault ": {
        "args": [
            {
                "default": " `None`) is perform a product over all",
                "name": "`axis` "
            }
        ]
    },
    "The ault valid days are Monday through Friday ": {
        "args": [
            {
                "name": "\"business days\")."
            }
        ]
    },
    "The ault value ": {
        "args": [
            {
                "name": "'S') results in swapping the current"
            }
        ]
    },
    "The padding character to use ": {
        "args": [
            {
                "name": "ault is space)."
            }
        ]
    },
    "The value to use for invalid entries ": {
        "args": [
            {
                "name": "None by ault)."
            }
        ]
    },
    "This function swaps half-spaces for all axes listed ": {
        "args": [
            {
                "name": "aults to all)."
            }
        ]
    },
    "UnixCCompiler__compile": {
        "args": [
            {
                "name": "obj"
            },
            {
                "name": "src"
            },
            {
                "name": "ext"
            },
            {
                "name": "cc_args"
            },
            {
                "name": "extra_postargs"
            },
            {
                "name": "pp_opts"
            }
        ]
    },
    "UnixCCompiler_create_static_lib": {
        "args": [
            {
                "name": "objects"
            },
            {
                "name": "output_libname"
            },
            {
                "name": ""
            }
        ]
    },
    "Write array to a file as text or binary ": {
        "args": [
            {
                "name": "ault)."
            }
        ]
    },
    "\\t #argname#": {
        "args": [
            {
                "name": "#docsignature#): return #docreturn#\\\\n\\\\"
            }
        ]
    },
    "\\tm = #modulename#_module = PyModule_Create": {
        "args": [
            {
                "name": "&module);"
            }
        ]
    },
    "``": {
        "args": [
            {
                "name": "'include_dirs'"
            },
            {
                "name": "'ine'"
            },
            {
                "name": "'un'"
            },
            {
                "name": "'libraries'"
            },
            {
                "name": "'library_dirs'"
            },
            {
                "name": ""
            }
        ]
    },
    "above.  The ault value ": {
        "args": [
            {
                "name": "'S') results in swapping the current"
            }
        ]
    },
    "accumulate ": {
        "args": [
            {
                "name": "target"
            },
            {
                "default": "0",
                "name": "axis"
            }
        ]
    },
    "add": {
        "args": [
            {
                "name": "line"
            },
            {
                "default": "ret",
                "name": "ret"
            }
        ]
    },
    "add_aults ": {
        "args": []
    },
    "add_axis": {
        "args": [
            {
                "name": "fstr"
            },
            {
                "default": "False",
                "name": "import_change"
            }
        ]
    },
    "add_data_dir": {
        "args": [
            {
                "name": "data_path"
            }
        ]
    },
    "add_data_files": {
        "args": [
            {
                "name": "*files"
            }
        ]
    },
    "add_extension": {
        "args": [
            {
                "name": "name"
            },
            {
                "name": "sources"
            },
            {
                "name": "**kw"
            }
        ]
    },
    "add_headers": {
        "args": [
            {
                "name": "*files"
            }
        ]
    },
    "add_include_dirs": {
        "args": [
            {
                "name": "*paths"
            }
        ]
    },
    "add_ine_macros": {
        "args": [
            {
                "name": "macros"
            }
        ]
    },
    "add_installed_library": {
        "args": [
            {
                "name": "name"
            },
            {
                "name": "sources"
            },
            {
                "name": "install_dir"
            },
            {
                "default": "None",
                "name": "build_info"
            }
        ]
    },
    "add_library": {
        "args": [
            {
                "name": "name"
            },
            {
                "name": "sources"
            },
            {
                "name": "**build_info"
            }
        ]
    },
    "add_newdoc": {
        "args": [
            {
                "name": "place"
            },
            {
                "name": "obj"
            },
            {
                "name": "doc"
            }
        ]
    },
    "add_npy_pkg_config": {
        "args": [
            {
                "name": "template"
            },
            {
                "name": "install_dir"
            },
            {
                "default": "None",
                "name": "subst_dict"
            }
        ]
    },
    "add_numarray_include_dirs": {
        "args": []
    },
    "add_scripts": {
        "args": [
            {
                "name": "*files"
            }
        ]
    },
    "add_subpackage": {
        "args": [
            {
                "name": "subpackage_name"
            },
            {
                "name": ""
            }
        ]
    },
    "addfield": {
        "args": [
            {
                "name": "mrecord"
            },
            {
                "name": "newfield"
            },
            {
                "default": "None",
                "name": "newfieldname"
            }
        ]
    },
    "addimport": {
        "args": [
            {
                "name": "astr"
            }
        ]
    },
    "alen": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "all": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": "None",
                "name": "axis"
            },
            {
                "default": "None",
                "name": "out"
            },
            {
                "default": "False",
                "name": "keepdims"
            }
        ]
    },
    "all_strings": {
        "args": [
            {
                "name": "lst"
            }
        ]
    },
    "allclose": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "b"
            },
            {
                "default": "1.e-5",
                "name": "rtol"
            },
            {
                "default": "1.e-8",
                "name": "atol"
            }
        ]
    },
    "allclose ": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "b"
            },
            {
                "default": "1",
                "name": "fill_value"
            },
            {
                "default": "1.e-5",
                "name": "rtol"
            },
            {
                "default": "1.e-8",
                "name": "atol"
            }
        ]
    },
    "allequal ": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "b"
            },
            {
                "default": "1",
                "name": "fill_value"
            }
        ]
    },
    "allow": {
        "args": [
            {
                "name": "attr"
            }
        ]
    },
    "allpath": {
        "args": [
            {
                "name": "name"
            }
        ]
    },
    "alltrue": {
        "args": [
            {
                "name": "x"
            },
            {
                "default": "0",
                "name": "axis"
            }
        ]
    },
    "alltrue ": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": "None",
                "name": "axis"
            },
            {
                "default": "None",
                "name": "out"
            },
            {
                "default": "False",
                "name": "keepdims"
            }
        ]
    },
    "almost": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "b"
            },
            {
                "default": "6",
                "name": "decimal"
            },
            {
                "default": "True",
                "name": "fill_value"
            }
        ]
    },
    "alterdot": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "amax": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": "None",
                "name": "axis"
            },
            {
                "default": "None",
                "name": "out"
            },
            {
                "default": "False",
                "name": "keepdims"
            }
        ]
    },
    "amin": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": "None",
                "name": "axis"
            },
            {
                "default": "None",
                "name": "out"
            },
            {
                "default": "False",
                "name": "keepdims"
            }
        ]
    },
    "analyzeargs": {
        "args": [
            {
                "name": "block"
            }
        ]
    },
    "analyzebody": {
        "args": [
            {
                "name": "block"
            },
            {
                "name": "args"
            },
            {
                "default": "''",
                "name": "tab"
            }
        ]
    },
    "analyzecommon": {
        "args": [
            {
                "name": "block"
            }
        ]
    },
    "analyzeline": {
        "args": [
            {
                "name": "m"
            },
            {
                "name": "case"
            },
            {
                "name": "line"
            }
        ]
    },
    "analyzevars": {
        "args": [
            {
                "name": "block"
            }
        ]
    },
    "and_": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "b"
            }
        ]
    },
    "angle": {
        "args": [
            {
                "name": "z"
            },
            {
                "default": "0",
                "name": "deg"
            }
        ]
    },
    "anom": {
        "args": [
            {
                "default": "None",
                "name": "axis"
            },
            {
                "default": "None",
                "name": "dtype"
            }
        ]
    },
    "any": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": "None",
                "name": "axis"
            },
            {
                "default": "None",
                "name": "out"
            },
            {
                "default": "False",
                "name": "keepdims"
            }
        ]
    },
    "append": {
        "args": [
            {
                "name": "arr"
            },
            {
                "name": "values"
            },
            {
                "default": "None",
                "name": "axis"
            }
        ]
    },
    "append_fields": {
        "args": [
            {
                "name": "base"
            },
            {
                "name": "names"
            },
            {
                "name": "data"
            },
            {
                "default": "None",
                "name": "dtypes"
            },
            {
                "name": ""
            }
        ]
    },
    "append_needs": {
        "args": [
            {
                "name": "need"
            },
            {
                "default": "1",
                "name": "flag"
            }
        ]
    },
    "append_to": {
        "args": [
            {
                "name": "extlib"
            }
        ]
    },
    "appenddecl": {
        "args": [
            {
                "name": "decl"
            },
            {
                "name": "decl2"
            },
            {
                "default": "1",
                "name": "force"
            }
        ]
    },
    "appendmultiline": {
        "args": [
            {
                "name": "group"
            },
            {
                "name": "context_name"
            },
            {
                "name": "ml"
            }
        ]
    },
    "appendpath": {
        "args": [
            {
                "name": "prefix"
            },
            {
                "name": "path"
            }
        ]
    },
    "apply_along_axis": {
        "args": [
            {
                "name": "func1d"
            },
            {
                "name": "axis"
            },
            {
                "name": "arr"
            },
            {
                "name": "*args"
            }
        ]
    },
    "apply_over_axes": {
        "args": [
            {
                "name": "func"
            },
            {
                "name": "a"
            },
            {
                "name": "axes"
            }
        ]
    },
    "applyrules": {
        "args": [
            {
                "name": "rules"
            },
            {
                "name": "d"
            },
            {
                "default": "{}",
                "name": "var"
            }
        ]
    },
    "approx ": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "b"
            },
            {
                "default": "True",
                "name": "fill_value"
            },
            {
                "default": "1e-5",
                "name": "rtol"
            },
            {
                "default": "1e-8",
                "name": "atol"
            }
        ]
    },
    "ar['need'].append": {
        "args": [
            {
                "name": "rd['name']+'_type'"
            }
        ]
    },
    "arange": {
        "args": [
            {
                "name": "a1"
            },
            {
                "default": "None",
                "name": "a2"
            },
            {
                "default": "1",
                "name": "stride"
            },
            {
                "default": "None",
                "name": "type"
            },
            {
                "default": "None",
                "name": "shape"
            },
            {
                "name": ""
            }
        ]
    },
    "arccos": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "arcsin": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "arctanh": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "are treated as equal ": {
        "args": [
            {
                "name": "ault) or unequal"
            },
            {
                "name": "depending on the `masked_equal`"
            }
        ]
    },
    "are upcast to the output dtype ": {
        "args": [
            {
                "name": "ault float64)."
            }
        ]
    },
    "argmax": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": "None",
                "name": "axis"
            }
        ]
    },
    "argmax ": {
        "args": [
            {
                "name": "x"
            },
            {
                "default": " -1",
                "name": "axis "
            },
            {
                "default": "None",
                "name": "out"
            },
            {
                "default": "None",
                "name": "fill_value"
            }
        ]
    },
    "argmin": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": "None",
                "name": "axis"
            }
        ]
    },
    "argmin ": {
        "args": [
            {
                "name": "x"
            },
            {
                "default": " -1",
                "name": "axis "
            },
            {
                "default": "None",
                "name": "out"
            },
            {
                "default": "None",
                "name": "fill_value"
            }
        ]
    },
    "argpartition": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "kth"
            },
            {
                "default": "-1",
                "name": "axis"
            },
            {
                "default": "'introselect'",
                "name": "kind"
            },
            {
                "default": "None",
                "name": "order"
            }
        ]
    },
    "args = ": {
        "args": [
            {
                "name": "dll_name"
            },
            {
                "name": "_file"
            },
            {
                "name": "out_file"
            }
        ]
    },
    "argsort": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": "-1",
                "name": "axis"
            },
            {
                "default": "'quicksort'",
                "name": "kind"
            },
            {
                "default": "None",
                "name": "order"
            }
        ]
    },
    "argsort ": {
        "args": [
            {
                "name": "x"
            },
            {
                "default": " -1",
                "name": "axis "
            },
            {
                "default": "None",
                "name": "out"
            },
            {
                "default": "None",
                "name": "fill_value"
            }
        ]
    },
    "argwhere": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "around": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": "0",
                "name": "decimals"
            },
            {
                "default": "None",
                "name": "out"
            }
        ]
    },
    "array": {
        "args": [
            {
                "name": "obj"
            },
            {
                "default": "None",
                "name": "dtype"
            },
            {
                "default": "None",
                "name": "shape"
            },
            {
                "default": "0",
                "name": "offset"
            },
            {
                "default": "None",
                "name": "strides"
            },
            {
                "default": "None",
                "name": "formats"
            },
            {
                "name": ""
            }
        ]
    },
    "array2list": {
        "args": [
            {
                "name": "arr"
            }
        ]
    },
    "array2string": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": "None",
                "name": "max_line_width"
            },
            {
                "default": "None",
                "name": "precision"
            },
            {
                "name": ""
            }
        ]
    },
    "array_constructor": {
        "args": [
            {
                "name": "shape"
            },
            {
                "name": "typecode"
            },
            {
                "name": "thestr"
            },
            {
                "default": "LittleEndian",
                "name": "Endian"
            }
        ]
    },
    "array_equal": {
        "args": [
            {
                "name": "a1"
            },
            {
                "name": "a2"
            }
        ]
    },
    "array_equiv": {
        "args": [
            {
                "name": "a1"
            },
            {
                "name": "a2"
            }
        ]
    },
    "array_repr": {
        "args": [
            {
                "name": "arr"
            },
            {
                "default": "None",
                "name": "max_line_width"
            },
            {
                "default": "None",
                "name": "precision"
            },
            {
                "default": "None",
                "name": "suppress_small"
            }
        ]
    },
    "array_set": {
        "args": [
            {
                "name": "vals1"
            },
            {
                "name": "indices"
            },
            {
                "name": "vals2"
            }
        ]
    },
    "array_split": {
        "args": [
            {
                "name": "ary"
            },
            {
                "name": "indices_or_sections"
            },
            {
                "default": " 0",
                "name": "axis "
            }
        ]
    },
    "array_str": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": "None",
                "name": "max_line_width"
            },
            {
                "default": "None",
                "name": "precision"
            },
            {
                "default": "None",
                "name": "suppress_small"
            }
        ]
    },
    "as_array": {
        "args": [
            {
                "name": "obj"
            },
            {
                "default": "None",
                "name": "shape"
            }
        ]
    },
    "as_ctypes": {
        "args": [
            {
                "name": "obj"
            }
        ]
    },
    "as_list": {
        "args": [
            {
                "name": "seq"
            }
        ]
    },
    "as_series": {
        "args": [
            {
                "name": "alist"
            },
            {
                "default": "True)",
                "name": "trim"
            }
        ]
    },
    "as_strided": {
        "args": [
            {
                "name": "x"
            },
            {
                "default": "None",
                "name": "shape"
            },
            {
                "default": "None",
                "name": "strides"
            }
        ]
    },
    "asanyarray": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": "None",
                "name": "dtype"
            },
            {
                "default": "None",
                "name": "order"
            }
        ]
    },
    "asarray": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": "None",
                "name": "dtype"
            },
            {
                "default": "None",
                "name": "order"
            }
        ]
    },
    "asarray_chkfinite": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": "None",
                "name": "dtype"
            },
            {
                "default": "None",
                "name": "order"
            }
        ]
    },
    "asbytes": {
        "args": [
            {
                "name": "s"
            }
        ]
    },
    "asbytes_nested": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "ascontiguousarray": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": "None",
                "name": "dtype"
            }
        ]
    },
    "asfarray": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": "_nx.float_",
                "name": "dtype"
            }
        ]
    },
    "asfortranarray": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": "None",
                "name": "dtype"
            }
        ]
    },
    "asmatrix": {
        "args": [
            {
                "name": "data"
            },
            {
                "default": "None",
                "name": "dtype"
            }
        ]
    },
    "asscalar": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "assert_almost_equal": {
        "args": [
            {
                "name": "actual"
            },
            {
                "name": "desired"
            },
            {
                "default": "7",
                "name": "decimal"
            },
            {
                "default": "''",
                "name": "err_msg"
            },
            {
                "default": "True",
                "name": "verbose"
            }
        ]
    },
    "assert_array_almost_equal": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "y"
            },
            {
                "default": "6",
                "name": "decimal"
            },
            {
                "default": "''",
                "name": "err_msg"
            },
            {
                "default": "True",
                "name": "verbose"
            }
        ]
    },
    "assert_array_approx_equal": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "y"
            },
            {
                "default": "6",
                "name": "decimal"
            },
            {
                "default": "''",
                "name": "err_msg"
            },
            {
                "default": "True",
                "name": "verbose"
            }
        ]
    },
    "assert_array_compare": {
        "args": [
            {
                "name": "comparison"
            },
            {
                "name": "x"
            },
            {
                "name": "y"
            },
            {
                "default": "''",
                "name": "err_msg"
            },
            {
                "default": "''",
                "name": "header"
            },
            {
                "name": ""
            }
        ]
    },
    "assert_array_equal": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "y"
            },
            {
                "default": "''",
                "name": "err_msg"
            }
        ]
    },
    "assert_array_less": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "y"
            },
            {
                "default": "''",
                "name": "err_msg"
            },
            {
                "default": "True",
                "name": "verbose"
            }
        ]
    },
    "assert_equal": {
        "args": [
            {
                "name": "actual"
            },
            {
                "name": "desired"
            },
            {
                "default": "''",
                "name": "err_msg"
            }
        ]
    },
    "assert_equal_records": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "b"
            }
        ]
    },
    "assert_mask_equal": {
        "args": [
            {
                "name": "m1"
            },
            {
                "name": "m2"
            },
            {
                "default": "''",
                "name": "err_msg"
            }
        ]
    },
    "asstr": {
        "args": [
            {
                "name": "s"
            }
        ]
    },
    "assubr": {
        "args": [
            {
                "name": "rout"
            }
        ]
    },
    "astype": {
        "args": [
            {
                "name": "newtype"
            }
        ]
    },
    "astype ": {
        "args": [
            {
                "name": "tc"
            }
        ]
    },
    "asunicode": {
        "args": [
            {
                "name": "s"
            }
        ]
    },
    "asunicode_nested": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "at zero is the second value, etc.  If ``k == []`` ": {
        "args": [
            {
                "name": "the ault)"
            },
            {
                "name": ""
            }
        ]
    },
    "atleast_1d": {
        "args": [
            {
                "name": "*arys"
            }
        ]
    },
    "atleast_2d": {
        "args": [
            {
                "name": "*arys"
            }
        ]
    },
    "atleast_3d": {
        "args": [
            {
                "name": "*arys"
            }
        ]
    },
    "aufunc": {
        "args": [
            {
                "name": "fill) must be ined"
            }
        ]
    },
    "ault": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "ault value is len": {
        "args": [
            {
                "name": "x)*eps"
            },
            {
                "name": "where eps is the relative precision of"
            }
        ]
    },
    "ault_config_dict": {
        "args": [
            {
                "default": " None",
                "name": "name "
            },
            {
                "default": " None",
                "name": "parent_name "
            },
            {
                "default": "None",
                "name": "local_path"
            }
        ]
    },
    "ault_distribution = UniformDistribution": {
        "args": [
            {
                "name": "0.0"
            },
            {
                "name": "1.0"
            }
        ]
    },
    "ault_fill_value": {
        "args": [
            {
                "name": "obj"
            }
        ]
    },
    "ault_fill_value ": {
        "args": [
            {
                "name": "obj"
            }
        ]
    },
    "ault_include_dirs = [_m for _m in ault_include_dirs if os.path.isdir": {
        "args": [
            {
                "name": "_m)]"
            }
        ]
    },
    "ault_include_dirs=[os.path.join": {
        "args": [
            {
                "name": "mklroot"
            },
            {
                "name": "'include')]"
            }
        ]
    },
    "ault_lib_dirs += [os.path.join": {
        "args": [
            {
                "name": "\"/usr/lib/\""
            },
            {
                "name": "triplet)]"
            }
        ]
    },
    "ault_lib_dirs = [_m for _m in ault_lib_dirs if os.path.isdir": {
        "args": [
            {
                "name": "_m)]"
            }
        ]
    },
    "ault_lib_dirs = libpaths": {
        "args": [
            {
                "name": "['/usr/local/lib'"
            },
            {
                "name": "'/opt/lib'"
            },
            {
                "name": "'/usr/lib'"
            },
            {
                "name": ""
            }
        ]
    },
    "ault_lib_dirs=[os.path.join": {
        "args": [
            {
                "name": "mklroot"
            },
            {
                "name": "'lib'"
            },
            {
                "name": "plt)]"
            },
            {
                "name": ""
            }
        ]
    },
    "ault_names = ['f%i' % i for i in range": {
        "args": [
            {
                "name": "ndescr)]"
            }
        ]
    },
    "ault_src_dirs = [_m for _m in ault_src_dirs if os.path.isdir": {
        "args": [
            {
                "name": "_m)]"
            }
        ]
    },
    "ault_text": {
        "args": [
            {
                "name": "s"
            }
        ]
    },
    "ault_x11_include_dirs.extend": {
        "args": [
            {
                "name": "['/usr/lib/X11/include'"
            },
            {
                "name": ""
            }
        ]
    },
    "ault_x11_lib_dirs += [os.path.join": {
        "args": [
            {
                "name": "\"/usr/lib/\""
            },
            {
                "name": "triplet)]"
            }
        ]
    },
    "ault_x11_lib_dirs = libpaths": {
        "args": [
            {
                "name": "['/usr/X11R6/lib'"
            },
            {
                "name": "'/usr/X11/lib'"
            },
            {
                "name": ""
            }
        ]
    },
    "ault_x11_lib_dirs.extend": {
        "args": [
            {
                "name": "[x11_so_dir"
            },
            {
                "name": "'/usr/lib/X11']"
            }
        ]
    },
    "aults['include_dirs'] = os.pathsep.join": {
        "args": [
            {
                "name": "ault_include_dirs"
            }
        ]
    },
    "aults['library_dirs'] = os.pathsep.join": {
        "args": [
            {
                "name": "ault_lib_dirs"
            }
        ]
    },
    "aults['search_static_first'] = str": {
        "args": [
            {
                "name": "self.search_static_first"
            }
        ]
    },
    "aults['src_dirs'] = os.pathsep.join": {
        "args": [
            {
                "name": "ault_src_dirs"
            }
        ]
    },
    "average": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": "None",
                "name": "axis"
            },
            {
                "default": "None",
                "name": "weights"
            },
            {
                "default": "False",
                "name": "returned"
            }
        ]
    },
    "axis ": {
        "args": [
            {
                "name": "axis zero by ault; see Examples below) so repeated use is"
            }
        ]
    },
    "axis = list": {
        "args": [
            {
                "name": "axis) + _axes"
            }
        ]
    },
    "bartlett": {
        "args": [
            {
                "name": "M"
            }
        ]
    },
    "base_repr": {
        "args": [
            {
                "name": "number"
            },
            {
                "default": "2",
                "name": "base"
            },
            {
                "default": "0",
                "name": "padding"
            }
        ]
    },
    "basis": {
        "args": [
            {
                "name": "deg"
            },
            {
                "default": "$domain",
                "name": "domain"
            },
            {
                "default": "$domain",
                "name": "window"
            }
        ]
    },
    "beta": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "b"
            },
            {
                "default": "[]",
                "name": "shape"
            }
        ]
    },
    "binary_repr": {
        "args": [
            {
                "name": "num"
            },
            {
                "default": "None",
                "name": "width"
            }
        ]
    },
    "binomial": {
        "args": [
            {
                "name": "trials"
            },
            {
                "name": "p"
            },
            {
                "default": "[]",
                "name": "shape"
            }
        ]
    },
    "bins in the given range ": {
        "args": [
            {
                "name": "10"
            },
            {
                "name": "by ault). If `bins` is a sequence"
            },
            {
                "name": ""
            }
        ]
    },
    "bitname": {
        "args": [
            {
                "name": "obj"
            }
        ]
    },
    "blackman": {
        "args": [
            {
                "name": "M"
            }
        ]
    },
    "blue_text": {
        "args": [
            {
                "name": "s"
            }
        ]
    },
    "bmat": {
        "args": [
            {
                "name": "obj"
            },
            {
                "default": "None",
                "name": "ldict"
            },
            {
                "default": "None",
                "name": "gdict"
            }
        ]
    },
    "body.append": {
        "args": [
            {
                "name": "\"#if _MSC_VER\""
            }
        ]
    },
    "broadcast_arrays": {
        "args": [
            {
                "name": "*args"
            }
        ]
    },
    "build_a_library": {
        "args": [
            {
                "name": "build_info"
            },
            {
                "name": "lib_name"
            },
            {
                "name": "libraries"
            }
        ]
    },
    "build_data_files_sources": {
        "args": []
    },
    "build_extension": {
        "args": [
            {
                "name": "ext"
            }
        ]
    },
    "build_extension_sources": {
        "args": [
            {
                "name": "ext"
            }
        ]
    },
    "build_import_library": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "build_libraries": {
        "args": [
            {
                "name": "libraries"
            }
        ]
    },
    "build_library_sources": {
        "args": [
            {
                "name": "lib_name"
            },
            {
                "name": "build_info"
            }
        ]
    },
    "build_msvcr_library": {
        "args": [
            {
                "default": "False",
                "name": "debug"
            }
        ]
    },
    "build_npy_pkg_config": {
        "args": []
    },
    "build_py_modules_sources": {
        "args": []
    },
    "build_sources": {
        "args": []
    },
    "buildapi": {
        "args": [
            {
                "name": "rout"
            }
        ]
    },
    "buildcallback": {
        "args": [
            {
                "name": "rout"
            },
            {
                "name": "um"
            }
        ]
    },
    "buildcallbacks": {
        "args": [
            {
                "name": "m"
            }
        ]
    },
    "buildcfuncs": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "buildhooks": {
        "args": [
            {
                "name": "pymod"
            }
        ]
    },
    "buildimplicitrules": {
        "args": [
            {
                "name": "block"
            }
        ]
    },
    "buildmodule": {
        "args": [
            {
                "name": "m"
            },
            {
                "name": "um"
            }
        ]
    },
    "buildmodules": {
        "args": [
            {
                "name": "lst"
            }
        ]
    },
    "buildusevar": {
        "args": [
            {
                "name": "name"
            },
            {
                "name": "realname"
            },
            {
                "name": "vars"
            },
            {
                "name": "usemodulename"
            }
        ]
    },
    "buildusevars": {
        "args": [
            {
                "name": "m"
            },
            {
                "name": "r"
            }
        ]
    },
    "byte_bounds": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "byte_swapped": {
        "args": []
    },
    "calc_info": {
        "args": []
    },
    "calc_libraries_info": {
        "args": []
    },
    "calc_ver_info": {
        "args": [
            {
                "name": "ver_param"
            }
        ]
    },
    "callcrackfortran": {
        "args": [
            {
                "name": "files"
            },
            {
                "name": "options"
            }
        ]
    },
    "capitalize": {
        "args": []
    },
    "cast": {
        "args": [
            {
                "name": "series"
            },
            {
                "default": "$domain",
                "name": "domain"
            },
            {
                "default": "$domain",
                "name": "window"
            }
        ]
    },
    "cb_routsign2map": {
        "args": [
            {
                "name": "rout"
            },
            {
                "name": "um"
            }
        ]
    },
    "cb_sign2map": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "var"
            },
            {
                "default": "None",
                "name": "index"
            }
        ]
    },
    "center": {
        "args": [
            {
                "name": "width"
            },
            {
                "default": "' '",
                "name": "fillchar"
            }
        ]
    },
    "cflags": {
        "args": [
            {
                "default": "\"ault\"",
                "name": "section"
            }
        ]
    },
    "changeimports": {
        "args": [
            {
                "name": "fstr"
            },
            {
                "name": "name"
            },
            {
                "name": "newname"
            }
        ]
    },
    "cheb2poly": {
        "args": [
            {
                "name": "c)"
            }
        ]
    },
    "chebadd": {
        "args": [
            {
                "name": "c1"
            },
            {
                "name": "c2"
            }
        ]
    },
    "chebcompanion": {
        "args": [
            {
                "name": "c"
            }
        ]
    },
    "chebder": {
        "args": [
            {
                "name": "c"
            },
            {
                "default": "1",
                "name": "m"
            },
            {
                "default": "1",
                "name": "scl"
            },
            {
                "default": "0)",
                "name": "axis"
            }
        ]
    },
    "chebdiv": {
        "args": [
            {
                "name": "c1"
            },
            {
                "name": "c2"
            }
        ]
    },
    "chebfit": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "y"
            },
            {
                "name": "deg"
            },
            {
                "default": "None",
                "name": "rcond"
            },
            {
                "default": "False",
                "name": "full"
            },
            {
                "default": "None",
                "name": "w"
            }
        ]
    },
    "chebfromroots": {
        "args": [
            {
                "name": "roots)"
            }
        ]
    },
    "chebgauss": {
        "args": [
            {
                "name": "deg"
            }
        ]
    },
    "chebgrid2d": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "y"
            },
            {
                "name": "c"
            }
        ]
    },
    "chebgrid3d": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "y"
            },
            {
                "name": "z"
            },
            {
                "name": "c"
            }
        ]
    },
    "chebint": {
        "args": [
            {
                "name": "c"
            },
            {
                "default": "1",
                "name": "m"
            },
            {
                "default": "[]",
                "name": "k"
            },
            {
                "default": "0",
                "name": "lbnd"
            },
            {
                "default": "1",
                "name": "scl"
            },
            {
                "default": "0",
                "name": "axis"
            }
        ]
    },
    "chebline": {
        "args": [
            {
                "name": "off"
            },
            {
                "name": "scl)"
            }
        ]
    },
    "chebmul": {
        "args": [
            {
                "name": "c1"
            },
            {
                "name": "c2"
            }
        ]
    },
    "chebmulx": {
        "args": [
            {
                "name": "c"
            }
        ]
    },
    "chebpow": {
        "args": [
            {
                "name": "c"
            },
            {
                "name": "pow"
            },
            {
                "default": "16)",
                "name": "maxpower"
            }
        ]
    },
    "chebpts1": {
        "args": [
            {
                "name": "npts"
            }
        ]
    },
    "chebpts2": {
        "args": [
            {
                "name": "npts"
            }
        ]
    },
    "chebroots": {
        "args": [
            {
                "name": "c"
            }
        ]
    },
    "chebsub": {
        "args": [
            {
                "name": "c1"
            },
            {
                "name": "c2"
            }
        ]
    },
    "chebval": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "c"
            },
            {
                "default": "True",
                "name": "tensor"
            }
        ]
    },
    "chebval2d": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "y"
            },
            {
                "name": "c"
            }
        ]
    },
    "chebval3d": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "y"
            },
            {
                "name": "z"
            },
            {
                "name": "c"
            }
        ]
    },
    "chebvander": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "deg)"
            }
        ]
    },
    "chebvander2d": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "y"
            },
            {
                "name": "deg)"
            }
        ]
    },
    "chebvander3d": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "y"
            },
            {
                "name": "z"
            },
            {
                "name": "deg)"
            }
        ]
    },
    "chebweight": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "check_api_version": {
        "args": [
            {
                "name": "apiversion"
            },
            {
                "name": "codegen_dir"
            }
        ]
    },
    "check_compiler_gcc4": {
        "args": []
    },
    "check_complex": {
        "args": [
            {
                "name": "config"
            },
            {
                "name": "mathlibs"
            }
        ]
    },
    "check_decl": {
        "args": [
            {
                "name": "symbol"
            },
            {
                "name": ""
            }
        ]
    },
    "check_embedded_msvcr_match_linked": {
        "args": [
            {
                "name": "msver"
            }
        ]
    },
    "check_func": {
        "args": [
            {
                "name": "func_name"
            }
        ]
    },
    "check_funcs": {
        "args": [
            {
                "name": "funcs_name"
            }
        ]
    },
    "check_funcs_once": {
        "args": [
            {
                "name": "funcs_name"
            }
        ]
    },
    "check_header": {
        "args": [
            {
                "name": "header"
            },
            {
                "default": "None",
                "name": "include_dirs"
            },
            {
                "default": "None",
                "name": "library_dirs"
            },
            {
                "default": "'c'",
                "name": "lang"
            }
        ]
    },
    "check_ieee_macros": {
        "args": [
            {
                "name": "config"
            }
        ]
    },
    "check_inline": {
        "args": []
    },
    "check_libs": {
        "args": [
            {
                "name": "lib_dirs"
            },
            {
                "name": "libs"
            },
            {
                "default": "[]",
                "name": "opt_libs"
            }
        ]
    },
    "check_libs2": {
        "args": [
            {
                "name": "lib_dirs"
            },
            {
                "name": "libs"
            },
            {
                "default": "[]",
                "name": "opt_libs"
            }
        ]
    },
    "check_long_double_representation": {
        "args": [
            {
                "name": "cmd"
            }
        ]
    },
    "check_macro_true": {
        "args": [
            {
                "name": "symbol"
            },
            {
                "name": ""
            }
        ]
    },
    "check_math_capabilities": {
        "args": [
            {
                "name": "config_cmd"
            },
            {
                "name": "mores"
            },
            {
                "name": "mathlibs"
            }
        ]
    },
    "check_mathlib": {
        "args": [
            {
                "name": "config_cmd"
            }
        ]
    },
    "check_prec": {
        "args": [
            {
                "name": "prec"
            }
        ]
    },
    "check_type": {
        "args": [
            {
                "name": "type_name"
            },
            {
                "default": "None",
                "name": "headers"
            },
            {
                "default": "None",
                "name": "include_dirs"
            },
            {
                "name": ""
            }
        ]
    },
    "check_type_size": {
        "args": [
            {
                "name": "type_name"
            },
            {
                "default": "None",
                "name": "headers"
            },
            {
                "default": "None",
                "name": "include_dirs"
            },
            {
                "default": "None",
                "name": "library_dirs"
            },
            {
                "default": "None",
                "name": "expected"
            }
        ]
    },
    "check_types": {
        "args": [
            {
                "name": "config_cmd"
            },
            {
                "name": "ext"
            },
            {
                "name": "build_dir"
            }
        ]
    },
    "chi_square": {
        "args": [
            {
                "name": "df"
            },
            {
                "default": "[]",
                "name": "shape"
            }
        ]
    },
    "cholesky": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "cholesky_decomposition": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "choose": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "choices"
            },
            {
                "default": "None",
                "name": "out"
            },
            {
                "default": "'raise'",
                "name": "mode"
            }
        ]
    },
    "choose ": {
        "args": [
            {
                "name": "indices"
            },
            {
                "name": "t"
            },
            {
                "default": "None",
                "name": "out"
            },
            {
                "default": "'raise'",
                "name": "mode"
            }
        ]
    },
    "clean_up_temporary_directory": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "clip": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "a_min"
            },
            {
                "name": "a_max"
            },
            {
                "default": "None",
                "name": "out"
            }
        ]
    },
    "clone": {
        "args": [
            {
                "name": "hook_handler"
            }
        ]
    },
    "close": {
        "args": []
    },
    "clump_masked": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "clump_unmasked": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "cmdline": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "colour_text": {
        "args": [
            {
                "name": "s"
            },
            {
                "default": "None",
                "name": "fg"
            },
            {
                "default": "None",
                "name": "bg"
            }
        ]
    },
    "column_stack": {
        "args": [
            {
                "name": "tup"
            }
        ]
    },
    "combine_paths": {
        "args": [
            {
                "name": "*args"
            },
            {
                "name": "**kws"
            }
        ]
    },
    "common2fortran": {
        "args": [
            {
                "name": "common"
            },
            {
                "default": "''",
                "name": "tab"
            }
        ]
    },
    "common_fill_value": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "b"
            }
        ]
    },
    "common_fill_value ": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "b"
            }
        ]
    },
    "common_sign2map": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "var): # obsolute"
            }
        ]
    },
    "common_type": {
        "args": [
            {
                "name": "*arrays"
            }
        ]
    },
    "compare": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "y"
            }
        ]
    },
    "compare_functions_1v": {
        "args": [
            {
                "name": "func"
            },
            {
                "default": "500",
                "name": "nloop"
            },
            {
                "name": ""
            }
        ]
    },
    "compare_functions_2v": {
        "args": [
            {
                "name": "func"
            },
            {
                "default": "500",
                "name": "nloop"
            },
            {
                "default": "True",
                "name": "test"
            },
            {
                "name": ""
            }
        ]
    },
    "compare_methods": {
        "args": [
            {
                "name": "methodname"
            },
            {
                "name": "args"
            },
            {
                "default": "'x'",
                "name": "vars"
            },
            {
                "default": "500",
                "name": "nloop"
            },
            {
                "default": "True",
                "name": "test"
            },
            {
                "name": ""
            }
        ]
    },
    "compiler = get_ault_compiler": {
        "args": [
            {
                "name": "plat"
            }
        ]
    },
    "complex_ = \"struct {%s __x; %s __y;}\" % ": {
        "args": [
            {
                "name": "type"
            },
            {
                "name": "type"
            }
        ]
    },
    "compress": {
        "args": [
            {
                "name": "condition"
            },
            {
                "name": "a"
            },
            {
                "default": "None",
                "name": "axis"
            },
            {
                "default": "None",
                "name": "out"
            }
        ]
    },
    "compress_cols": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "compress_rowcols": {
        "args": [
            {
                "name": "x"
            },
            {
                "default": "None",
                "name": "axis"
            }
        ]
    },
    "compress_rows": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "compressed": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "compressed ": {
        "args": []
    },
    "concatenate": {
        "args": [
            {
                "name": "arrays"
            },
            {
                "default": "0",
                "name": "axis"
            }
        ]
    },
    "concatenate ": {
        "args": [
            {
                "name": "arrays"
            },
            {
                "default": "0",
                "name": "axis"
            }
        ]
    },
    "cond": {
        "args": [
            {
                "name": "x"
            },
            {
                "default": "None",
                "name": "p"
            }
        ]
    },
    "configtest_name": {
        "args": [
            {
                "name": "config"
            }
        ]
    },
    "configuration": {
        "args": [
            {
                "default": "''",
                "name": "parent_package"
            },
            {
                "default": "None",
                "name": "top_path"
            }
        ]
    },
    "construct3": {
        "args": [
            {
                "name": "mask"
            },
            {
                "name": "itype"
            }
        ]
    },
    "containscommon": {
        "args": [
            {
                "name": "rout"
            }
        ]
    },
    "containsmodule": {
        "args": [
            {
                "name": "block"
            }
        ]
    },
    "conv": {
        "args": [
            {
                "name": "astr"
            }
        ]
    },
    "conv = _getconv": {
        "args": [
            {
                "name": "dtype"
            }
        ]
    },
    "convert": {
        "args": [
            {
                "default": "None",
                "name": "domain"
            },
            {
                "default": "None",
                "name": "kind"
            },
            {
                "default": "None)",
                "name": "window"
            }
        ]
    },
    "convertall": {
        "args": [
            {
                "default": "os.path.curdir",
                "name": "direc"
            }
        ]
    },
    "converters = [StringConverter": {
        "args": [
            {
                "name": "None"
            },
            {
                "default": "miss",
                "name": "missing_values"
            },
            {
                "default": "fill",
                "name": "ault"
            }
        ]
    },
    "converters = [conv for i in range": {
        "args": [
            {
                "name": "N)]"
            }
        ]
    },
    "convertfile": {
        "args": [
            {
                "name": "filename"
            }
        ]
    },
    "convertsrc": {
        "args": [
            {
                "default": "os.path.curdir",
                "name": "direc"
            },
            {
                "default": "None",
                "name": "ext"
            },
            {
                "default": "1",
                "name": "orig"
            }
        ]
    },
    "converttree": {
        "args": [
            {
                "default": "os.path.curdir",
                "name": "direc"
            }
        ]
    },
    "convolve": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "v"
            },
            {
                "default": "'full'",
                "name": "mode"
            }
        ]
    },
    "convtypecode": {
        "args": [
            {
                "name": "typecode"
            },
            {
                "default": "None",
                "name": "dtype"
            }
        ]
    },
    "convtypecode2": {
        "args": [
            {
                "name": "typecode"
            },
            {
                "default": "None",
                "name": "dtype"
            }
        ]
    },
    "copy": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": "'K'",
                "name": "order"
            }
        ]
    },
    "copyfile": {
        "args": [
            {
                "name": "name"
            },
            {
                "name": "fstr"
            }
        ]
    },
    "corrcoef": {
        "args": [
            {
                "name": "x"
            },
            {
                "default": "None",
                "name": "y"
            },
            {
                "default": "1",
                "name": "rowvar"
            },
            {
                "default": "0",
                "name": "bias"
            },
            {
                "default": "None",
                "name": "ddof"
            }
        ]
    },
    "correlate": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "v"
            },
            {
                "default": "'valid'",
                "name": "mode"
            },
            {
                "default": "False",
                "name": "old_behavior"
            }
        ]
    },
    "corresponding to `axis` ": {
        "args": [
            {
                "name": "the first"
            },
            {
                "name": "by ault)."
            }
        ]
    },
    "count": {
        "args": [
            {
                "name": "sub"
            },
            {
                "default": "0",
                "name": "start"
            },
            {
                "default": "None",
                "name": "end"
            }
        ]
    },
    "count ": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": " None",
                "name": "axis "
            }
        ]
    },
    "count_masked": {
        "args": [
            {
                "name": "arr"
            },
            {
                "default": "None",
                "name": "axis"
            }
        ]
    },
    "cov": {
        "args": [
            {
                "name": "m"
            },
            {
                "default": "None",
                "name": "y"
            },
            {
                "default": "1",
                "name": "rowvar"
            },
            {
                "default": "0",
                "name": "bias"
            },
            {
                "default": "None",
                "name": "ddof"
            }
        ]
    },
    "crack2fortran": {
        "args": [
            {
                "name": "block"
            }
        ]
    },
    "crack2fortrangen": {
        "args": [
            {
                "name": "block"
            },
            {
                "default": "'\\n'",
                "name": "tab"
            },
            {
                "default": "False",
                "name": "as_interface"
            }
        ]
    },
    "crackfortran": {
        "args": [
            {
                "name": "files"
            }
        ]
    },
    "crackline": {
        "args": [
            {
                "name": "line"
            },
            {
                "default": "0",
                "name": "reset"
            }
        ]
    },
    "cracktypespec": {
        "args": [
            {
                "name": "typespec"
            },
            {
                "name": "selector"
            }
        ]
    },
    "cracktypespec0": {
        "args": [
            {
                "name": "typespec"
            },
            {
                "name": "ll"
            }
        ]
    },
    "createfuncwrapper": {
        "args": [
            {
                "name": "rout"
            },
            {
                "default": "0",
                "name": "signature"
            }
        ]
    },
    "createsubrwrapper": {
        "args": [
            {
                "name": "rout"
            },
            {
                "default": "0",
                "name": "signature"
            }
        ]
    },
    "cross": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "b"
            },
            {
                "default": "-1",
                "name": "axisa"
            },
            {
                "default": "-1",
                "name": "axisb"
            },
            {
                "default": "-1",
                "name": "axisc"
            },
            {
                "default": "None",
                "name": "axis"
            }
        ]
    },
    "cross_product": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "b"
            },
            {
                "default": "-1",
                "name": "axis1"
            },
            {
                "default": "-1",
                "name": "axis2"
            }
        ]
    },
    "cumprod": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": "None",
                "name": "axis"
            },
            {
                "default": "None",
                "name": "dtype"
            },
            {
                "default": "None",
                "name": "out"
            }
        ]
    },
    "cumproduct": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": "None",
                "name": "axis"
            },
            {
                "default": "None",
                "name": "dtype"
            },
            {
                "default": "None",
                "name": "out"
            }
        ]
    },
    "cumsum": {
        "args": [
            {
                "name": "a1"
            },
            {
                "default": "0",
                "name": "axis"
            },
            {
                "default": "None",
                "name": "out"
            },
            {
                "default": "None",
                "name": "type"
            },
            {
                "default": "0",
                "name": "dim"
            }
        ]
    },
    "cumsum ": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": "None",
                "name": "axis"
            },
            {
                "default": "None",
                "name": "dtype"
            },
            {
                "default": "None",
                "name": "out"
            }
        ]
    },
    "cutdeg": {
        "args": [
            {
                "name": "deg)"
            }
        ]
    },
    "cyan_text": {
        "args": [
            {
                "name": "s"
            }
        ]
    },
    "cyg2win32": {
        "args": [
            {
                "name": "path"
            }
        ]
    },
    "ddtype = [": {
        "args": [
            {
                "name": "aultfmt % i"
            },
            {
                "name": "dt"
            }
        ]
    },
    "debugcapi": {
        "args": [
            {
                "name": "var"
            }
        ]
    },
    "decode": {
        "args": [
            {
                "default": "None",
                "name": "encoding"
            },
            {
                "default": "None",
                "name": "errors"
            }
        ]
    },
    "degree": {
        "args": [
            {
                "name": "self)"
            }
        ]
    },
    "delete": {
        "args": [
            {
                "name": "arr"
            },
            {
                "name": "obj"
            },
            {
                "default": "None",
                "name": "axis"
            }
        ]
    },
    "density": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "deprecate": {
        "args": [
            {
                "name": "*args"
            },
            {
                "name": "**kwargs"
            }
        ]
    },
    "deriv": {
        "args": [
            {
                "default": "1",
                "name": "m"
            }
        ]
    },
    "det": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "determinant": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "determineexprtype": {
        "args": [
            {
                "name": "expr"
            },
            {
                "name": "vars"
            },
            {
                "default": "{}",
                "name": "rules"
            }
        ]
    },
    "diag": {
        "args": [
            {
                "name": "v"
            },
            {
                "default": "0",
                "name": "k"
            }
        ]
    },
    "diag_indices": {
        "args": [
            {
                "name": "n"
            },
            {
                "default": "2",
                "name": "ndim"
            }
        ]
    },
    "diag_indices_from": {
        "args": [
            {
                "name": "arr"
            }
        ]
    },
    "diagflat": {
        "args": [
            {
                "name": "v"
            },
            {
                "default": "0",
                "name": "k"
            }
        ]
    },
    "diagonal": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": "0",
                "name": "offset"
            },
            {
                "default": "0",
                "name": "axis1"
            },
            {
                "default": "1",
                "name": "axis2"
            }
        ]
    },
    "dict_append": {
        "args": [
            {
                "name": "d_out"
            },
            {
                "name": "d_in"
            }
        ]
    },
    "dictappend": {
        "args": [
            {
                "name": "rd"
            },
            {
                "name": "ar"
            }
        ]
    },
    "diff": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": "1",
                "name": "n"
            },
            {
                "default": "-1",
                "name": "axis"
            }
        ]
    },
    "dirs.extend": {
        "args": [
            {
                "name": "ault_dirs"
            }
        ]
    },
    "disp": {
        "args": [
            {
                "name": "mesg"
            },
            {
                "default": "None",
                "name": "device"
            },
            {
                "default": "True",
                "name": "linefeed"
            }
        ]
    },
    "display": {
        "args": []
    },
    "display ": {
        "args": []
    },
    "dist.ine_macros.extend": {
        "args": [
            {
                "name": "macros"
            }
        ]
    },
    "divide_remainder": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "b"
            }
        ]
    },
    "dlist, flist = lib2.parse_nm": {
        "args": [
            {
                "name": "nm_output"
            }
        ]
    },
    "do_generate_api": {
        "args": [
            {
                "name": "targets"
            },
            {
                "name": "sources"
            }
        ]
    },
    "doc_note": {
        "args": [
            {
                "name": "initialdoc"
            },
            {
                "name": "note"
            }
        ]
    },
    "dos2unix": {
        "args": [
            {
                "name": "file"
            }
        ]
    },
    "dos2unix_dir": {
        "args": [
            {
                "name": "dir_name"
            }
        ]
    },
    "dos2unix_one_dir": {
        "args": [
            {
                "name": "modified_files"
            },
            {
                "name": "dir_name"
            },
            {
                "name": "file_names"
            }
        ]
    },
    "dot": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "b"
            }
        ]
    },
    "dot ": {
        "args": [
            {
                "name": "other"
            }
        ]
    },
    "dot_join": {
        "args": [
            {
                "name": "*args"
            }
        ]
    },
    "drop_fields": {
        "args": [
            {
                "name": "base"
            },
            {
                "name": "drop_names"
            },
            {
                "default": "True",
                "name": "usemask"
            },
            {
                "default": "False",
                "name": "asrecarray"
            }
        ]
    },
    "dsplit": {
        "args": [
            {
                "name": "ary"
            },
            {
                "name": "indices_or_sections"
            }
        ]
    },
    "dstack": {
        "args": [
            {
                "name": "tup"
            }
        ]
    },
    "dtype = easy_dtype": {
        "args": [
            {
                "name": "dtype"
            },
            {
                "default": "aultfmt",
                "name": "aultfmt"
            },
            {
                "default": "names",
                "name": "names"
            }
        ]
    },
    "dtype_to_descr": {
        "args": [
            {
                "name": "dtype"
            }
        ]
    },
    "dump": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "F"
            }
        ]
    },
    "dump_table": {
        "args": [
            {
                "name": "dll"
            }
        ]
    },
    "dump_variable": {
        "args": [
            {
                "name": "name"
            }
        ]
    },
    "dump_variables": {
        "args": []
    },
    "dumps": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "e=copy.copy": {
        "args": [
            {
                "name": "bb"
            }
        ]
    },
    "each dimension ": {
        "args": [
            {
                "name": "ault 3)."
            }
        ]
    },
    "ediff1d": {
        "args": [
            {
                "name": "ary"
            },
            {
                "default": "None",
                "name": "to_end"
            },
            {
                "default": "None",
                "name": "to_begin"
            }
        ]
    },
    "eig": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "eigenvalues": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "eigenvectors": {
        "args": [
            {
                "name": "A"
            }
        ]
    },
    "eigh": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": "'L'",
                "name": "UPLO"
            }
        ]
    },
    "eigvals": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "eigvalsh": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": "'L'",
                "name": "UPLO"
            }
        ]
    },
    "empty": {
        "args": [
            {
                "name": "shape"
            },
            {
                "default": "'l'",
                "name": "typecode"
            },
            {
                "default": "None",
                "name": "dtype"
            }
        ]
    },
    "enable": {
        "args": [
            {
                "default": "1",
                "name": "flag"
            }
        ]
    },
    "enabled": {
        "args": []
    },
    "enabled ": {
        "args": []
    },
    "encode": {
        "args": [
            {
                "default": "None",
                "name": "encoding"
            },
            {
                "default": "None",
                "name": "errors"
            }
        ]
    },
    "endswith": {
        "args": [
            {
                "name": "suffix"
            },
            {
                "default": "0",
                "name": "start"
            },
            {
                "default": "None",
                "name": "end"
            }
        ]
    },
    "english_capitalize": {
        "args": [
            {
                "name": "s"
            }
        ]
    },
    "english_lower": {
        "args": [
            {
                "name": "s"
            }
        ]
    },
    "english_upper": {
        "args": [
            {
                "name": "s"
            }
        ]
    },
    "equal": {
        "args": [
            {
                "name": "x1"
            },
            {
                "name": "x2"
            }
        ]
    },
    "errmess": {
        "args": [
            {
                "name": "'vars2fortran: Confused?!: \"%s\" is not ined in vars.\\n'%a"
            }
        ]
    },
    "exec_command": {
        "args": [
            {
                "name": "command"
            },
            {
                "name": ""
            }
        ]
    },
    "expand_dims": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "axis"
            }
        ]
    },
    "expand_sub": {
        "args": [
            {
                "name": "substr"
            },
            {
                "name": "names"
            }
        ]
    },
    "expandtabs": {
        "args": [
            {
                "default": "8",
                "name": "tabsize"
            }
        ]
    },
    "explicit_type": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "exponential": {
        "args": [
            {
                "name": "mean"
            },
            {
                "default": "[]",
                "name": "shape"
            }
        ]
    },
    "expr2name": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "block"
            },
            {
                "default": "[]",
                "name": "args"
            }
        ]
    },
    "extend_all": {
        "args": [
            {
                "name": "module"
            }
        ]
    },
    "extobj = get_linalg_error_extobj": {
        "args": [
            {
                "name": "_raise_linalgerror_nonpos"
            }
        ]
    },
    "extract": {
        "args": [
            {
                "name": "condition"
            },
            {
                "name": "arr"
            }
        ]
    },
    "eye": {
        "args": [
            {
                "name": "N"
            },
            {
                "default": "None",
                "name": "M"
            },
            {
                "default": "0",
                "name": "k"
            },
            {
                "default": "float",
                "name": "dtype"
            }
        ]
    },
    "f2py_sources": {
        "args": [
            {
                "name": "sources"
            },
            {
                "name": "extension"
            }
        ]
    },
    "fail_if_array_equal": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "y"
            },
            {
                "default": "''",
                "name": "err_msg"
            },
            {
                "default": "True",
                "name": "verbose"
            }
        ]
    },
    "fail_if_equal": {
        "args": [
            {
                "name": "actual"
            },
            {
                "name": "desired"
            },
            {
                "default": "''",
                "name": "err_msg"
            },
            {
                "name": ""
            }
        ]
    },
    "fft": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": "None",
                "name": "n"
            },
            {
                "default": "-1",
                "name": "axis"
            }
        ]
    },
    "fftfreq": {
        "args": [
            {
                "name": "n"
            },
            {
                "default": "1.0",
                "name": "d"
            }
        ]
    },
    "fftn": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": "None",
                "name": "s"
            },
            {
                "default": "None",
                "name": "axes"
            }
        ]
    },
    "fftshift": {
        "args": [
            {
                "name": "x"
            },
            {
                "default": "None",
                "name": "axes"
            }
        ]
    },
    "field": {
        "args": [
            {
                "name": "attr"
            },
            {
                "default": "None",
                "name": "val"
            }
        ]
    },
    "file = open": {
        "args": [
            {
                "name": "file"
            },
            {
                "name": "'w'"
            }
        ]
    },
    "fillFormat": {
        "args": [
            {
                "name": "data"
            }
        ]
    },
    "fill_diagonal": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "val"
            },
            {
                "default": "False",
                "name": "wrap"
            }
        ]
    },
    "fill_value": {
        "args": []
    },
    "fill_value = ault_fill_value": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "fill_value = ault_fill_value ": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "filled": {
        "args": [
            {
                "default": "None",
                "name": "fill_value"
            }
        ]
    },
    "filled ": {
        "args": [
            {
                "default": "None",
                "name": "fill_value"
            }
        ]
    },
    "filter_files": {
        "args": [
            {
                "name": "prefix"
            },
            {
                "name": "suffix"
            },
            {
                "name": "files"
            },
            {
                "default": "None",
                "name": "remove_prefix"
            }
        ]
    },
    "filter_h_files": {
        "args": [
            {
                "name": "sources"
            }
        ]
    },
    "filter_py_files": {
        "args": [
            {
                "name": "sources"
            }
        ]
    },
    "filter_sources": {
        "args": [
            {
                "name": "sources"
            }
        ]
    },
    "finalize_options": {
        "args": []
    },
    "finalize_options ": {
        "args": []
    },
    "find": {
        "args": [
            {
                "name": "sub"
            },
            {
                "default": "0",
                "name": "start"
            },
            {
                "default": "None",
                "name": "end"
            }
        ]
    },
    "find_common_type": {
        "args": [
            {
                "name": "array_types"
            },
            {
                "name": "scalar_types"
            }
        ]
    },
    "find_dll": {
        "args": [
            {
                "name": "dll_name"
            }
        ]
    },
    "find_duplicate": {
        "args": [
            {
                "name": "list"
            }
        ]
    },
    "find_duplicates": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": "None",
                "name": "key"
            },
            {
                "default": "True",
                "name": "ignoremask"
            },
            {
                "default": "False",
                "name": "return_index"
            }
        ]
    },
    "find_executable": {
        "args": [
            {
                "name": "exe"
            },
            {
                "default": "None",
                "name": "path"
            },
            {
                "default": "{}",
                "name": "_cache"
            }
        ]
    },
    "find_executables": {
        "args": []
    },
    "find_mask": {
        "args": [
            {
                "name": "fs"
            },
            {
                "name": "node_edges"
            }
        ]
    },
    "find_modules": {
        "args": []
    },
    "find_package_modules": {
        "args": [
            {
                "name": "package"
            },
            {
                "name": "package_dir"
            }
        ]
    },
    "find_python_dll": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "find_repl_patterns": {
        "args": [
            {
                "name": "astr"
            }
        ]
    },
    "findcommonblocks": {
        "args": [
            {
                "name": "block"
            },
            {
                "default": "1",
                "name": "top"
            }
        ]
    },
    "findf90modules": {
        "args": [
            {
                "name": "m"
            }
        ]
    },
    "fit": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "y"
            },
            {
                "name": "deg"
            },
            {
                "default": "None",
                "name": "domain"
            },
            {
                "default": "None",
                "name": "rcond"
            },
            {
                "default": "False",
                "name": "full"
            },
            {
                "default": "None",
                "name": "w"
            },
            {
                "name": ""
            }
        ]
    },
    "fix": {
        "args": [
            {
                "name": "x"
            },
            {
                "default": "None",
                "name": "y"
            }
        ]
    },
    "fix_args_py2": {
        "args": [
            {
                "name": "args"
            }
        ]
    },
    "fix_args_py3": {
        "args": [
            {
                "name": "args"
            }
        ]
    },
    "fix_invalid": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": "nomask",
                "name": "mask"
            },
            {
                "default": "True",
                "name": "copy"
            },
            {
                "default": "None",
                "name": "fill_value"
            }
        ]
    },
    "fixistesting": {
        "args": [
            {
                "name": "astr"
            }
        ]
    },
    "fixtypechars": {
        "args": [
            {
                "name": "fstr"
            }
        ]
    },
    "flat": {
        "args": []
    },
    "flatlist": {
        "args": [
            {
                "name": "l"
            }
        ]
    },
    "flatnonzero": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "flatnotmasked_contiguous": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "flatnotmasked_edges": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "flatten": {
        "args": []
    },
    "flatten_descr": {
        "args": [
            {
                "name": "ndtype"
            }
        ]
    },
    "flatten_dtype": {
        "args": [
            {
                "name": "dt"
            }
        ]
    },
    "flatten_inplace": {
        "args": [
            {
                "name": "seq"
            }
        ]
    },
    "flatten_mask": {
        "args": [
            {
                "name": "mask"
            }
        ]
    },
    "flatten_sequence": {
        "args": [
            {
                "name": "iterable"
            }
        ]
    },
    "flatten_structured_array": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "fliplr": {
        "args": [
            {
                "name": "m"
            }
        ]
    },
    "flipud": {
        "args": [
            {
                "name": "m"
            }
        ]
    },
    "flush": {
        "args": []
    },
    "flush ": {
        "args": []
    },
    "flush_caches": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "fmask ": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "fmt_float": {
        "args": [
            {
                "name": "q"
            }
        ]
    },
    "fname2": {
        "args": [
            {
                "name": "name"
            }
        ]
    },
    "for ": {
        "args": [
            {
                "name": "name"
            },
            {
                "name": "value) in cmd.ine"
            }
        ]
    },
    "for t in cfuncs.types.keys": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "from .misc_util import ": {
        "args": [
            {
                "name": "red_text"
            },
            {
                "name": "ault_text"
            },
            {
                "name": "cyan_text"
            },
            {
                "name": "green_text"
            },
            {
                "name": ""
            }
        ]
    },
    "from numpy.distutils.misc_util import ": {
        "args": [
            {
                "name": "red_text"
            },
            {
                "name": "ault_text"
            },
            {
                "name": "cyan_text"
            },
            {
                "name": ""
            }
        ]
    },
    "from_param": {
        "args": [
            {
                "name": "cls"
            },
            {
                "name": "obj"
            }
        ]
    },
    "fromargs": {
        "args": [
            {
                "name": "args"
            }
        ]
    },
    "fromarrays": {
        "args": [
            {
                "name": "arrayList"
            },
            {
                "default": "None",
                "name": "dtype"
            },
            {
                "default": "None",
                "name": "shape"
            },
            {
                "default": "None",
                "name": "formats"
            },
            {
                "name": ""
            }
        ]
    },
    "fromfile": {
        "args": [
            {
                "name": "fd"
            },
            {
                "default": "None",
                "name": "dtype"
            },
            {
                "default": "None",
                "name": "shape"
            },
            {
                "default": "0",
                "name": "offset"
            },
            {
                "default": "None",
                "name": "formats"
            },
            {
                "name": ""
            }
        ]
    },
    "fromflex": {
        "args": [
            {
                "name": "fxarray"
            }
        ]
    },
    "fromfunction": {
        "args": [
            {
                "name": "function"
            },
            {
                "name": "shape"
            },
            {
                "name": "**kwargs"
            }
        ]
    },
    "fromfunction ": {
        "args": [
            {
                "name": "f"
            },
            {
                "name": "s"
            }
        ]
    },
    "fromlist": {
        "args": [
            {
                "name": "seq"
            },
            {
                "default": "None",
                "name": "type"
            },
            {
                "default": "None",
                "name": "shape"
            },
            {
                "default": "0",
                "name": "check_overflow"
            },
            {
                "default": "None",
                "name": "typecode"
            },
            {
                "default": "None",
                "name": "dtype"
            }
        ]
    },
    "fromrecords": {
        "args": [
            {
                "name": "recList"
            },
            {
                "default": "None",
                "name": "dtype"
            },
            {
                "default": "None",
                "name": "shape"
            },
            {
                "default": "None",
                "name": "formats"
            },
            {
                "default": "None",
                "name": "names"
            },
            {
                "name": ""
            }
        ]
    },
    "fromregex": {
        "args": [
            {
                "name": "file"
            },
            {
                "name": "regexp"
            },
            {
                "name": "dtype"
            }
        ]
    },
    "fromroots": {
        "args": [
            {
                "name": "roots"
            },
            {
                "default": "$domain",
                "name": "domain"
            },
            {
                "default": "$domain)",
                "name": "window"
            }
        ]
    },
    "fromstr": {
        "args": [
            {
                "name": "filestr"
            }
        ]
    },
    "fromstring": {
        "args": [
            {
                "name": "datastring"
            },
            {
                "default": "None",
                "name": "dtype"
            },
            {
                "default": "None",
                "name": "shape"
            },
            {
                "default": "0",
                "name": "offset"
            },
            {
                "default": "None",
                "name": "formats"
            },
            {
                "name": ""
            }
        ]
    },
    "fromstring ": {
        "args": [
            {
                "name": "s"
            },
            {
                "name": "t"
            }
        ]
    },
    "fromtextfile": {
        "args": [
            {
                "name": "fname"
            },
            {
                "default": "None",
                "name": "delimitor"
            },
            {
                "default": "'#'",
                "name": "commentchar"
            },
            {
                "default": "''",
                "name": "missingchar"
            },
            {
                "name": ""
            }
        ]
    },
    "full": {
        "args": [
            {
                "name": "shape"
            },
            {
                "name": "fill_value"
            },
            {
                "default": "None",
                "name": "dtype"
            },
            {
                "default": "'C'",
                "name": "order"
            }
        ]
    },
    "full_like": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "fill_value"
            },
            {
                "default": "None",
                "name": "dtype"
            },
            {
                "default": "'K'",
                "name": "order"
            },
            {
                "default": "True",
                "name": "subok"
            }
        ]
    },
    "func": {
        "args": [
            {
                "name": "*vargs"
            }
        ]
    },
    "fv": {
        "args": [
            {
                "name": "rate"
            },
            {
                "name": "nper"
            },
            {
                "name": "pmt"
            },
            {
                "name": "pv"
            },
            {
                "default": "'end'",
                "name": "when"
            }
        ]
    },
    "gamma": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "r"
            },
            {
                "default": "[]",
                "name": "shape"
            }
        ]
    },
    "gen_lib_options": {
        "args": [
            {
                "name": "compiler"
            },
            {
                "name": "library_dirs"
            },
            {
                "name": "runtime_library_dirs"
            },
            {
                "name": "libraries"
            }
        ]
    },
    "gen_preprocess_options ": {
        "args": [
            {
                "name": "macros"
            },
            {
                "name": "include_dirs"
            }
        ]
    },
    "general_source_directories_files": {
        "args": [
            {
                "name": "top_path"
            }
        ]
    },
    "general_source_files": {
        "args": [
            {
                "name": "top_path"
            }
        ]
    },
    "generalized_inverse": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": " 1.e-10",
                "name": "rcond "
            }
        ]
    },
    "generate_": {
        "args": [
            {
                "name": "dll_file"
            },
            {
                "name": "_file"
            }
        ]
    },
    "generate_a_pyrex_source": {
        "args": [
            {
                "name": "base"
            },
            {
                "name": "ext_name"
            },
            {
                "name": "source"
            },
            {
                "name": "extension"
            }
        ]
    },
    "generate_api": {
        "args": [
            {
                "name": "ext"
            },
            {
                "name": "build_dir"
            }
        ]
    },
    "generate_api_func": {
        "args": [
            {
                "name": "module_name"
            }
        ]
    },
    "generate_config_h": {
        "args": [
            {
                "name": "ext"
            },
            {
                "name": "build_dir"
            }
        ]
    },
    "generate_config_py": {
        "args": [
            {
                "name": "target"
            }
        ]
    },
    "generate_f2py_py": {
        "args": [
            {
                "name": "build_dir"
            }
        ]
    },
    "generate_hg_version_py": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "generate_libraries": {
        "args": [
            {
                "name": "ext"
            },
            {
                "name": "build_dir"
            }
        ]
    },
    "generate_manifest": {
        "args": [
            {
                "name": "config"
            }
        ]
    },
    "generate_multiarray_templated_sources": {
        "args": [
            {
                "name": "ext"
            },
            {
                "name": "build_dir"
            }
        ]
    },
    "generate_numpyconfig_h": {
        "args": [
            {
                "name": "ext"
            },
            {
                "name": "build_dir"
            }
        ]
    },
    "generate_scripts": {
        "args": [
            {
                "name": "scripts"
            }
        ]
    },
    "generate_sources": {
        "args": [
            {
                "name": "sources"
            },
            {
                "name": "extension"
            }
        ]
    },
    "generate_svn_version_py": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "generate_umath_c": {
        "args": [
            {
                "name": "ext"
            },
            {
                "name": "build_dir"
            }
        ]
    },
    "generate_umath_templated_sources": {
        "args": [
            {
                "name": "ext"
            },
            {
                "name": "build_dir"
            }
        ]
    },
    "genfromtxt": {
        "args": [
            {
                "name": "fname"
            },
            {
                "default": "float",
                "name": "dtype"
            },
            {
                "default": "'#'",
                "name": "comments"
            },
            {
                "default": "None",
                "name": "delimiter"
            },
            {
                "name": ""
            }
        ]
    },
    "gentitle": {
        "args": [
            {
                "name": "name"
            }
        ]
    },
    "get": {
        "args": [
            {
                "name": "name"
            },
            {
                "default": "None",
                "name": "ault"
            }
        ]
    },
    "getA": {
        "args": []
    },
    "getA1": {
        "args": []
    },
    "getH": {
        "args": []
    },
    "getI": {
        "args": []
    },
    "getShape": {
        "args": [
            {
                "name": "shape"
            },
            {
                "name": "*args"
            }
        ]
    },
    "getT": {
        "args": []
    },
    "getType": {
        "args": [
            {
                "name": "type"
            }
        ]
    },
    "getTypeObject": {
        "args": [
            {
                "name": "sequence"
            },
            {
                "name": "type"
            }
        ]
    },
    "get_api_versions": {
        "args": [
            {
                "name": "apiversion"
            },
            {
                "name": "codegen_dir"
            }
        ]
    },
    "get_arch": {
        "args": []
    },
    "get_array_prepare": {
        "args": [
            {
                "name": "*args"
            }
        ]
    },
    "get_array_wrap": {
        "args": [
            {
                "name": "*args"
            }
        ]
    },
    "get_atlas_version": {
        "args": [
            {
                "name": "**config"
            }
        ]
    },
    "get_build_architecture": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "get_build_temp_dir": {
        "args": []
    },
    "get_cmd": {
        "args": [
            {
                "name": "cmdname"
            },
            {
                "default": "{}",
                "name": "_cache"
            }
        ]
    },
    "get_config_cmd": {
        "args": []
    },
    "get_config_exe": {
        "args": []
    },
    "get_config_output": {
        "args": [
            {
                "name": "config_exe"
            },
            {
                "name": "option"
            }
        ]
    },
    "get_data_files": {
        "args": [
            {
                "name": "data"
            }
        ]
    },
    "get_dependencies": {
        "args": [
            {
                "name": "sources"
            }
        ]
    },
    "get_distribution": {
        "args": []
    },
    "get_dotblas_sources": {
        "args": [
            {
                "name": "ext"
            },
            {
                "name": "build_dir"
            }
        ]
    },
    "get_exception": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "get_ext_source_files": {
        "args": [
            {
                "name": "ext"
            }
        ]
    },
    "get_f2py_modulename": {
        "args": [
            {
                "name": "source"
            }
        ]
    },
    "get_fieldstructure": {
        "args": [
            {
                "name": "adtype"
            },
            {
                "default": "None",
                "name": "lastname"
            },
            {
                "default": "None",
                "name": "parents"
            },
            {
                "name": ""
            }
        ]
    },
    "get_fill_value": {
        "args": []
    },
    "get_fill_value ": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "get_flags": {
        "args": []
    },
    "get_flags_arch": {
        "args": []
    },
    "get_flags_arch_f77": {
        "args": []
    },
    "get_flags_arch_f90": {
        "args": []
    },
    "get_flags_debug": {
        "args": []
    },
    "get_flags_f77": {
        "args": []
    },
    "get_flags_f90": {
        "args": []
    },
    "get_flags_fix": {
        "args": []
    },
    "get_flags_free": {
        "args": []
    },
    "get_flags_linker_so": {
        "args": []
    },
    "get_flags_opt": {
        "args": []
    },
    "get_frame": {
        "args": [
            {
                "default": "0",
                "name": "level"
            }
        ]
    },
    "get_imag": {
        "args": []
    },
    "get_include": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "get_include_dirs": {
        "args": [
            {
                "default": "'include_dirs'",
                "name": "key"
            }
        ]
    },
    "get_info": {
        "args": [
            {
                "default": "0",
                "name": "notfound_action"
            }
        ]
    },
    "get_ip": {
        "args": []
    },
    "get_kind": {
        "args": [
            {
                "name": "var"
            }
        ]
    },
    "get_language": {
        "args": [
            {
                "name": "sources"
            }
        ]
    },
    "get_lapack_lite_sources": {
        "args": [
            {
                "name": "ext"
            },
            {
                "name": "build_dir"
            }
        ]
    },
    "get_lib_dirs": {
        "args": [
            {
                "default": "'library_dirs'",
                "name": "key"
            }
        ]
    },
    "get_lib_source_files": {
        "args": [
            {
                "name": "lib"
            }
        ]
    },
    "get_libgcc_dir": {
        "args": []
    },
    "get_libraries": {
        "args": []
    },
    "get_library_dirs": {
        "args": []
    },
    "get_libs": {
        "args": [
            {
                "name": "key"
            },
            {
                "name": "ault"
            }
        ]
    },
    "get_linalg_error_extobj": {
        "args": [
            {
                "name": "callback"
            }
        ]
    },
    "get_masked_subclass": {
        "args": [
            {
                "name": "*arrays"
            }
        ]
    },
    "get_mathlib_info": {
        "args": [
            {
                "name": "*args"
            }
        ]
    },
    "get_mathlibs": {
        "args": [
            {
                "default": "None",
                "name": "path"
            }
        ]
    },
    "get_mkl_rootdir": {
        "args": []
    },
    "get_names": {
        "args": [
            {
                "name": "adtype"
            }
        ]
    },
    "get_names_flat": {
        "args": [
            {
                "name": "adtype"
            }
        ]
    },
    "get_needs": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "get_npy_pkg_dir": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "get_numarray_include": {
        "args": [
            {
                "default": "None",
                "name": "type"
            }
        ]
    },
    "get_numarray_include_dirs": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "get_numpy_include_dirs": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "get_object_signature": {
        "args": [
            {
                "name": "obj"
            }
        ]
    },
    "get_opt": {
        "args": []
    },
    "get_output": {
        "args": [
            {
                "name": "body"
            },
            {
                "default": "None",
                "name": "headers"
            },
            {
                "default": "None",
                "name": "include_dirs"
            },
            {
                "name": ""
            }
        ]
    },
    "get_outputs": {
        "args": []
    },
    "get_outputs ": {
        "args": []
    },
    "get_parameters": {
        "args": [
            {
                "name": "vars"
            },
            {
                "default": "{}",
                "name": "global_params"
            }
        ]
    },
    "get_path_from_frame": {
        "args": [
            {
                "name": "frame"
            },
            {
                "default": "None",
                "name": "parent_path"
            }
        ]
    },
    "get_paths": {
        "args": [
            {
                "name": "section"
            },
            {
                "name": "key"
            }
        ]
    },
    "get_pkg_info": {
        "args": [
            {
                "name": "pkgname"
            },
            {
                "default": "None",
                "name": "dirs"
            }
        ]
    },
    "get_prefix": {
        "args": [
            {
                "name": "module"
            }
        ]
    },
    "get_printoptions": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "get_pythonexe": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "get_real": {
        "args": []
    },
    "get_remaining_size": {
        "args": [
            {
                "name": "fd"
            }
        ]
    },
    "get_script_files": {
        "args": [
            {
                "name": "scripts"
            }
        ]
    },
    "get_seed": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "get_shared_lib_extension": {
        "args": [
            {
                "default": "False",
                "name": "is_python_ext"
            }
        ]
    },
    "get_sorted_names": {
        "args": [
            {
                "name": "vars"
            }
        ]
    },
    "get_source_files": {
        "args": []
    },
    "get_source_files ": {
        "args": []
    },
    "get_src_dirs": {
        "args": [
            {
                "default": "'src_dirs'",
                "name": "key"
            }
        ]
    },
    "get_standard_file": {
        "args": [
            {
                "name": "fname"
            }
        ]
    },
    "get_subpackage": {
        "args": [
            {
                "name": "subpackage_name"
            },
            {
                "name": ""
            }
        ]
    },
    "get_swig_modulename": {
        "args": [
            {
                "name": "source"
            }
        ]
    },
    "get_swig_target": {
        "args": [
            {
                "name": "source"
            }
        ]
    },
    "get_target": {
        "args": []
    },
    "get_usedict": {
        "args": [
            {
                "name": "block"
            }
        ]
    },
    "get_useparameters": {
        "args": [
            {
                "name": "block"
            },
            {
                "default": "None",
                "name": "param_map"
            }
        ]
    },
    "get_version": {
        "args": [
            {
                "name": "*args"
            },
            {
                "name": "**kwds"
            }
        ]
    },
    "get_version_cmd": {
        "args": []
    },
    "getandcopy": {
        "args": [
            {
                "name": "name"
            }
        ]
    },
    "getargs": {
        "args": [
            {
                "name": "rout"
            }
        ]
    },
    "getargs2": {
        "args": [
            {
                "name": "rout"
            }
        ]
    },
    "getarrdims": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "var"
            },
            {
                "default": "0",
                "name": "verbose"
            }
        ]
    },
    "getarrdocsign": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "var"
            }
        ]
    },
    "getarrlen": {
        "args": [
            {
                "name": "dl"
            },
            {
                "name": "args"
            },
            {
                "default": "'*'",
                "name": "star"
            }
        ]
    },
    "getblockname": {
        "args": [
            {
                "name": "block"
            },
            {
                "default": "'unknown'",
                "name": "unknown"
            }
        ]
    },
    "getbufsize": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "getcallprotoargument": {
        "args": [
            {
                "name": "rout"
            },
            {
                "default": "{}",
                "name": "cb_map"
            }
        ]
    },
    "getcallstatement": {
        "args": [
            {
                "name": "rout"
            }
        ]
    },
    "getctype": {
        "args": [
            {
                "name": "var"
            }
        ]
    },
    "getdata": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": "True",
                "name": "subok"
            }
        ]
    },
    "getdoc": {
        "args": []
    },
    "getdomain": {
        "args": [
            {
                "name": "x)"
            }
        ]
    },
    "geterr": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "geterrcall": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "getexception": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "getextension": {
        "args": [
            {
                "name": "name"
            }
        ]
    },
    "getfile": {
        "args": [
            {
                "name": "name"
            }
        ]
    },
    "getfortranname": {
        "args": [
            {
                "name": "rout"
            }
        ]
    },
    "getinit": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "var"
            }
        ]
    },
    "getlincoef": {
        "args": [
            {
                "name": "e"
            },
            {
                "default": " a*x+b ; x in xset",
                "name": "xset): # e "
            }
        ]
    },
    "getmask": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "getmask ": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "getmaskarray": {
        "args": [
            {
                "name": "arr"
            }
        ]
    },
    "getmaskarray ": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "getmultilineblock": {
        "args": [
            {
                "name": "rout"
            },
            {
                "name": "blockname"
            },
            {
                "default": "1",
                "name": "comment"
            },
            {
                "default": "0",
                "name": "counter"
            }
        ]
    },
    "getnm": {
        "args": [
            {
                "default": " ['nm'",
                "name": "nm_cmd "
            },
            {
                "name": "'-Cs'"
            },
            {
                "name": "'python%s.lib' % py_ver]"
            }
        ]
    },
    "getpydocsign": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "var"
            }
        ]
    },
    "getpymethod": {
        "args": [
            {
                "name": "rout"
            }
        ]
    },
    "getrestdoc": {
        "args": [
            {
                "name": "rout"
            }
        ]
    },
    "getstrlength": {
        "args": [
            {
                "name": "var"
            }
        ]
    },
    "getusercode": {
        "args": [
            {
                "name": "rout"
            }
        ]
    },
    "getusercode1": {
        "args": [
            {
                "name": "rout"
            }
        ]
    },
    "gnu_version_match": {
        "args": [
            {
                "name": "version_string"
            }
        ]
    },
    "good": {
        "args": [
            {
                "name": "msg"
            },
            {
                "name": "*args"
            }
        ]
    },
    "gpaths": {
        "args": [
            {
                "name": "paths"
            },
            {
                "default": "''",
                "name": "local_path"
            },
            {
                "default": "True",
                "name": "include_non_existing"
            }
        ]
    },
    "gradient": {
        "args": [
            {
                "name": "f"
            },
            {
                "name": "*varargs"
            }
        ]
    },
    "greater": {
        "args": [
            {
                "name": "x1"
            },
            {
                "name": "x2"
            }
        ]
    },
    "greater_equal": {
        "args": [
            {
                "name": "x1"
            },
            {
                "name": "x2"
            }
        ]
    },
    "green_text": {
        "args": [
            {
                "name": "s"
            }
        ]
    },
    "hamming": {
        "args": [
            {
                "name": "M"
            }
        ]
    },
    "handleError": {
        "args": [
            {
                "name": "errorStatus"
            },
            {
                "name": "sourcemsg"
            }
        ]
    },
    "hanning": {
        "args": [
            {
                "name": "M"
            }
        ]
    },
    "harden_mask": {
        "args": []
    },
    "has_cxx_sources": {
        "args": [
            {
                "name": "sources"
            }
        ]
    },
    "has_f2py_sources": {
        "args": []
    },
    "has_f_sources": {
        "args": [
            {
                "name": "sources"
            }
        ]
    },
    "has_info": {
        "args": []
    },
    "has_samecoef": {
        "args": [
            {
                "name": "other"
            }
        ]
    },
    "has_samedomain": {
        "args": [
            {
                "name": "other"
            }
        ]
    },
    "has_sametype": {
        "args": [
            {
                "name": "other"
            }
        ]
    },
    "has_samewindow": {
        "args": [
            {
                "name": "other"
            }
        ]
    },
    "has_scons_scripts": {
        "args": []
    },
    "hasassumedshape": {
        "args": [
            {
                "name": "rout"
            }
        ]
    },
    "hasbody": {
        "args": [
            {
                "name": "rout"
            }
        ]
    },
    "hascallstatement": {
        "args": [
            {
                "name": "rout"
            }
        ]
    },
    "hascommon": {
        "args": [
            {
                "name": "rout"
            }
        ]
    },
    "hasexternals": {
        "args": [
            {
                "name": "rout"
            }
        ]
    },
    "hasinitvalue": {
        "args": [
            {
                "name": "var"
            }
        ]
    },
    "hasinitvalueasstring": {
        "args": [
            {
                "name": "var"
            }
        ]
    },
    "hasnote": {
        "args": [
            {
                "name": "var"
            }
        ]
    },
    "hasresultnote": {
        "args": [
            {
                "name": "rout"
            }
        ]
    },
    "hasvariables": {
        "args": [
            {
                "name": "rout"
            }
        ]
    },
    "have_cxx_sources": {
        "args": []
    },
    "have_f77c": {
        "args": []
    },
    "have_f90c": {
        "args": []
    },
    "have_f_sources": {
        "args": []
    },
    "have_pyrex": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "header_data_from_array_1_0": {
        "args": [
            {
                "name": "array"
            }
        ]
    },
    "herm2poly": {
        "args": [
            {
                "name": "c)"
            }
        ]
    },
    "hermadd": {
        "args": [
            {
                "name": "c1"
            },
            {
                "name": "c2"
            }
        ]
    },
    "hermcompanion": {
        "args": [
            {
                "name": "c"
            }
        ]
    },
    "hermder": {
        "args": [
            {
                "name": "c"
            },
            {
                "default": "1",
                "name": "m"
            },
            {
                "default": "1",
                "name": "scl"
            },
            {
                "default": "0)",
                "name": "axis"
            }
        ]
    },
    "hermdiv": {
        "args": [
            {
                "name": "c1"
            },
            {
                "name": "c2"
            }
        ]
    },
    "herme2poly": {
        "args": [
            {
                "name": "c)"
            }
        ]
    },
    "hermeadd": {
        "args": [
            {
                "name": "c1"
            },
            {
                "name": "c2"
            }
        ]
    },
    "hermecompanion": {
        "args": [
            {
                "name": "c"
            }
        ]
    },
    "hermeder": {
        "args": [
            {
                "name": "c"
            },
            {
                "default": "1",
                "name": "m"
            },
            {
                "default": "1",
                "name": "scl"
            },
            {
                "default": "0)",
                "name": "axis"
            }
        ]
    },
    "hermediv": {
        "args": [
            {
                "name": "c1"
            },
            {
                "name": "c2"
            }
        ]
    },
    "hermefit": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "y"
            },
            {
                "name": "deg"
            },
            {
                "default": "None",
                "name": "rcond"
            },
            {
                "default": "False",
                "name": "full"
            },
            {
                "default": "None",
                "name": "w"
            }
        ]
    },
    "hermefromroots": {
        "args": [
            {
                "name": "roots)"
            }
        ]
    },
    "hermegauss": {
        "args": [
            {
                "name": "deg"
            }
        ]
    },
    "hermegrid2d": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "y"
            },
            {
                "name": "c"
            }
        ]
    },
    "hermegrid3d": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "y"
            },
            {
                "name": "z"
            },
            {
                "name": "c"
            }
        ]
    },
    "hermeint": {
        "args": [
            {
                "name": "c"
            },
            {
                "default": "1",
                "name": "m"
            },
            {
                "default": "[]",
                "name": "k"
            },
            {
                "default": "0",
                "name": "lbnd"
            },
            {
                "default": "1",
                "name": "scl"
            },
            {
                "default": "0",
                "name": "axis"
            }
        ]
    },
    "hermeline": {
        "args": [
            {
                "name": "off"
            },
            {
                "name": "scl)"
            }
        ]
    },
    "hermemul": {
        "args": [
            {
                "name": "c1"
            },
            {
                "name": "c2"
            }
        ]
    },
    "hermemulx": {
        "args": [
            {
                "name": "c"
            }
        ]
    },
    "hermepow": {
        "args": [
            {
                "name": "c"
            },
            {
                "name": "pow"
            },
            {
                "default": "16)",
                "name": "maxpower"
            }
        ]
    },
    "hermeroots": {
        "args": [
            {
                "name": "c"
            }
        ]
    },
    "hermesub": {
        "args": [
            {
                "name": "c1"
            },
            {
                "name": "c2"
            }
        ]
    },
    "hermeval": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "c"
            },
            {
                "default": "True",
                "name": "tensor"
            }
        ]
    },
    "hermeval2d": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "y"
            },
            {
                "name": "c"
            }
        ]
    },
    "hermeval3d": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "y"
            },
            {
                "name": "z"
            },
            {
                "name": "c"
            }
        ]
    },
    "hermevander": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "deg)"
            }
        ]
    },
    "hermevander2d": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "y"
            },
            {
                "name": "deg)"
            }
        ]
    },
    "hermevander3d": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "y"
            },
            {
                "name": "z"
            },
            {
                "name": "deg)"
            }
        ]
    },
    "hermeweight": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "hermfit": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "y"
            },
            {
                "name": "deg"
            },
            {
                "default": "None",
                "name": "rcond"
            },
            {
                "default": "False",
                "name": "full"
            },
            {
                "default": "None",
                "name": "w"
            }
        ]
    },
    "hermfromroots": {
        "args": [
            {
                "name": "roots)"
            }
        ]
    },
    "hermgauss": {
        "args": [
            {
                "name": "deg"
            }
        ]
    },
    "hermgrid2d": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "y"
            },
            {
                "name": "c"
            }
        ]
    },
    "hermgrid3d": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "y"
            },
            {
                "name": "z"
            },
            {
                "name": "c"
            }
        ]
    },
    "hermint": {
        "args": [
            {
                "name": "c"
            },
            {
                "default": "1",
                "name": "m"
            },
            {
                "default": "[]",
                "name": "k"
            },
            {
                "default": "0",
                "name": "lbnd"
            },
            {
                "default": "1",
                "name": "scl"
            },
            {
                "default": "0",
                "name": "axis"
            }
        ]
    },
    "hermline": {
        "args": [
            {
                "name": "off"
            },
            {
                "name": "scl)"
            }
        ]
    },
    "hermmul": {
        "args": [
            {
                "name": "c1"
            },
            {
                "name": "c2"
            }
        ]
    },
    "hermmulx": {
        "args": [
            {
                "name": "c"
            }
        ]
    },
    "hermpow": {
        "args": [
            {
                "name": "c"
            },
            {
                "name": "pow"
            },
            {
                "default": "16)",
                "name": "maxpower"
            }
        ]
    },
    "hermroots": {
        "args": [
            {
                "name": "c"
            }
        ]
    },
    "hermsub": {
        "args": [
            {
                "name": "c1"
            },
            {
                "name": "c2"
            }
        ]
    },
    "hermval": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "c"
            },
            {
                "default": "True",
                "name": "tensor"
            }
        ]
    },
    "hermval2d": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "y"
            },
            {
                "name": "c"
            }
        ]
    },
    "hermval3d": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "y"
            },
            {
                "name": "z"
            },
            {
                "name": "c"
            }
        ]
    },
    "hermvander": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "deg)"
            }
        ]
    },
    "hermvander2d": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "y"
            },
            {
                "name": "deg)"
            }
        ]
    },
    "hermvander3d": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "y"
            },
            {
                "name": "z"
            },
            {
                "name": "deg)"
            }
        ]
    },
    "hermweight": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "hfft": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": "None",
                "name": "n"
            },
            {
                "default": "-1",
                "name": "axis"
            }
        ]
    },
    "hidden_visibility = visibility_ine": {
        "args": [
            {
                "name": "config_cmd"
            }
        ]
    },
    "histogram": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": "10",
                "name": "bins"
            },
            {
                "default": "None",
                "name": "range"
            },
            {
                "default": "False",
                "name": "normed"
            },
            {
                "default": "None",
                "name": "weights"
            },
            {
                "default": "None",
                "name": "density"
            }
        ]
    },
    "histogram2d": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "y"
            },
            {
                "default": "10",
                "name": "bins"
            },
            {
                "default": "None",
                "name": "range"
            },
            {
                "default": "False",
                "name": "normed"
            },
            {
                "default": "None",
                "name": "weights"
            }
        ]
    },
    "histogramdd": {
        "args": [
            {
                "name": "sample"
            },
            {
                "default": "10",
                "name": "bins"
            },
            {
                "default": "None",
                "name": "range"
            },
            {
                "default": "False",
                "name": "normed"
            },
            {
                "default": "None",
                "name": "weights"
            }
        ]
    },
    "hsplit": {
        "args": [
            {
                "name": "ary"
            },
            {
                "name": "indices_or_sections"
            }
        ]
    },
    "hstack": {
        "args": [
            {
                "name": "tup"
            }
        ]
    },
    "i0": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "identity": {
        "args": [
            {
                "name": "n"
            },
            {
                "default": "None",
                "name": "dtype"
            }
        ]
    },
    "ids ": {
        "args": []
    },
    "if allow": {
        "args": [
            {
                "name": "'un'"
            }
        ]
    },
    "if is_string": {
        "args": [
            {
                "name": "ault"
            }
        ]
    },
    "if not hasattr": {
        "args": [
            {
                "name": "dist"
            },
            {
                "name": "'ine_macros'"
            }
        ]
    },
    "if os.path.join": {
        "args": [
            {
                "name": "sys.prefix"
            },
            {
                "name": "'lib') not in ault_lib_dirs"
            }
        ]
    },
    "if re.search": {
        "args": [
            {
                "name": "r'unined symbol: ATL_buildinfo'"
            },
            {
                "name": "o"
            },
            {
                "name": "re.M"
            }
        ]
    },
    "if s and re.search": {
        "args": [
            {
                "name": "r'unined reference to `_gfortran'"
            },
            {
                "name": "o"
            },
            {
                "name": "re.M"
            }
        ]
    },
    "ifft": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": "None",
                "name": "n"
            },
            {
                "default": "-1",
                "name": "axis"
            }
        ]
    },
    "ifftn": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": "None",
                "name": "s"
            },
            {
                "default": "None",
                "name": "axes"
            }
        ]
    },
    "ifftshift": {
        "args": [
            {
                "name": "x"
            },
            {
                "default": "None",
                "name": "axes"
            }
        ]
    },
    "ignored, mores = cocache.check_types": {
        "args": [
            {
                "name": "config_cmd"
            },
            {
                "name": "ext"
            },
            {
                "name": "build_dir"
            }
        ]
    },
    "ignored.  The ault value is ``len": {
        "args": [
            {
                "name": "x)*eps``"
            },
            {
                "name": "where `eps` is the"
            }
        ]
    },
    "ignored. The ault value is len": {
        "args": [
            {
                "name": "x)*eps"
            },
            {
                "name": "where eps is the"
            }
        ]
    },
    "ihfft": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": "None",
                "name": "n"
            },
            {
                "default": "-1",
                "name": "axis"
            }
        ]
    },
    "imag": {
        "args": [
            {
                "name": "val"
            }
        ]
    },
    "in1d": {
        "args": [
            {
                "name": "ar1"
            },
            {
                "name": "ar2"
            },
            {
                "default": "False",
                "name": "assume_unique"
            },
            {
                "default": "False",
                "name": "invert"
            }
        ]
    },
    "index": {
        "args": [
            {
                "name": "sub"
            },
            {
                "default": "0",
                "name": "start"
            },
            {
                "default": "None",
                "name": "end"
            }
        ]
    },
    "index_sort": {
        "args": [
            {
                "name": "arr"
            }
        ]
    },
    "indices": {
        "args": [
            {
                "name": "dimensions"
            },
            {
                "default": "int",
                "name": "dtype"
            }
        ]
    },
    "indices ": {
        "args": [
            {
                "name": "dimensions"
            },
            {
                "default": "None",
                "name": "dtype"
            }
        ]
    },
    "ine = symbol.replace": {
        "args": [
            {
                "name": "' '"
            },
            {
                "name": "'_'"
            }
        ]
    },
    "ine_macros, sources = filter_files": {
        "args": [
            {
                "name": "'-D'"
            },
            {
                "name": "''"
            },
            {
                "name": "sources"
            },
            {
                "default": "1",
                "name": "remove_prefix"
            }
        ]
    },
    "ine_macros=[": {
        "args": [
            {
                "name": "'SCIPY_UMFPACK_H'"
            },
            {
                "name": "None)]"
            },
            {
                "name": ""
            }
        ]
    },
    "ine_macros[i] = tuple": {
        "args": [
            {
                "name": "name_value"
            }
        ]
    },
    "info": {
        "args": [
            {
                "default": "None",
                "name": "object"
            },
            {
                "default": "76",
                "name": "maxwidth"
            },
            {
                "default": "sys.stdout",
                "name": "output"
            },
            {
                "default": "'numpy'",
                "name": "toplevel"
            }
        ]
    },
    "initialize_options": {
        "args": []
    },
    "inner": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "b"
            }
        ]
    },
    "insert": {
        "args": [
            {
                "name": "arr"
            },
            {
                "name": "obj"
            },
            {
                "name": "values"
            },
            {
                "default": "None",
                "name": "axis"
            }
        ]
    },
    "install_for_development": {
        "args": []
    },
    "integ": {
        "args": [
            {
                "default": "1",
                "name": "m"
            },
            {
                "default": "0",
                "name": "k"
            }
        ]
    },
    "integer type, `dtype` is the ault platform integer. ": {
        "args": [
            {
                "name": "Note: if"
            }
        ]
    },
    "intel_version_match": {
        "args": [
            {
                "name": "type"
            }
        ]
    },
    "interface['body'].append": {
        "args": [
            {
                "name": "e"
            }
        ]
    },
    "interp": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "xp"
            },
            {
                "name": "fp"
            },
            {
                "default": "None",
                "name": "left"
            },
            {
                "default": "None",
                "name": "right"
            }
        ]
    },
    "interpolate": {
        "args": [
            {
                "name": "value"
            }
        ]
    },
    "intersect1d": {
        "args": [
            {
                "name": "ar1"
            },
            {
                "name": "ar2"
            },
            {
                "default": "False",
                "name": "assume_unique"
            }
        ]
    },
    "inv": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "inverse": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "ipmt": {
        "args": [
            {
                "name": "rate"
            },
            {
                "name": "per"
            },
            {
                "name": "nper"
            },
            {
                "name": "pv"
            },
            {
                "default": "0.0",
                "name": "fv"
            },
            {
                "default": "'end'",
                "name": "when"
            }
        ]
    },
    "irfft": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": "None",
                "name": "n"
            },
            {
                "default": "-1",
                "name": "axis"
            }
        ]
    },
    "irfftn": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": "None",
                "name": "s"
            },
            {
                "default": "None",
                "name": "axes"
            }
        ]
    },
    "irr": {
        "args": [
            {
                "name": "values"
            }
        ]
    },
    "isComplexType": {
        "args": [
            {
                "name": "t"
            }
        ]
    },
    "isMaskedArray": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "isMaskedArray ": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "is_bootstrapping": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "is_free_format": {
        "args": [
            {
                "name": "file"
            }
        ]
    },
    "is_glob_pattern": {
        "args": [
            {
                "name": "s"
            }
        ]
    },
    "is_local_src_dir": {
        "args": [
            {
                "name": "directory"
            }
        ]
    },
    "is_mask": {
        "args": [
            {
                "name": "m"
            }
        ]
    },
    "is_mask ": {
        "args": [
            {
                "name": "m"
            }
        ]
    },
    "is_masked": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "is_npy_no_signal": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "is_npy_no_smp": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "is_released": {
        "args": [
            {
                "name": "config"
            }
        ]
    },
    "is_sequence": {
        "args": [
            {
                "name": "seq"
            }
        ]
    },
    "is_string": {
        "args": [
            {
                "name": "s"
            }
        ]
    },
    "is_win64": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "isallocatable": {
        "args": [
            {
                "name": "var"
            }
        ]
    },
    "isalnum": {
        "args": []
    },
    "isalpha": {
        "args": []
    },
    "isarray": {
        "args": [
            {
                "name": "var"
            }
        ]
    },
    "isarrayofstrings": {
        "args": [
            {
                "name": "var"
            }
        ]
    },
    "ischaracter": {
        "args": [
            {
                "name": "var"
            }
        ]
    },
    "isclose": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "b"
            },
            {
                "default": "1.e-5",
                "name": "rtol"
            },
            {
                "default": "1.e-8",
                "name": "atol"
            },
            {
                "default": "False",
                "name": "equal_nan"
            }
        ]
    },
    "iscomplex": {
        "args": [
            {
                "name": "var"
            }
        ]
    },
    "iscomplexarray": {
        "args": [
            {
                "name": "var"
            }
        ]
    },
    "iscomplexfunction": {
        "args": [
            {
                "name": "rout"
            }
        ]
    },
    "iscomplexfunction_warn": {
        "args": [
            {
                "name": "rout"
            }
        ]
    },
    "iscomplexobj": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "iscontiguous": {
        "args": []
    },
    "iscontiguous ": {
        "args": []
    },
    "isdecimal": {
        "args": []
    },
    "isdigit": {
        "args": []
    },
    "isdouble": {
        "args": [
            {
                "name": "var"
            }
        ]
    },
    "isdummyroutine": {
        "args": [
            {
                "name": "rout"
            }
        ]
    },
    "isexternal": {
        "args": [
            {
                "name": "var"
            }
        ]
    },
    "isfalse": {
        "args": [
            {
                "name": "var"
            }
        ]
    },
    "isfileobj": {
        "args": [
            {
                "name": "f"
            }
        ]
    },
    "isfortran": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "isfunction": {
        "args": [
            {
                "name": "rout"
            }
        ]
    },
    "isfunction_wrap": {
        "args": [
            {
                "name": "rout"
            }
        ]
    },
    "isint1array": {
        "args": [
            {
                "name": "var"
            }
        ]
    },
    "isinteger": {
        "args": [
            {
                "name": "var"
            }
        ]
    },
    "isintent_aligned16": {
        "args": [
            {
                "name": "var"
            }
        ]
    },
    "isintent_aligned4": {
        "args": [
            {
                "name": "var"
            }
        ]
    },
    "isintent_aligned8": {
        "args": [
            {
                "name": "var"
            }
        ]
    },
    "isintent_aux": {
        "args": [
            {
                "name": "var"
            }
        ]
    },
    "isintent_c": {
        "args": [
            {
                "name": "var"
            }
        ]
    },
    "isintent_cache": {
        "args": [
            {
                "name": "var"
            }
        ]
    },
    "isintent_callback": {
        "args": [
            {
                "name": "var"
            }
        ]
    },
    "isintent_copy": {
        "args": [
            {
                "name": "var"
            }
        ]
    },
    "isintent_hide": {
        "args": [
            {
                "name": "var"
            }
        ]
    },
    "isintent_in": {
        "args": [
            {
                "name": "var"
            }
        ]
    },
    "isintent_inout": {
        "args": [
            {
                "name": "var"
            }
        ]
    },
    "isintent_inplace": {
        "args": [
            {
                "name": "var"
            }
        ]
    },
    "isintent_nothide": {
        "args": [
            {
                "name": "var"
            }
        ]
    },
    "isintent_out": {
        "args": [
            {
                "name": "var"
            }
        ]
    },
    "isintent_overwrite": {
        "args": [
            {
                "name": "var"
            }
        ]
    },
    "islogical": {
        "args": [
            {
                "name": "var"
            }
        ]
    },
    "islogicalfunction": {
        "args": [
            {
                "name": "rout"
            }
        ]
    },
    "islong_complex": {
        "args": [
            {
                "name": "var"
            }
        ]
    },
    "islong_double": {
        "args": [
            {
                "name": "var"
            }
        ]
    },
    "islong_doublefunction": {
        "args": [
            {
                "name": "rout"
            }
        ]
    },
    "islong_long": {
        "args": [
            {
                "name": "var"
            }
        ]
    },
    "islong_longfunction": {
        "args": [
            {
                "name": "rout"
            }
        ]
    },
    "islower": {
        "args": []
    },
    "ismodule": {
        "args": [
            {
                "name": "rout"
            }
        ]
    },
    "ismoduleroutine": {
        "args": [
            {
                "name": "rout"
            }
        ]
    },
    "ismutable": {
        "args": [
            {
                "name": "var"
            }
        ]
    },
    "isneginf": {
        "args": [
            {
                "name": "x"
            },
            {
                "default": "None",
                "name": "y"
            }
        ]
    },
    "isnumeric": {
        "args": []
    },
    "isoptional": {
        "args": [
            {
                "name": "var"
            }
        ]
    },
    "isposinf": {
        "args": [
            {
                "name": "x"
            },
            {
                "default": "None",
                "name": "y"
            }
        ]
    },
    "isprivate": {
        "args": [
            {
                "name": "var"
            }
        ]
    },
    "isreal": {
        "args": [
            {
                "name": "var"
            }
        ]
    },
    "isrealobj": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "isrequired": {
        "args": [
            {
                "name": "var"
            }
        ]
    },
    "isroutine": {
        "args": [
            {
                "name": "rout"
            }
        ]
    },
    "isscalar": {
        "args": [
            {
                "name": "var"
            }
        ]
    },
    "issctype": {
        "args": [
            {
                "name": "rep"
            }
        ]
    },
    "issequence": {
        "args": [
            {
                "name": "seq"
            }
        ]
    },
    "issigned_array": {
        "args": [
            {
                "name": "var"
            }
        ]
    },
    "issigned_chararray": {
        "args": [
            {
                "name": "var"
            }
        ]
    },
    "issigned_long_longarray": {
        "args": [
            {
                "name": "var"
            }
        ]
    },
    "issigned_shortarray": {
        "args": [
            {
                "name": "var"
            }
        ]
    },
    "isspace": {
        "args": []
    },
    "isstring": {
        "args": [
            {
                "name": "var"
            }
        ]
    },
    "isstringarray": {
        "args": [
            {
                "name": "var"
            }
        ]
    },
    "isstringfunction": {
        "args": [
            {
                "name": "rout"
            }
        ]
    },
    "issubclass_": {
        "args": [
            {
                "name": "arg1"
            },
            {
                "name": "arg2"
            }
        ]
    },
    "issubdtype": {
        "args": [
            {
                "name": "arg1"
            },
            {
                "name": "arg2"
            }
        ]
    },
    "issubroutine": {
        "args": [
            {
                "name": "rout"
            }
        ]
    },
    "issubroutine_wrap": {
        "args": [
            {
                "name": "rout"
            }
        ]
    },
    "issubsctype": {
        "args": [
            {
                "name": "arg1"
            },
            {
                "name": "arg2"
            }
        ]
    },
    "isthreadsafe": {
        "args": [
            {
                "name": "rout"
            }
        ]
    },
    "istitle": {
        "args": []
    },
    "istrue": {
        "args": [
            {
                "name": "var"
            }
        ]
    },
    "isunsigned": {
        "args": [
            {
                "name": "var"
            }
        ]
    },
    "isunsigned_char": {
        "args": [
            {
                "name": "var"
            }
        ]
    },
    "isunsigned_chararray": {
        "args": [
            {
                "name": "var"
            }
        ]
    },
    "isunsigned_long_long": {
        "args": [
            {
                "name": "var"
            }
        ]
    },
    "isunsigned_long_longarray": {
        "args": [
            {
                "name": "var"
            }
        ]
    },
    "isunsigned_short": {
        "args": [
            {
                "name": "var"
            }
        ]
    },
    "isunsigned_shortarray": {
        "args": [
            {
                "name": "var"
            }
        ]
    },
    "isunsignedarray": {
        "args": [
            {
                "name": "var"
            }
        ]
    },
    "isupper": {
        "args": []
    },
    "item": {
        "args": [
            {
                "name": "*args"
            }
        ]
    },
    "items": {
        "args": []
    },
    "itemset": {
        "args": [
            {
                "name": "*args"
            }
        ]
    },
    "itemsize": {
        "args": []
    },
    "iter_add": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "y"
            },
            {
                "default": "None",
                "name": "out"
            }
        ]
    },
    "iter_add_py": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "y"
            },
            {
                "default": "None",
                "name": "out"
            }
        ]
    },
    "iterable": {
        "args": [
            {
                "name": "y"
            }
        ]
    },
    "iteritems": {
        "args": []
    },
    "iterkeys": {
        "args": []
    },
    "ix_": {
        "args": [
            {
                "name": "*args"
            }
        ]
    },
    "izip_records": {
        "args": [
            {
                "name": "seqarrays"
            },
            {
                "default": "None",
                "name": "fill_value"
            },
            {
                "default": "True",
                "name": "flatten"
            }
        ]
    },
    "join": {
        "args": [
            {
                "name": "seq"
            }
        ]
    },
    "join_by": {
        "args": [
            {
                "name": "key"
            },
            {
                "name": "r1"
            },
            {
                "name": "r2"
            },
            {
                "default": "'inner'",
                "name": "jointype"
            },
            {
                "default": "'1'",
                "name": "r1postfix"
            },
            {
                "default": "'2'",
                "name": "r2postfix"
            },
            {
                "name": ""
            }
        ]
    },
    "kaiser": {
        "args": [
            {
                "name": "M"
            },
            {
                "name": "beta"
            }
        ]
    },
    "keys": {
        "args": []
    },
    "kron": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "b"
            }
        ]
    },
    "kwargs.setault": {
        "args": [
            {
                "name": "kw"
            },
            {
                "name": "kwaults[kw]"
            }
        ]
    },
    "l = atlas_info.get": {
        "args": [
            {
                "name": "'ine_macros'"
            },
            {
                "name": "[]"
            }
        ]
    },
    "l_and": {
        "args": [
            {
                "name": "*f"
            }
        ]
    },
    "l_not": {
        "args": [
            {
                "name": "f"
            }
        ]
    },
    "l_or": {
        "args": [
            {
                "name": "*f"
            }
        ]
    },
    "lag2poly": {
        "args": [
            {
                "name": "c)"
            }
        ]
    },
    "lagadd": {
        "args": [
            {
                "name": "c1"
            },
            {
                "name": "c2"
            }
        ]
    },
    "lagcompanion": {
        "args": [
            {
                "name": "c"
            }
        ]
    },
    "lagder": {
        "args": [
            {
                "name": "c"
            },
            {
                "default": "1",
                "name": "m"
            },
            {
                "default": "1",
                "name": "scl"
            },
            {
                "default": "0)",
                "name": "axis"
            }
        ]
    },
    "lagdiv": {
        "args": [
            {
                "name": "c1"
            },
            {
                "name": "c2"
            }
        ]
    },
    "lagfit": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "y"
            },
            {
                "name": "deg"
            },
            {
                "default": "None",
                "name": "rcond"
            },
            {
                "default": "False",
                "name": "full"
            },
            {
                "default": "None",
                "name": "w"
            }
        ]
    },
    "lagfromroots": {
        "args": [
            {
                "name": "roots)"
            }
        ]
    },
    "laggauss": {
        "args": [
            {
                "name": "deg"
            }
        ]
    },
    "laggrid2d": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "y"
            },
            {
                "name": "c"
            }
        ]
    },
    "laggrid3d": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "y"
            },
            {
                "name": "z"
            },
            {
                "name": "c"
            }
        ]
    },
    "lagint": {
        "args": [
            {
                "name": "c"
            },
            {
                "default": "1",
                "name": "m"
            },
            {
                "default": "[]",
                "name": "k"
            },
            {
                "default": "0",
                "name": "lbnd"
            },
            {
                "default": "1",
                "name": "scl"
            },
            {
                "default": "0",
                "name": "axis"
            }
        ]
    },
    "lagline": {
        "args": [
            {
                "name": "off"
            },
            {
                "name": "scl)"
            }
        ]
    },
    "lagmul": {
        "args": [
            {
                "name": "c1"
            },
            {
                "name": "c2"
            }
        ]
    },
    "lagmulx": {
        "args": [
            {
                "name": "c"
            }
        ]
    },
    "lagpow": {
        "args": [
            {
                "name": "c"
            },
            {
                "name": "pow"
            },
            {
                "default": "16)",
                "name": "maxpower"
            }
        ]
    },
    "lagroots": {
        "args": [
            {
                "name": "c"
            }
        ]
    },
    "lagsub": {
        "args": [
            {
                "name": "c1"
            },
            {
                "name": "c2"
            }
        ]
    },
    "lagval": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "c"
            },
            {
                "default": "True",
                "name": "tensor"
            }
        ]
    },
    "lagval2d": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "y"
            },
            {
                "name": "c"
            }
        ]
    },
    "lagval3d": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "y"
            },
            {
                "name": "z"
            },
            {
                "name": "c"
            }
        ]
    },
    "lagvander": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "deg)"
            }
        ]
    },
    "lagvander2d": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "y"
            },
            {
                "name": "deg)"
            }
        ]
    },
    "lagvander3d": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "y"
            },
            {
                "name": "z"
            },
            {
                "name": "deg)"
            }
        ]
    },
    "lagweight": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "left_shift ": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "n"
            }
        ]
    },
    "leg2poly": {
        "args": [
            {
                "name": "c)"
            }
        ]
    },
    "legadd": {
        "args": [
            {
                "name": "c1"
            },
            {
                "name": "c2"
            }
        ]
    },
    "legcompanion": {
        "args": [
            {
                "name": "c"
            }
        ]
    },
    "legder": {
        "args": [
            {
                "name": "c"
            },
            {
                "default": "1",
                "name": "m"
            },
            {
                "default": "1",
                "name": "scl"
            },
            {
                "default": "0)",
                "name": "axis"
            }
        ]
    },
    "legdiv": {
        "args": [
            {
                "name": "c1"
            },
            {
                "name": "c2"
            }
        ]
    },
    "legfit": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "y"
            },
            {
                "name": "deg"
            },
            {
                "default": "None",
                "name": "rcond"
            },
            {
                "default": "False",
                "name": "full"
            },
            {
                "default": "None",
                "name": "w"
            }
        ]
    },
    "legfromroots": {
        "args": [
            {
                "name": "roots)"
            }
        ]
    },
    "leggauss": {
        "args": [
            {
                "name": "deg"
            }
        ]
    },
    "leggrid2d": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "y"
            },
            {
                "name": "c"
            }
        ]
    },
    "leggrid3d": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "y"
            },
            {
                "name": "z"
            },
            {
                "name": "c"
            }
        ]
    },
    "legint": {
        "args": [
            {
                "name": "c"
            },
            {
                "default": "1",
                "name": "m"
            },
            {
                "default": "[]",
                "name": "k"
            },
            {
                "default": "0",
                "name": "lbnd"
            },
            {
                "default": "1",
                "name": "scl"
            },
            {
                "default": "0",
                "name": "axis"
            }
        ]
    },
    "legline": {
        "args": [
            {
                "name": "off"
            },
            {
                "name": "scl)"
            }
        ]
    },
    "legmul": {
        "args": [
            {
                "name": "c1"
            },
            {
                "name": "c2"
            }
        ]
    },
    "legmulx": {
        "args": [
            {
                "name": "c"
            }
        ]
    },
    "legpow": {
        "args": [
            {
                "name": "c"
            },
            {
                "name": "pow"
            },
            {
                "default": "16)",
                "name": "maxpower"
            }
        ]
    },
    "legroots": {
        "args": [
            {
                "name": "c"
            }
        ]
    },
    "legsub": {
        "args": [
            {
                "name": "c1"
            },
            {
                "name": "c2"
            }
        ]
    },
    "legval": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "c"
            },
            {
                "default": "True",
                "name": "tensor"
            }
        ]
    },
    "legval2d": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "y"
            },
            {
                "name": "c"
            }
        ]
    },
    "legval3d": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "y"
            },
            {
                "name": "z"
            },
            {
                "name": "c"
            }
        ]
    },
    "legvander": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "deg)"
            }
        ]
    },
    "legvander2d": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "y"
            },
            {
                "name": "deg)"
            }
        ]
    },
    "legvander3d": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "y"
            },
            {
                "name": "z"
            },
            {
                "name": "deg)"
            }
        ]
    },
    "legweight": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "less": {
        "args": [
            {
                "name": "x1"
            },
            {
                "name": "x2"
            }
        ]
    },
    "less_equal": {
        "args": [
            {
                "name": "x1"
            },
            {
                "name": "x2"
            }
        ]
    },
    "libfile, file = parse_cmd": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "libpaths": {
        "args": [
            {
                "name": "paths"
            },
            {
                "name": "bits"
            }
        ]
    },
    "library_dir_option": {
        "args": [
            {
                "name": "dir"
            }
        ]
    },
    "library_extensions": {
        "args": []
    },
    "library_option": {
        "args": [
            {
                "name": "lib"
            }
        ]
    },
    "libs": {
        "args": [
            {
                "default": "\"ault\"",
                "name": "section"
            }
        ]
    },
    "line breaks ": {
        "args": [
            {
                "name": "ault 75)."
            }
        ]
    },
    "linear_least_squares": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "b"
            },
            {
                "default": "1.e-10",
                "name": "rcond"
            }
        ]
    },
    "link": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "linspace": {
        "args": [
            {
                "name": "start"
            },
            {
                "name": "stop"
            },
            {
                "default": "50",
                "name": "num"
            },
            {
                "default": "True",
                "name": "endpoint"
            },
            {
                "default": "False",
                "name": "retstep"
            }
        ]
    },
    "list.append": {
        "args": [
            {
                "name": "'FORCE_NO_LONG_DOUBLE_FORMATTING'"
            }
        ]
    },
    "listrepl": {
        "args": [
            {
                "name": "mobj"
            }
        ]
    },
    "ljust": {
        "args": [
            {
                "name": "width"
            },
            {
                "default": "' '",
                "name": "fillchar"
            }
        ]
    },
    "load": {
        "args": [
            {
                "name": "file"
            }
        ]
    },
    "load_array": {
        "args": []
    },
    "load_library": {
        "args": [
            {
                "name": "libname"
            },
            {
                "name": "loader_path"
            }
        ]
    },
    "loads": {
        "args": [
            {
                "name": "astr"
            }
        ]
    },
    "loadtxt": {
        "args": [
            {
                "name": "fname"
            },
            {
                "default": "float",
                "name": "dtype"
            },
            {
                "default": "'#'",
                "name": "comments"
            },
            {
                "default": "None",
                "name": "delimiter"
            },
            {
                "name": ""
            }
        ]
    },
    "log": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "log.info": {
        "args": [
            {
                "name": "'extending extension %r ined_macros with %r'"
            }
        ]
    },
    "log.warn": {
        "args": [
            {
                "name": "'expected %r but source %r ines %r swig target' \\"
            }
        ]
    },
    "log10": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "log2": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "logn": {
        "args": [
            {
                "name": "n"
            },
            {
                "name": "x"
            }
        ]
    },
    "logspace": {
        "args": [
            {
                "name": "start"
            },
            {
                "name": "stop"
            },
            {
                "default": "50",
                "name": "num"
            },
            {
                "default": "True",
                "name": "endpoint"
            },
            {
                "default": "10.0",
                "name": "base"
            }
        ]
    },
    "long_double_representation": {
        "args": [
            {
                "name": "lines"
            }
        ]
    },
    "lookfor": {
        "args": [
            {
                "name": "what"
            },
            {
                "default": "None",
                "name": "module"
            },
            {
                "default": "True",
                "name": "import_modules"
            },
            {
                "default": "False",
                "name": "regenerate"
            },
            {
                "name": ""
            }
        ]
    },
    "lower": {
        "args": []
    },
    "lstrip": {
        "args": [
            {
                "default": "None",
                "name": "chars"
            }
        ]
    },
    "lstsq": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "b"
            },
            {
                "default": "-1",
                "name": "rcond"
            }
        ]
    },
    "luf": {
        "args": [
            {
                "name": "lamdaexpr"
            },
            {
                "name": "*args"
            },
            {
                "name": "**kwargs"
            }
        ]
    },
    "mafromtxt": {
        "args": [
            {
                "name": "fname"
            },
            {
                "name": "**kwargs"
            }
        ]
    },
    "magic": {
        "args": [
            {
                "name": "major"
            },
            {
                "name": "minor"
            }
        ]
    },
    "main": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "make_config_py": {
        "args": [
            {
                "default": "'__config__'",
                "name": "name"
            }
        ]
    },
    "make_hg_version_py": {
        "args": [
            {
                "default": "True",
                "name": "delete"
            }
        ]
    },
    "make_mask": {
        "args": [
            {
                "name": "m"
            },
            {
                "default": "False",
                "name": "copy"
            },
            {
                "default": "True",
                "name": "shrink"
            },
            {
                "default": "MaskType",
                "name": "dtype"
            }
        ]
    },
    "make_mask ": {
        "args": [
            {
                "name": "m"
            },
            {
                "default": "0",
                "name": "copy"
            },
            {
                "default": "0",
                "name": "flag"
            }
        ]
    },
    "make_mask_descr": {
        "args": [
            {
                "name": "ndtype"
            }
        ]
    },
    "make_mask_none": {
        "args": [
            {
                "name": "newshape"
            },
            {
                "default": "None",
                "name": "dtype"
            }
        ]
    },
    "make_mask_none ": {
        "args": [
            {
                "name": "s"
            }
        ]
    },
    "make_svn_version_py": {
        "args": [
            {
                "default": "True",
                "name": "delete"
            }
        ]
    },
    "make_temp_file": {
        "args": [
            {
                "default": "''",
                "name": "suffix"
            },
            {
                "default": "''",
                "name": "prefix"
            },
            {
                "default": "True",
                "name": "text"
            }
        ]
    },
    "makenewfile": {
        "args": [
            {
                "name": "name"
            },
            {
                "name": "filestr"
            }
        ]
    },
    "manifest_name": {
        "args": [
            {
                "name": "config"
            }
        ]
    },
    "manifest_rc": {
        "args": [
            {
                "name": "name"
            },
            {
                "default": "'dll'",
                "name": "type"
            }
        ]
    },
    "mapdomain": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "old"
            },
            {
                "name": "new)"
            }
        ]
    },
    "mapparms": {
        "args": [
            {
                "name": "old"
            },
            {
                "name": "new)"
            }
        ]
    },
    "markinnerspaces": {
        "args": [
            {
                "name": "line"
            }
        ]
    },
    "markoutercomma": {
        "args": [
            {
                "name": "line"
            },
            {
                "default": "'",
                "name": "comma"
            },
            {
                "name": "'"
            }
        ]
    },
    "markouterparen": {
        "args": [
            {
                "name": "line"
            }
        ]
    },
    "mask_cols": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": "None",
                "name": "axis"
            }
        ]
    },
    "mask_indices": {
        "args": [
            {
                "name": "n"
            },
            {
                "name": "mask_func"
            },
            {
                "default": "0",
                "name": "k"
            }
        ]
    },
    "mask_or ": {
        "args": [
            {
                "name": "m1"
            },
            {
                "name": "m2"
            }
        ]
    },
    "mask_rowcols": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": "None",
                "name": "axis"
            }
        ]
    },
    "mask_rows": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": "None",
                "name": "axis"
            }
        ]
    },
    "masked_all": {
        "args": [
            {
                "name": "shape"
            },
            {
                "default": "float",
                "name": "dtype"
            }
        ]
    },
    "masked_all_like": {
        "args": [
            {
                "name": "arr"
            }
        ]
    },
    "masked_array ": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": "nomask",
                "name": "mask"
            },
            {
                "default": "None",
                "name": "fill_value"
            }
        ]
    },
    "masked_equal": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "value"
            },
            {
                "default": "1",
                "name": "copy"
            }
        ]
    },
    "masked_greater": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "value"
            },
            {
                "default": "1",
                "name": "copy"
            }
        ]
    },
    "masked_greater_equal": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "value"
            },
            {
                "default": "1",
                "name": "copy"
            }
        ]
    },
    "masked_inside": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "v1"
            },
            {
                "name": "v2"
            },
            {
                "default": "1",
                "name": "copy"
            }
        ]
    },
    "masked_invalid": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": "True",
                "name": "copy"
            }
        ]
    },
    "masked_less": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "value"
            },
            {
                "default": "1",
                "name": "copy"
            }
        ]
    },
    "masked_less_equal": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "value"
            },
            {
                "default": "1",
                "name": "copy"
            }
        ]
    },
    "masked_not_equal": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "value"
            },
            {
                "default": "1",
                "name": "copy"
            }
        ]
    },
    "masked_object": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "value"
            },
            {
                "default": "True",
                "name": "copy"
            },
            {
                "default": "True",
                "name": "shrink"
            }
        ]
    },
    "masked_object ": {
        "args": [
            {
                "name": "data"
            },
            {
                "name": "value"
            },
            {
                "default": "1",
                "name": "copy"
            }
        ]
    },
    "masked_outside": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "v1"
            },
            {
                "name": "v2"
            },
            {
                "default": "1",
                "name": "copy"
            }
        ]
    },
    "masked_values": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "value"
            },
            {
                "default": "1e-5",
                "name": "rtol"
            },
            {
                "default": "1e-8",
                "name": "atol"
            },
            {
                "default": "True",
                "name": "copy"
            },
            {
                "default": "True",
                "name": "shrink"
            }
        ]
    },
    "masked_values ": {
        "args": [
            {
                "name": "data"
            },
            {
                "name": "value"
            },
            {
                "default": "1.e-5",
                "name": "rtol"
            },
            {
                "default": "1.e-8",
                "name": "atol"
            },
            {
                "default": "1",
                "name": "copy"
            }
        ]
    },
    "masked_where": {
        "args": [
            {
                "name": "condition"
            },
            {
                "name": "x"
            },
            {
                "default": "1",
                "name": "copy"
            }
        ]
    },
    "matcher": {
        "args": [
            {
                "name": "version_string"
            }
        ]
    },
    "matrix_power": {
        "args": [
            {
                "name": "M"
            },
            {
                "name": "n"
            }
        ]
    },
    "matrix_rank": {
        "args": [
            {
                "name": "M"
            },
            {
                "default": "None",
                "name": "tol"
            }
        ]
    },
    "max": {
        "args": []
    },
    "maximum_fill_value": {
        "args": [
            {
                "name": "obj"
            }
        ]
    },
    "maximum_fill_value ": {
        "args": [
            {
                "name": "obj"
            }
        ]
    },
    "maximum_sctype": {
        "args": [
            {
                "name": "t"
            }
        ]
    },
    "mdtype = [": {
        "args": [
            {
                "name": "aultfmt % i"
            },
            {
                "name": "np.bool"
            }
        ]
    },
    "mean": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": "None",
                "name": "axis"
            },
            {
                "default": "None",
                "name": "dtype"
            },
            {
                "default": "None",
                "name": "out"
            },
            {
                "default": "False",
                "name": "keepdims"
            }
        ]
    },
    "mean_var_test": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "type"
            },
            {
                "name": "mean"
            },
            {
                "name": "var"
            },
            {
                "default": "[]",
                "name": "skew"
            }
        ]
    },
    "median": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": "None",
                "name": "axis"
            },
            {
                "default": "None",
                "name": "out"
            },
            {
                "default": "False",
                "name": "overwrite_input"
            }
        ]
    },
    "merge_arrays": {
        "args": [
            {
                "name": "seqarrays"
            },
            {
                "name": ""
            }
        ]
    },
    "meshgrid": {
        "args": [
            {
                "name": "*xi"
            },
            {
                "name": "**kwargs"
            }
        ]
    },
    "meth = getattr": {
        "args": [
            {
                "name": "'visit' + cls.__name__"
            },
            {
                "name": "self.ault"
            }
        ]
    },
    "mfillv = [ma.ault_fill_value": {
        "args": [
            {
                "name": "f) for f in vartypes]"
            }
        ]
    },
    "min": {
        "args": []
    },
    "mingw32": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "mini": {
        "args": [
            {
                "default": "None",
                "name": "axis"
            }
        ]
    },
    "minimum_fill_value": {
        "args": [
            {
                "name": "obj"
            }
        ]
    },
    "minimum_fill_value ": {
        "args": [
            {
                "name": "obj"
            }
        ]
    },
    "minrelpath": {
        "args": [
            {
                "name": "path"
            }
        ]
    },
    "mintypecode": {
        "args": [
            {
                "name": "typechars"
            },
            {
                "default": "'GDFgdf'",
                "name": "typeset"
            },
            {
                "default": "'d'",
                "name": "ault"
            }
        ]
    },
    "mirr": {
        "args": [
            {
                "name": "values"
            },
            {
                "name": "finance_rate"
            },
            {
                "name": "reinvest_rate"
            }
        ]
    },
    "mod": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "values"
            }
        ]
    },
    "mode : {'raise' ": {
        "args": [
            {
                "name": "ault)"
            },
            {
                "name": "'wrap'"
            },
            {
                "name": "'clip'}"
            },
            {
                "name": "optional"
            }
        ]
    },
    "modsign2map": {
        "args": [
            {
                "name": "m"
            }
        ]
    },
    "mores, ignored = cocache.check_types": {
        "args": [
            {
                "name": "config_cmd"
            },
            {
                "name": "ext"
            },
            {
                "name": "build_dir"
            }
        ]
    },
    "mores.append": {
        "args": [
            {
                "name": "'__NPY_PRIVATE_NO_SIGNAL'"
            }
        ]
    },
    "msg = 'line %d: no inition of key \"%s\"'%": {
        "args": [
            {
                "name": "line"
            },
            {
                "name": "name"
            }
        ]
    },
    "msort": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "msvc_manifest_xml": {
        "args": [
            {
                "name": "maj"
            },
            {
                "name": "min"
            }
        ]
    },
    "msvc_runtime_library": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "msvc_version": {
        "args": [
            {
                "name": "compiler"
            }
        ]
    },
    "multinomial": {
        "args": [
            {
                "name": "trials"
            },
            {
                "name": "probs"
            },
            {
                "default": "[]",
                "name": "shape"
            }
        ]
    },
    "multiply": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "i"
            }
        ]
    },
    "multivariate_normal": {
        "args": [
            {
                "name": "mean"
            },
            {
                "name": "cov"
            },
            {
                "default": "[]",
                "name": "shape"
            }
        ]
    },
    "myeval": {
        "args": [
            {
                "name": "e"
            },
            {
                "default": "None",
                "name": "g"
            },
            {
                "default": "None",
                "name": "l"
            }
        ]
    },
    "name_value = ine_macros[i].split": {
        "args": [
            {
                "default": "'",
                "name": "'"
            },
            {
                "name": "1"
            }
        ]
    },
    "namerepl": {
        "args": [
            {
                "name": "mobj"
            }
        ]
    },
    "nan_to_num": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "nanargmax": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": "None",
                "name": "axis"
            }
        ]
    },
    "nanargmin": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": "None",
                "name": "axis"
            }
        ]
    },
    "nanmax": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": "None",
                "name": "axis"
            },
            {
                "default": "None",
                "name": "out"
            },
            {
                "default": "False",
                "name": "keepdims"
            }
        ]
    },
    "nanmean": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": "None",
                "name": "axis"
            },
            {
                "default": "None",
                "name": "dtype"
            },
            {
                "default": "None",
                "name": "out"
            },
            {
                "default": "False",
                "name": "keepdims"
            }
        ]
    },
    "nanmin": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": "None",
                "name": "axis"
            },
            {
                "default": "None",
                "name": "out"
            },
            {
                "default": "False",
                "name": "keepdims"
            }
        ]
    },
    "nanstd": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": "None",
                "name": "axis"
            },
            {
                "default": "None",
                "name": "dtype"
            },
            {
                "default": "None",
                "name": "out"
            },
            {
                "default": "0",
                "name": "ddof"
            },
            {
                "default": "False",
                "name": "keepdims"
            }
        ]
    },
    "nansum": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": "None",
                "name": "axis"
            },
            {
                "default": "None",
                "name": "dtype"
            },
            {
                "default": "None",
                "name": "out"
            },
            {
                "default": "0",
                "name": "keepdims"
            }
        ]
    },
    "nanvar": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": "None",
                "name": "axis"
            },
            {
                "default": "None",
                "name": "dtype"
            },
            {
                "default": "None",
                "name": "out"
            },
            {
                "default": "0",
                "name": "ddof"
            },
            {
                "default": "False",
                "name": "keepdims"
            }
        ]
    },
    "ndfromtxt": {
        "args": [
            {
                "name": "fname"
            },
            {
                "name": "**kwargs"
            }
        ]
    },
    "ndim": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "ndincr": {
        "args": []
    },
    "ndpointer": {
        "args": [
            {
                "default": "None",
                "name": "dtype"
            },
            {
                "default": "None",
                "name": "ndim"
            },
            {
                "default": "None",
                "name": "shape"
            },
            {
                "default": "None",
                "name": "flags"
            }
        ]
    },
    "needs_mingw_ftime_workaround": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "negative ": {
        "args": [
            {
                "name": "the ault)"
            },
            {
                "name": "the count will be determined from the"
            }
        ]
    },
    "negative_binomial": {
        "args": [
            {
                "name": "trials"
            },
            {
                "name": "p"
            },
            {
                "default": "[]",
                "name": "shape"
            }
        ]
    },
    "new_average ": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": "None",
                "name": "axis"
            },
            {
                "default": "None",
                "name": "weights"
            },
            {
                "default": " 0",
                "name": "returned "
            }
        ]
    },
    "new_compiler ": {
        "args": [
            {
                "default": "None",
                "name": "plat"
            },
            {
                "name": ""
            }
        ]
    },
    "new_repeat": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "repeats"
            },
            {
                "default": "None",
                "name": "axis"
            }
        ]
    },
    "new_take ": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "indices"
            },
            {
                "default": "None",
                "name": "axis"
            },
            {
                "default": "None",
                "name": "out"
            },
            {
                "default": "'raise'",
                "name": "mode"
            }
        ]
    },
    "newfunc": {
        "args": [
            {
                "name": "*args"
            },
            {
                "name": "**kwds"
            }
        ]
    },
    "newobj": {
        "args": [
            {
                "name": "type"
            }
        ]
    },
    "next_token": {
        "args": [
            {
                "name": "t"
            }
        ]
    },
    "njoin": {
        "args": [
            {
                "name": "*path"
            }
        ]
    },
    "nm_cmd = '%s %s' % ": {
        "args": [
            {
                "name": "lib2.DEFAULT_NM"
            },
            {
                "name": "lib_file"
            }
        ]
    },
    "nm_output = lib2.getnm": {
        "args": [
            {
                "name": "nm_cmd"
            }
        ]
    },
    "nmask ": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "noncentral_F": {
        "args": [
            {
                "name": "dfn"
            },
            {
                "name": "dfd"
            },
            {
                "name": "nconc"
            },
            {
                "default": "[]",
                "name": "shape"
            }
        ]
    },
    "noncentral_chi_square": {
        "args": [
            {
                "name": "df"
            },
            {
                "name": "nconc"
            },
            {
                "default": "[]",
                "name": "shape"
            }
        ]
    },
    "nonzero": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "norm": {
        "args": [
            {
                "name": "x"
            },
            {
                "default": "None",
                "name": "ord"
            },
            {
                "default": "None",
                "name": "axis"
            }
        ]
    },
    "normal": {
        "args": [
            {
                "name": "mean"
            },
            {
                "name": "std"
            },
            {
                "default": "[]",
                "name": "shape"
            }
        ]
    },
    "not_equal": {
        "args": [
            {
                "name": "x1"
            },
            {
                "name": "x2"
            }
        ]
    },
    "not_implemented": {
        "args": [
            {
                "name": "*args"
            },
            {
                "name": "**kwds"
            }
        ]
    },
    "notmasked_contiguous": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": "None",
                "name": "axis"
            }
        ]
    },
    "notmasked_edges": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": "None",
                "name": "axis"
            }
        ]
    },
    "nper": {
        "args": [
            {
                "name": "rate"
            },
            {
                "name": "pmt"
            },
            {
                "name": "pv"
            },
            {
                "default": "0",
                "name": "fv"
            },
            {
                "default": "'end'",
                "name": "when"
            }
        ]
    },
    "npv": {
        "args": [
            {
                "name": "rate"
            },
            {
                "name": "values"
            }
        ]
    },
    "nz": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "obj2sctype": {
        "args": [
            {
                "name": "rep"
            },
            {
                "default": "None",
                "name": "ault"
            }
        ]
    },
    "object_filenames ": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "old_sdist.add_aults": {
        "args": []
    },
    "ones": {
        "args": [
            {
                "name": "shape"
            },
            {
                "default": "None",
                "name": "dtype"
            },
            {
                "default": "'C'",
                "name": "order"
            }
        ]
    },
    "ones ": {
        "args": [
            {
                "name": "shape"
            },
            {
                "default": "float",
                "name": "dtype"
            }
        ]
    },
    "ones_like": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": "None",
                "name": "dtype"
            },
            {
                "default": "'K'",
                "name": "order"
            },
            {
                "default": "True",
                "name": "subok"
            }
        ]
    },
    "open_latin1": {
        "args": [
            {
                "name": "filename"
            },
            {
                "default": "'r'",
                "name": "mode"
            }
        ]
    },
    "open_memmap": {
        "args": [
            {
                "name": "filename"
            },
            {
                "default": "'r+'",
                "name": "mode"
            },
            {
                "default": "None",
                "name": "dtype"
            },
            {
                "default": "None",
                "name": "shape"
            },
            {
                "name": ""
            }
        ]
    },
    "openfile": {
        "args": [
            {
                "name": "fname"
            }
        ]
    },
    "opt.append": {
        "args": [
            {
                "name": "'-Wl"
            },
            {
                "name": "-bundle"
            },
            {
                "name": "-flat_namespace"
            },
            {
                "name": "-unined"
            },
            {
                "name": "suppress'"
            }
        ]
    },
    "opt.extend": {
        "args": [
            {
                "name": "['-unined'"
            },
            {
                "name": "'dynamic_lookup'"
            },
            {
                "name": "'-bundle']"
            }
        ]
    },
    "or 'Any' order ": {
        "args": [
            {
                "name": "the ault is 'C'-order). 'Any' order means C-order"
            }
        ]
    },
    "os.remove": {
        "args": [
            {
                "name": "_file"
            }
        ]
    },
    "outer": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "b"
            }
        ]
    },
    "outer ": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "b"
            }
        ]
    },
    "outer_it": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "y"
            },
            {
                "default": "None",
                "name": "out"
            }
        ]
    },
    "outmess": {
        "args": [
            {
                "name": "'var2fixfortran: No inition for argument \"%s\".\\n'%a"
            }
        ]
    },
    "output_": {
        "args": [
            {
                "name": "dlist"
            },
            {
                "name": "flist"
            },
            {
                "name": "DEF_HEADER"
            },
            {
                "name": "file"
            }
        ]
    },
    "pack_items": {
        "args": [
            {
                "name": "items"
            },
            {
                "name": "packing"
            }
        ]
    },
    "pad": {
        "args": [
            {
                "name": "array"
            },
            {
                "name": "pad_width"
            },
            {
                "default": "None",
                "name": "mode"
            },
            {
                "name": "**kwargs"
            }
        ]
    },
    "paren_repl": {
        "args": [
            {
                "name": "obj"
            }
        ]
    },
    "parse_cmd": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "parse_config": {
        "args": [
            {
                "name": "filename"
            },
            {
                "default": "None",
                "name": "dirs"
            }
        ]
    },
    "parse_config_files": {
        "args": []
    },
    "parse_flags": {
        "args": [
            {
                "name": "line"
            }
        ]
    },
    "parse_loop_header": {
        "args": [
            {
                "name": "loophead)"
            }
        ]
    },
    "parse_meta": {
        "args": [
            {
                "name": "config"
            }
        ]
    },
    "parse_nm": {
        "args": [
            {
                "name": "nm_output"
            }
        ]
    },
    "parse_sections": {
        "args": [
            {
                "name": "config"
            }
        ]
    },
    "parse_string": {
        "args": [
            {
                "name": "astr"
            },
            {
                "name": "env"
            },
            {
                "name": "level"
            },
            {
                "name": "line)"
            }
        ]
    },
    "parse_structure": {
        "args": [
            {
                "name": "astr"
            }
        ]
    },
    "parse_values": {
        "args": [
            {
                "name": "astr"
            }
        ]
    },
    "parse_variables": {
        "args": [
            {
                "name": "config"
            }
        ]
    },
    "parser.add_option": {
        "args": [
            {
                "name": "\"--ine-variable\""
            },
            {
                "default": "\"ine_variable\"",
                "name": "dest"
            },
            {
                "name": ""
            }
        ]
    },
    "partition": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "kth"
            },
            {
                "default": "-1",
                "name": "axis"
            },
            {
                "default": "'introselect'",
                "name": "kind"
            },
            {
                "default": "None",
                "name": "order"
            }
        ]
    },
    "path = os.environ.get": {
        "args": [
            {
                "name": "'PATH'"
            },
            {
                "name": "os.path"
            }
        ]
    },
    "paths": {
        "args": [
            {
                "name": "*paths"
            },
            {
                "name": "**kws"
            }
        ]
    },
    "percentile": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "q"
            },
            {
                "default": "None",
                "name": "axis"
            },
            {
                "default": "None",
                "name": "out"
            },
            {
                "default": "False",
                "name": "overwrite_input"
            }
        ]
    },
    "permutation": {
        "args": [
            {
                "name": "n"
            }
        ]
    },
    "pickle_array": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "piecewise": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "condlist"
            },
            {
                "name": "funclist"
            },
            {
                "name": "*args"
            },
            {
                "name": "**kw"
            }
        ]
    },
    "pinv": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": "1e-15",
                "name": "rcond"
            }
        ]
    },
    "pkg_to_filename": {
        "args": [
            {
                "name": "pkg_name"
            }
        ]
    },
    "place": {
        "args": [
            {
                "name": "arr"
            },
            {
                "name": "mask"
            },
            {
                "name": "vals"
            }
        ]
    },
    "pmt": {
        "args": [
            {
                "name": "rate"
            },
            {
                "name": "nper"
            },
            {
                "name": "pv"
            },
            {
                "default": "0",
                "name": "fv"
            },
            {
                "default": "'end'",
                "name": "when"
            }
        ]
    },
    "points `": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "y)`. The pseudo-Vandermonde matrix is ined by"
            }
        ]
    },
    "poisson": {
        "args": [
            {
                "name": "mean"
            },
            {
                "default": "[]",
                "name": "shape"
            }
        ]
    },
    "poly": {
        "args": [
            {
                "name": "seq_of_zeros"
            }
        ]
    },
    "poly2cheb": {
        "args": [
            {
                "name": "pol)"
            }
        ]
    },
    "poly2herm": {
        "args": [
            {
                "name": "pol)"
            }
        ]
    },
    "poly2herme": {
        "args": [
            {
                "name": "pol)"
            }
        ]
    },
    "poly2lag": {
        "args": [
            {
                "name": "pol)"
            }
        ]
    },
    "poly2leg": {
        "args": [
            {
                "name": "pol)"
            }
        ]
    },
    "polyadd": {
        "args": [
            {
                "name": "a1"
            },
            {
                "name": "a2"
            }
        ]
    },
    "polycompanion": {
        "args": [
            {
                "name": "c"
            }
        ]
    },
    "polyder": {
        "args": [
            {
                "name": "p"
            },
            {
                "default": "1",
                "name": "m"
            }
        ]
    },
    "polydiv": {
        "args": [
            {
                "name": "u"
            },
            {
                "name": "v"
            }
        ]
    },
    "polyfit": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "y"
            },
            {
                "name": "deg"
            },
            {
                "default": "None",
                "name": "rcond"
            },
            {
                "default": "False",
                "name": "full"
            },
            {
                "default": "None",
                "name": "w"
            },
            {
                "default": "False",
                "name": "cov"
            }
        ]
    },
    "polyfromroots": {
        "args": [
            {
                "name": "roots)"
            }
        ]
    },
    "polygrid2d": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "y"
            },
            {
                "name": "c"
            }
        ]
    },
    "polygrid3d": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "y"
            },
            {
                "name": "z"
            },
            {
                "name": "c"
            }
        ]
    },
    "polyint": {
        "args": [
            {
                "name": "p"
            },
            {
                "default": "1",
                "name": "m"
            },
            {
                "default": "None",
                "name": "k"
            }
        ]
    },
    "polyline": {
        "args": [
            {
                "name": "off"
            },
            {
                "name": "scl)"
            }
        ]
    },
    "polymul": {
        "args": [
            {
                "name": "a1"
            },
            {
                "name": "a2"
            }
        ]
    },
    "polymulx": {
        "args": [
            {
                "name": "c"
            }
        ]
    },
    "polypow": {
        "args": [
            {
                "name": "c"
            },
            {
                "name": "pow"
            },
            {
                "default": "None)",
                "name": "maxpower"
            }
        ]
    },
    "polyroots": {
        "args": [
            {
                "name": "c"
            }
        ]
    },
    "polysub": {
        "args": [
            {
                "name": "a1"
            },
            {
                "name": "a2"
            }
        ]
    },
    "polyval": {
        "args": [
            {
                "name": "p"
            },
            {
                "name": "x"
            }
        ]
    },
    "polyval2d": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "y"
            },
            {
                "name": "c"
            }
        ]
    },
    "polyval3d": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "y"
            },
            {
                "name": "z"
            },
            {
                "name": "c"
            }
        ]
    },
    "polyvander": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "deg)"
            }
        ]
    },
    "polyvander2d": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "y"
            },
            {
                "name": "deg)"
            }
        ]
    },
    "polyvander3d": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "y"
            },
            {
                "name": "z"
            },
            {
                "name": "deg)"
            }
        ]
    },
    "postcrack": {
        "args": [
            {
                "name": "block"
            },
            {
                "default": "None",
                "name": "args"
            },
            {
                "default": "''",
                "name": "tab"
            }
        ]
    },
    "postcrack2": {
        "args": [
            {
                "name": "block"
            },
            {
                "default": "''",
                "name": "tab"
            },
            {
                "default": "None",
                "name": "param_map"
            }
        ]
    },
    "power": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "p"
            }
        ]
    },
    "power ": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "b"
            },
            {
                "default": "None",
                "name": "third"
            }
        ]
    },
    "ppmt": {
        "args": [
            {
                "name": "rate"
            },
            {
                "name": "per"
            },
            {
                "name": "nper"
            },
            {
                "name": "pv"
            },
            {
                "default": "0.0",
                "name": "fv"
            },
            {
                "default": "'end'",
                "name": "when"
            }
        ]
    },
    "pprint": {
        "args": []
    },
    "prep_array": {
        "args": [
            {
                "name": "array_type"
            }
        ]
    },
    "prep_pointer": {
        "args": [
            {
                "name": "pointer_obj"
            },
            {
                "name": "shape"
            }
        ]
    },
    "prep_simple": {
        "args": [
            {
                "name": "simple_type"
            },
            {
                "name": "dtype"
            }
        ]
    },
    "process_file": {
        "args": [
            {
                "name": "source"
            }
        ]
    },
    "process_str": {
        "args": [
            {
                "name": "allstr"
            }
        ]
    },
    "prod": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": "None",
                "name": "axis"
            },
            {
                "default": "None",
                "name": "dtype"
            },
            {
                "default": "None",
                "name": "out"
            },
            {
                "default": "False",
                "name": "keepdims"
            }
        ]
    },
    "product": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "y): return x*y"
            }
        ]
    },
    "product ": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": "None",
                "name": "axis"
            },
            {
                "default": "None",
                "name": "dtype"
            },
            {
                "default": "None",
                "name": "out"
            },
            {
                "default": "False",
                "name": "keepdims"
            }
        ]
    },
    "provide a ault value for missing data ": {
        "args": [
            {
                "name": "but see also `genfromtxt`"
            }
        ]
    },
    "ptp": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": "None",
                "name": "axis"
            },
            {
                "default": "None",
                "name": "out"
            }
        ]
    },
    "put": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "ind"
            },
            {
                "name": "v"
            },
            {
                "default": "'raise'",
                "name": "mode"
            }
        ]
    },
    "put ": {
        "args": [
            {
                "name": "values"
            }
        ]
    },
    "putmask": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "mask"
            },
            {
                "name": "values"
            }
        ]
    },
    "putmask ": {
        "args": [
            {
                "name": "values"
            }
        ]
    },
    "pv": {
        "args": [
            {
                "name": "rate"
            },
            {
                "name": "nper"
            },
            {
                "name": "pmt"
            },
            {
                "default": "0.0",
                "name": "fv"
            },
            {
                "default": "'end'",
                "name": "when"
            }
        ]
    },
    "py_symbol = fname2": {
        "args": [
            {
                "name": "\"decl_%s\" % f"
            }
        ]
    },
    "pyod": {
        "args": [
            {
                "name": "filename"
            }
        ]
    },
    "pyrex_sources": {
        "args": [
            {
                "name": "sources"
            },
            {
                "name": "extension"
            }
        ]
    },
    "pythonlib_dir": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "qr": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": "'reduced'",
                "name": "mode"
            }
        ]
    },
    "qr_decomposition": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": "'full'",
                "name": "mode"
            }
        ]
    },
    "quote_arg": {
        "args": [
            {
                "name": "arg"
            }
        ]
    },
    "quote_args": {
        "args": [
            {
                "name": "args"
            }
        ]
    },
    "raise Exception": {
        "args": [
            {
                "name": "'appenddecl: Unknown variable inition key:' + \\"
            }
        ]
    },
    "raise LinAlgError": {
        "args": [
            {
                "name": "\"Matrix is not positive inite\""
            }
        ]
    },
    "raise ValueError": {
        "args": [
            {
                "name": "\"Must ine a shape if obj is None\""
            }
        ]
    },
    "rand": {
        "args": [
            {
                "name": "*args"
            }
        ]
    },
    "randint": {
        "args": [
            {
                "name": "minimum"
            },
            {
                "default": "None",
                "name": "maximum"
            },
            {
                "default": "[]",
                "name": "shape"
            }
        ]
    },
    "randn": {
        "args": [
            {
                "name": "*args"
            }
        ]
    },
    "random": {
        "args": [
            {
                "default": "[]",
                "name": "shape"
            }
        ]
    },
    "random_integers": {
        "args": [
            {
                "name": "maximum"
            },
            {
                "default": "1",
                "name": "minimum"
            },
            {
                "default": "[]",
                "name": "shape"
            }
        ]
    },
    "random_sample": {
        "args": [
            {
                "name": "*n"
            }
        ]
    },
    "ranf": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "rank": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "rank ": {
        "args": [
            {
                "name": "object"
            }
        ]
    },
    "rate": {
        "args": [
            {
                "name": "nper"
            },
            {
                "name": "pmt"
            },
            {
                "name": "pv"
            },
            {
                "name": "fv"
            },
            {
                "default": "'end'",
                "name": "when"
            },
            {
                "default": "0.10",
                "name": "guess"
            },
            {
                "default": "1e-6",
                "name": "tol"
            },
            {
                "default": "100",
                "name": "maxiter"
            }
        ]
    },
    "rather than full repr ": {
        "args": [
            {
                "name": "ault 1000)."
            }
        ]
    },
    "ravel": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": "'C'",
                "name": "order"
            }
        ]
    },
    "ravel ": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "raw_data ": {
        "args": []
    },
    "raw_mask ": {
        "args": []
    },
    "rc_name": {
        "args": [
            {
                "name": "config"
            }
        ]
    },
    "read_array": {
        "args": [
            {
                "name": "fp"
            }
        ]
    },
    "read_array_header_1_0": {
        "args": [
            {
                "name": "fp"
            }
        ]
    },
    "read_config": {
        "args": [
            {
                "name": "pkgname"
            },
            {
                "default": "None",
                "name": "dirs"
            }
        ]
    },
    "read_magic": {
        "args": [
            {
                "name": "fp"
            }
        ]
    },
    "readfortrancode": {
        "args": [
            {
                "name": "ffile"
            },
            {
                "default": "show",
                "name": "dowithline"
            },
            {
                "default": "1",
                "name": "istop"
            }
        ]
    },
    "real": {
        "args": [
            {
                "name": "val"
            }
        ]
    },
    "real_if_close": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": "100",
                "name": "tol"
            }
        ]
    },
    "rec_append_fields": {
        "args": [
            {
                "name": "base"
            },
            {
                "name": "names"
            },
            {
                "name": "data"
            },
            {
                "default": "None",
                "name": "dtypes"
            }
        ]
    },
    "rec_drop_fields": {
        "args": [
            {
                "name": "base"
            },
            {
                "name": "drop_names"
            }
        ]
    },
    "rec_join": {
        "args": [
            {
                "name": "key"
            },
            {
                "name": "r1"
            },
            {
                "name": "r2"
            },
            {
                "default": "'inner'",
                "name": "jointype"
            },
            {
                "default": "'1'",
                "name": "r1postfix"
            },
            {
                "default": "'2'",
                "name": "r2postfix"
            },
            {
                "name": ""
            }
        ]
    },
    "recfromcsv": {
        "args": [
            {
                "name": "fname"
            },
            {
                "name": "**kwargs"
            }
        ]
    },
    "recfromtxt": {
        "args": [
            {
                "name": "fname"
            },
            {
                "name": "**kwargs"
            }
        ]
    },
    "recursive_fill_fields": {
        "args": [
            {
                "name": "input"
            },
            {
                "name": "output"
            }
        ]
    },
    "red_text": {
        "args": [
            {
                "name": "s"
            }
        ]
    },
    "reduce": {
        "args": [
            {
                "name": "target"
            },
            {
                "default": "None",
                "name": "axis"
            }
        ]
    },
    "reduce ": {
        "args": [
            {
                "name": "target"
            },
            {
                "default": "0",
                "name": "axis"
            }
        ]
    },
    "register_func": {
        "args": [
            {
                "name": "name"
            },
            {
                "name": "func"
            }
        ]
    },
    "rel_path": {
        "args": [
            {
                "name": "path"
            },
            {
                "name": "parent_path"
            }
        ]
    },
    "relevance": {
        "args": [
            {
                "name": "name"
            },
            {
                "name": "docstr"
            },
            {
                "name": "kind"
            },
            {
                "name": "index"
            }
        ]
    },
    "relevance_value": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "removespaces": {
        "args": [
            {
                "name": "expr"
            }
        ]
    },
    "rename_fields": {
        "args": [
            {
                "name": "base"
            },
            {
                "name": "namemapper"
            }
        ]
    },
    "repeat": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "repeats"
            },
            {
                "default": "None",
                "name": "axis"
            }
        ]
    },
    "replace": {
        "args": [
            {
                "name": "str"
            },
            {
                "name": "d"
            },
            {
                "default": "''",
                "name": "aultsep"
            }
        ]
    },
    "replace_method": {
        "args": [
            {
                "name": "klass"
            },
            {
                "name": "method_name"
            },
            {
                "name": "func"
            }
        ]
    },
    "replaceattr": {
        "args": [
            {
                "name": "astr"
            }
        ]
    },
    "replaceother": {
        "args": [
            {
                "name": "astr"
            }
        ]
    },
    "replacetypechars": {
        "args": [
            {
                "name": "astr"
            }
        ]
    },
    "repmat": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "m"
            },
            {
                "name": "n"
            }
        ]
    },
    "repr_format": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "require": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": "None",
                "name": "dtype"
            },
            {
                "default": "None",
                "name": "requirements"
            }
        ]
    },
    "res = config_cmd.check_type_size": {
        "args": [
            {
                "name": "complex_"
            },
            {
                "default": "2*expected[type]",
                "name": "expected"
            }
        ]
    },
    "reshape": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "newshape"
            },
            {
                "default": "'C'",
                "name": "order"
            }
        ]
    },
    "reshape ": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "*newshape"
            }
        ]
    },
    "resize": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "new_shape"
            }
        ]
    },
    "resize ": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "new_shape"
            }
        ]
    },
    "resolve_includes": {
        "args": [
            {
                "name": "source"
            }
        ]
    },
    "restore": {
        "args": []
    },
    "restore_all": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "restore_func": {
        "args": [
            {
                "name": "name"
            }
        ]
    },
    "restoredot": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "result = ault_fill_value": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "result.fill_value = ma.ault_fill_value": {
        "args": [
            {
                "name": "result"
            }
        ]
    },
    "ret='%s%s%s'%": {
        "args": [
            {
                "name": "ret"
            },
            {
                "name": "tab"
            },
            {
                "name": "var"
            }
        ]
    },
    "ret['pymethod'] = getpymethod": {
        "args": [
            {
                "name": "m) or ''"
            }
        ]
    },
    "return ": {
        "args": [
            {
                "name": "self.name"
            },
            {
                "name": "self.bytes"
            },
            {
                "name": "self.ault"
            },
            {
                "name": "self.typeno"
            }
        ]
    },
    "return [replace": {
        "args": [
            {
                "name": "_m"
            },
            {
                "name": "d"
            },
            {
                "name": "aultsep) for _m in str]"
            }
        ]
    },
    "return _complex_types_map.get": {
        "args": [
            {
                "name": "t"
            },
            {
                "name": "ault"
            }
        ]
    },
    "return _real_types_map.get": {
        "args": [
            {
                "name": "t"
            },
            {
                "name": "ault"
            }
        ]
    },
    "return a subclass of ndarray if appropriate ": {
        "args": [
            {
                "name": "True"
            },
            {
                "name": "ault)."
            }
        ]
    },
    "return colour_text": {
        "args": [
            {
                "name": "s"
            },
            {
                "name": "'ault'"
            }
        ]
    },
    "return getmultilineblock": {
        "args": [
            {
                "name": "rout"
            },
            {
                "name": "'pymethod'"
            }
        ]
    },
    "return ine.upper": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "return tuple": {
        "args": [
            {
                "name": "list"
            }
        ]
    },
    "return umath.absolute": {
        "args": [
            {
                "name": "ault_integer_fill_value"
            }
        ]
    },
    "reverse": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "n"
            }
        ]
    },
    "rfft": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": "None",
                "name": "n"
            },
            {
                "default": "-1",
                "name": "axis"
            }
        ]
    },
    "rfftfreq": {
        "args": [
            {
                "name": "n"
            },
            {
                "default": "1.0",
                "name": "d"
            }
        ]
    },
    "rfftn": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": "None",
                "name": "s"
            },
            {
                "default": "None",
                "name": "axes"
            }
        ]
    },
    "rfind": {
        "args": [
            {
                "name": "sub"
            },
            {
                "default": "0",
                "name": "start"
            },
            {
                "default": "None",
                "name": "end"
            }
        ]
    },
    "right_shift ": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "n"
            }
        ]
    },
    "rindex": {
        "args": [
            {
                "name": "sub"
            },
            {
                "default": "0",
                "name": "start"
            },
            {
                "default": "None",
                "name": "end"
            }
        ]
    },
    "rjust": {
        "args": [
            {
                "name": "width"
            },
            {
                "default": "' '",
                "name": "fillchar"
            }
        ]
    },
    "rm_file": {
        "args": [
            {
                "default": "target",
                "name": "f"
            },
            {
                "default": "self.info",
                "name": "p"
            }
        ]
    },
    "rmbadname1": {
        "args": [
            {
                "name": "name"
            }
        ]
    },
    "roll": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "shift"
            },
            {
                "default": "None",
                "name": "axis"
            }
        ]
    },
    "rollaxis": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "axis"
            },
            {
                "default": "0",
                "name": "start"
            }
        ]
    },
    "roots": {
        "args": [
            {
                "name": "p"
            }
        ]
    },
    "rot90": {
        "args": [
            {
                "name": "m"
            },
            {
                "default": "1",
                "name": "k"
            }
        ]
    },
    "round": {
        "args": [
            {
                "name": "*args"
            },
            {
                "name": "**keys"
            }
        ]
    },
    "round_": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": "0",
                "name": "decimals"
            },
            {
                "default": "None",
                "name": "out"
            }
        ]
    },
    "routsign2map": {
        "args": [
            {
                "name": "rout"
            }
        ]
    },
    "rpartition": {
        "args": [
            {
                "name": "sep"
            }
        ]
    },
    "rsplit": {
        "args": [
            {
                "default": "None",
                "name": "sep"
            },
            {
                "default": "None",
                "name": "maxsplit"
            }
        ]
    },
    "rstrip": {
        "args": [
            {
                "default": "None",
                "name": "chars"
            }
        ]
    },
    "rt = _realType": {
        "args": [
            {
                "name": "a.dtype.type"
            },
            {
                "default": "None",
                "name": "ault"
            }
        ]
    },
    "run": {
        "args": [
            {
                "name": "runtest"
            },
            {
                "name": "test_functions"
            },
            {
                "default": "1",
                "name": "repeat"
            }
        ]
    },
    "run ": {
        "args": []
    },
    "run_command": {
        "args": [
            {
                "name": "cmd"
            }
        ]
    },
    "run_compile": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "run_main": {
        "args": [
            {
                "name": "comline_list"
            }
        ]
    },
    "s = [": {
        "args": [
            {
                "name": "'_FILE_OFFSET_BITS'"
            },
            {
                "name": "'64')"
            },
            {
                "name": ""
            }
        ]
    },
    "safe_eval": {
        "args": [
            {
                "name": "source"
            }
        ]
    },
    "sample": {
        "args": [
            {
                "name": "n"
            }
        ]
    },
    "sarray": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": "None",
                "name": "typecode"
            },
            {
                "default": "False",
                "name": "copy"
            },
            {
                "default": "None",
                "name": "dtype"
            }
        ]
    },
    "save": {
        "args": [
            {
                "name": "file"
            },
            {
                "name": "arr"
            }
        ]
    },
    "save_array": {
        "args": [
            {
                "name": "object"
            }
        ]
    },
    "savetxt": {
        "args": [
            {
                "name": "fname"
            },
            {
                "name": "X"
            },
            {
                "default": "'%.18e'",
                "name": "fmt"
            },
            {
                "default": "' '",
                "name": "delimiter"
            },
            {
                "default": "'\\n'",
                "name": "newline"
            },
            {
                "default": "''",
                "name": "header"
            },
            {
                "name": ""
            }
        ]
    },
    "savez": {
        "args": [
            {
                "name": "file"
            },
            {
                "name": "*args"
            },
            {
                "name": "**kwds"
            }
        ]
    },
    "savez_compressed": {
        "args": [
            {
                "name": "file"
            },
            {
                "name": "*args"
            },
            {
                "name": "**kwds"
            }
        ]
    },
    "scaninputline": {
        "args": [
            {
                "name": "inputline"
            }
        ]
    },
    "sctype2char": {
        "args": [
            {
                "name": "sctype"
            }
        ]
    },
    "searchsorted": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "v"
            },
            {
                "default": "'left'",
                "name": "side"
            },
            {
                "default": "None",
                "name": "sorter"
            }
        ]
    },
    "sections": {
        "args": []
    },
    "see the inition of get_info": {
        "args": [
            {
                "name": "function below."
            }
        ]
    },
    "seed": {
        "args": [
            {
                "default": "0",
                "name": "x"
            },
            {
                "default": "0",
                "name": "y"
            }
        ]
    },
    "seek": {
        "args": [
            {
                "name": "offset"
            },
            {
                "default": "0",
                "name": "whence"
            }
        ]
    },
    "seek_gzip_factory": {
        "args": [
            {
                "name": "f"
            }
        ]
    },
    "select": {
        "args": [
            {
                "name": "condlist"
            },
            {
                "name": "choicelist"
            },
            {
                "default": "0",
                "name": "ault"
            }
        ]
    },
    "self.cp = ConfigParser": {
        "args": [
            {
                "name": "aults"
            }
        ]
    },
    "self.ine_macro": {
        "args": [
            {
                "name": "'__MSVCRT_VERSION__'"
            },
            {
                "name": "msvcr_version"
            }
        ]
    },
    "self.ine_macros + ext_args.get": {
        "args": [
            {
                "name": "'ine_macros'"
            },
            {
                "name": "[]"
            }
        ]
    },
    "self.ine_macros.extend": {
        "args": [
            {
                "name": "macros"
            }
        ]
    },
    "self.set_unined_options": {
        "args": [
            {
                "name": "'install'"
            },
            {
                "name": ""
            }
        ]
    },
    "self.unine_macro": {
        "args": [
            {
                "name": "macro"
            }
        ]
    },
    "self.warn": {
        "args": [
            {
                "name": "'Assuming ault configuration '\\"
            }
        ]
    },
    "set_display ": {
        "args": [
            {
                "name": "s"
            }
        ]
    },
    "set_fill_value": {
        "args": [
            {
                "default": "None",
                "name": "value"
            }
        ]
    },
    "set_fill_value ": {
        "args": [
            {
                "default": "None",
                "name": "v"
            }
        ]
    },
    "set_info": {
        "args": [
            {
                "name": "**info"
            }
        ]
    },
    "set_options": {
        "args": [
            {
                "name": "**options"
            }
        ]
    },
    "set_printoptions": {
        "args": [
            {
                "default": "None",
                "name": "precision"
            },
            {
                "default": "None",
                "name": "threshold"
            },
            {
                "default": "None",
                "name": "edgeitems"
            },
            {
                "name": ""
            }
        ]
    },
    "set_string_function": {
        "args": [
            {
                "name": "f"
            },
            {
                "default": "True",
                "name": "repr"
            }
        ]
    },
    "set_threshold": {
        "args": [
            {
                "name": "level"
            },
            {
                "default": "False",
                "name": "force"
            }
        ]
    },
    "set_verbosity": {
        "args": [
            {
                "name": "v"
            },
            {
                "default": "False",
                "name": "force"
            }
        ]
    },
    "setattrspec": {
        "args": [
            {
                "name": "decl"
            },
            {
                "name": "attr"
            },
            {
                "default": "0",
                "name": "force"
            }
        ]
    },
    "setbufsize": {
        "args": [
            {
                "name": "size"
            }
        ]
    },
    "setcharselector": {
        "args": [
            {
                "name": "decl"
            },
            {
                "name": "sel"
            },
            {
                "default": "0",
                "name": "force"
            }
        ]
    },
    "setdiff1d": {
        "args": [
            {
                "name": "ar1"
            },
            {
                "name": "ar2"
            },
            {
                "default": "False",
                "name": "assume_unique"
            }
        ]
    },
    "seterr": {
        "args": [
            {
                "default": "None",
                "name": "all"
            },
            {
                "default": "None",
                "name": "divide"
            },
            {
                "default": "None",
                "name": "over"
            },
            {
                "default": "None",
                "name": "under"
            },
            {
                "default": "None",
                "name": "invalid"
            }
        ]
    },
    "seterrcall": {
        "args": [
            {
                "name": "func"
            }
        ]
    },
    "setkindselector": {
        "args": [
            {
                "name": "decl"
            },
            {
                "name": "sel"
            },
            {
                "default": "0",
                "name": "force"
            }
        ]
    },
    "setmesstext": {
        "args": [
            {
                "name": "block"
            }
        ]
    },
    "setup": {
        "args": [
            {
                "name": "**attr"
            }
        ]
    },
    "setuptools_run": {
        "args": []
    },
    "setxor1d": {
        "args": [
            {
                "name": "ar1"
            },
            {
                "name": "ar2"
            },
            {
                "default": "False",
                "name": "assume_unique"
            }
        ]
    },
    "shape": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "shape ": {
        "args": [
            {
                "name": "object"
            }
        ]
    },
    "show": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "show_all": {
        "args": [
            {
                "default": "None",
                "name": "argv"
            }
        ]
    },
    "show_fortran_compilers": {
        "args": [
            {
                "default": "[]",
                "name": "_cache"
            }
        ]
    },
    "shrink_mask": {
        "args": []
    },
    "sign2map": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "var"
            }
        ]
    },
    "simple_version_match": {
        "args": [
            {
                "default": "r'[-.\\d]+'",
                "name": "pat"
            },
            {
                "default": "''",
                "name": "ignore"
            },
            {
                "default": "''",
                "name": "start"
            }
        ]
    },
    "sinc": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "singular_value_decomposition": {
        "args": [
            {
                "name": "A"
            },
            {
                "default": "0",
                "name": "full_matrices"
            }
        ]
    },
    "sixu": {
        "args": [
            {
                "name": "s"
            }
        ]
    },
    "size": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": "None",
                "name": "axis"
            }
        ]
    },
    "size ": {
        "args": [
            {
                "name": "object"
            },
            {
                "default": "None",
                "name": "axis"
            }
        ]
    },
    "slogdet": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "soften_mask": {
        "args": []
    },
    "solve": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "b"
            }
        ]
    },
    "solve_linear_equations": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "b"
            }
        ]
    },
    "sometrue": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": "None",
                "name": "axis"
            },
            {
                "default": "None",
                "name": "out"
            },
            {
                "default": "False",
                "name": "keepdims"
            }
        ]
    },
    "sort": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": "-1",
                "name": "axis"
            },
            {
                "default": "'quicksort'",
                "name": "kind"
            },
            {
                "default": "None",
                "name": "order"
            }
        ]
    },
    "sort ": {
        "args": [
            {
                "name": "x"
            },
            {
                "default": " -1",
                "name": "axis "
            },
            {
                "default": "None",
                "name": "fill_value"
            }
        ]
    },
    "sort_complex": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "sortvarnames": {
        "args": [
            {
                "name": "vars"
            }
        ]
    },
    "source": {
        "args": [
            {
                "name": "object"
            },
            {
                "default": "sys.stdout",
                "name": "output"
            }
        ]
    },
    "source_func": {
        "args": [
            {
                "name": "ext"
            },
            {
                "name": "build_dir"
            }
        ]
    },
    "span": {
        "args": [
            {
                "name": "lo"
            },
            {
                "name": "hi"
            },
            {
                "name": "num"
            },
            {
                "default": "0",
                "name": "d2"
            }
        ]
    },
    "specifications below.  The ault value ": {
        "args": [
            {
                "name": "'S') results in"
            }
        ]
    },
    "split": {
        "args": [
            {
                "default": "None",
                "name": "sep"
            },
            {
                "default": "None",
                "name": "maxsplit"
            }
        ]
    },
    "split_line": {
        "args": [
            {
                "name": "line"
            }
        ]
    },
    "split_quoted": {
        "args": [
            {
                "name": "s"
            }
        ]
    },
    "splitcmdline": {
        "args": [
            {
                "name": "line"
            }
        ]
    },
    "splitlines": {
        "args": [
            {
                "default": "None",
                "name": "keepends"
            }
        ]
    },
    "sqrt": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "squeeze": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": "None",
                "name": "axis"
            }
        ]
    },
    "stack_arrays": {
        "args": [
            {
                "name": "arrays"
            },
            {
                "default": "None",
                "name": "aults"
            },
            {
                "default": "True",
                "name": "usemask"
            },
            {
                "default": "False",
                "name": "asrecarray"
            },
            {
                "name": ""
            }
        ]
    },
    "standardDeviation": {
        "args": [
            {
                "name": "data"
            }
        ]
    },
    "standard_normal": {
        "args": [
            {
                "default": "[]",
                "name": "shape"
            }
        ]
    },
    "startswith": {
        "args": [
            {
                "name": "prefix"
            },
            {
                "default": "0",
                "name": "start"
            },
            {
                "default": "None",
                "name": "end"
            }
        ]
    },
    "std": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": "None",
                "name": "axis"
            },
            {
                "default": "None",
                "name": "dtype"
            },
            {
                "default": "None",
                "name": "out"
            },
            {
                "default": "0",
                "name": "ddof"
            },
            {
                "default": "False",
                "name": "keepdims"
            }
        ]
    },
    "str_len": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "strip": {
        "args": [
            {
                "default": "None",
                "name": "chars"
            }
        ]
    },
    "stripcomma": {
        "args": [
            {
                "name": "s"
            }
        ]
    },
    "subst_vars": {
        "args": [
            {
                "name": "target"
            },
            {
                "name": "source"
            },
            {
                "name": "d"
            }
        ]
    },
    "substr = named_re.sub": {
        "args": [
            {
                "name": "r\"<\\1>\""
            },
            {
                "name": "substr)  # get rid of inition templates"
            }
        ]
    },
    "sum": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": "None",
                "name": "axis"
            },
            {
                "default": "None",
                "name": "dtype"
            },
            {
                "default": "None",
                "name": "out"
            },
            {
                "default": "False",
                "name": "keepdims"
            }
        ]
    },
    "sum ": {
        "args": [
            {
                "name": "target"
            },
            {
                "default": "None",
                "name": "axis"
            },
            {
                "default": "None",
                "name": "dtype"
            }
        ]
    },
    "svd": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": "1",
                "name": "full_matrices"
            },
            {
                "default": "1",
                "name": "compute_uv"
            }
        ]
    },
    "swapaxes": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "axis1"
            },
            {
                "name": "axis2"
            }
        ]
    },
    "swapaxes ": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "axis1"
            },
            {
                "name": "axis2"
            }
        ]
    },
    "swapcase": {
        "args": []
    },
    "swig_sources": {
        "args": [
            {
                "name": "sources"
            },
            {
                "name": "extension"
            }
        ]
    },
    "sym2": {
        "args": [
            {
                "name": "symbol"
            }
        ]
    },
    "take": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "indices"
            },
            {
                "default": "None",
                "name": "axis"
            },
            {
                "default": "None",
                "name": "out"
            },
            {
                "default": "'raise'",
                "name": "mode"
            }
        ]
    },
    "takes keyword arguments for ": {
        "args": [
            {
                "name": "re-)ining environment variables."
            }
        ]
    },
    "target_f.write": {
        "args": [
            {
                "name": "'#ine inline %s\\n' % inline"
            }
        ]
    },
    "tell": {
        "args": []
    },
    "temp_file_name": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "template_sources": {
        "args": [
            {
                "name": "sources"
            },
            {
                "name": "extension"
            }
        ]
    },
    "tensordot": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "b"
            },
            {
                "default": "2",
                "name": "axes"
            }
        ]
    },
    "tensorinv": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": "2",
                "name": "ind"
            }
        ]
    },
    "tensormultiply": {
        "args": [
            {
                "name": "a1"
            },
            {
                "name": "a2"
            }
        ]
    },
    "tensorsolve": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "b"
            },
            {
                "default": "None",
                "name": "axes"
            }
        ]
    },
    "terminal_has_colors": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "test": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "test_0": {
        "args": []
    },
    "test_1": {
        "args": []
    },
    "test_2": {
        "args": []
    },
    "test_3": {
        "args": []
    },
    "test_4": {
        "args": []
    },
    "test_5": {
        "args": []
    },
    "test_6": {
        "args": []
    },
    "test_7": {
        "args": []
    },
    "test_99": {
        "args": []
    },
    "test_A": {
        "args": []
    },
    "test_cl": {
        "args": [
            {
                "name": "**kws"
            }
        ]
    },
    "test_execute_in": {
        "args": [
            {
                "name": "**kws"
            }
        ]
    },
    "test_nt": {
        "args": [
            {
                "name": "**kws"
            }
        ]
    },
    "test_posix": {
        "args": [
            {
                "name": "**kws"
            }
        ]
    },
    "test_svn": {
        "args": [
            {
                "name": "**kws"
            }
        ]
    },
    "testcode_wincrypt": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "than or equal to `tol` ": {
        "args": [
            {
                "name": "ault value is zero) are removed."
            }
        ]
    },
    "the platform ": {
        "args": [
            {
                "name": "u)intp. In that case"
            },
            {
                "name": "the ault will be either"
            }
        ]
    },
    "the returned array will be forced to be a base-class array ": {
        "args": [
            {
                "name": "ault)."
            }
        ]
    },
    "tile": {
        "args": [
            {
                "name": "A"
            },
            {
                "name": "reps"
            }
        ]
    },
    "timer": {
        "args": [
            {
                "name": "s"
            },
            {
                "default": "''",
                "name": "v"
            },
            {
                "default": "500",
                "name": "nloop"
            },
            {
                "default": "3",
                "name": "nrep"
            }
        ]
    },
    "title": {
        "args": []
    },
    "to ``split`` with `axis=0` ": {
        "args": [
            {
                "name": "ault)"
            },
            {
                "name": "the array is always split along the"
            }
        ]
    },
    "to_corners": {
        "args": [
            {
                "name": "arr"
            },
            {
                "name": "nv"
            },
            {
                "name": "nvsum"
            }
        ]
    },
    "todict": {
        "args": []
    },
    "tofile": {
        "args": [
            {
                "name": "fid"
            },
            {
                "default": "\"\"",
                "name": "sep"
            },
            {
                "default": "\"%s\"",
                "name": "format"
            }
        ]
    },
    "toflex": {
        "args": []
    },
    "togglebyteorder": {
        "args": []
    },
    "tolist": {
        "args": [
            {
                "default": "None",
                "name": "fill_value"
            }
        ]
    },
    "tostring": {
        "args": [
            {
                "default": "None",
                "name": "fill_value"
            }
        ]
    },
    "trace": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": "0",
                "name": "offset"
            },
            {
                "default": "0",
                "name": "axis1"
            },
            {
                "default": "1",
                "name": "axis2"
            },
            {
                "default": "None",
                "name": "dtype"
            },
            {
                "default": "None",
                "name": "out"
            }
        ]
    },
    "trace ": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": "0",
                "name": "offset"
            },
            {
                "default": "0",
                "name": "axis1"
            },
            {
                "default": "1",
                "name": "axis2"
            },
            {
                "default": "None",
                "name": "dtype"
            },
            {
                "default": "None",
                "name": "out"
            }
        ]
    },
    "translate": {
        "args": [
            {
                "name": "table"
            },
            {
                "default": "None",
                "name": "deletechars"
            }
        ]
    },
    "transpose": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": "None",
                "name": "axes"
            }
        ]
    },
    "trapz": {
        "args": [
            {
                "name": "y"
            },
            {
                "default": "None",
                "name": "x"
            },
            {
                "default": "1.0",
                "name": "dx"
            },
            {
                "default": "-1",
                "name": "axis"
            }
        ]
    },
    "tri": {
        "args": [
            {
                "name": "N"
            },
            {
                "default": "None",
                "name": "M"
            },
            {
                "default": "0",
                "name": "k"
            },
            {
                "default": "float",
                "name": "dtype"
            }
        ]
    },
    "tril": {
        "args": [
            {
                "name": "m"
            },
            {
                "default": "0",
                "name": "k"
            }
        ]
    },
    "tril_indices": {
        "args": [
            {
                "name": "n"
            },
            {
                "default": "0",
                "name": "k"
            }
        ]
    },
    "tril_indices_from": {
        "args": [
            {
                "name": "arr"
            },
            {
                "default": "0",
                "name": "k"
            }
        ]
    },
    "trim": {
        "args": [
            {
                "default": "0)",
                "name": "tol"
            }
        ]
    },
    "trim_zeros": {
        "args": [
            {
                "name": "filt"
            },
            {
                "default": "'fb'",
                "name": "trim"
            }
        ]
    },
    "trimcoef": {
        "args": [
            {
                "name": "c"
            },
            {
                "default": "0)",
                "name": "tol"
            }
        ]
    },
    "trimseq": {
        "args": [
            {
                "name": "seq)"
            }
        ]
    },
    "triu": {
        "args": [
            {
                "name": "m"
            },
            {
                "default": "0",
                "name": "k"
            }
        ]
    },
    "triu_indices": {
        "args": [
            {
                "name": "n"
            },
            {
                "default": "0",
                "name": "k"
            }
        ]
    },
    "triu_indices_from": {
        "args": [
            {
                "name": "arr"
            },
            {
                "default": "0",
                "name": "k"
            }
        ]
    },
    "true_intent_list": {
        "args": [
            {
                "name": "var"
            }
        ]
    },
    "truncate": {
        "args": [
            {
                "name": "size)"
            }
        ]
    },
    "try_run": {
        "args": [
            {
                "name": "body"
            },
            {
                "default": "None",
                "name": "headers"
            },
            {
                "default": "None",
                "name": "include_dirs"
            },
            {
                "name": ""
            }
        ]
    },
    "type %": {
        "args": [
            {
                "name": "type)s test_type;"
            }
        ]
    },
    "type2": {
        "args": [
            {
                "name": "symbol"
            }
        ]
    },
    "type2dtype": {
        "args": [
            {
                "name": "typecode"
            },
            {
                "name": "type"
            },
            {
                "name": "dtype"
            },
            {
                "default": "True",
                "name": "use_ault"
            }
        ]
    },
    "typefrom": {
        "args": [
            {
                "name": "obj"
            }
        ]
    },
    "typename": {
        "args": [
            {
                "name": "char"
            }
        ]
    },
    "umath.seterrobj": {
        "args": [
            {
                "name": "val"
            }
        ]
    },
    "un_macros, sources = filter_files": {
        "args": [
            {
                "name": "'-U'"
            },
            {
                "name": "''"
            },
            {
                "name": "sources"
            },
            {
                "default": "1",
                "name": "remove_prefix"
            }
        ]
    },
    "undo_rmbadname1": {
        "args": [
            {
                "name": "name"
            }
        ]
    },
    "uniform": {
        "args": [
            {
                "name": "minimum"
            },
            {
                "name": "maximum"
            },
            {
                "default": "[]",
                "name": "shape"
            }
        ]
    },
    "union1d": {
        "args": [
            {
                "name": "ar1"
            },
            {
                "name": "ar2"
            }
        ]
    },
    "unique": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "unique_key": {
        "args": [
            {
                "name": "adict"
            }
        ]
    },
    "unix2dos": {
        "args": [
            {
                "name": "file"
            }
        ]
    },
    "unix2dos_dir": {
        "args": [
            {
                "name": "dir_name"
            }
        ]
    },
    "unix2dos_one_dir": {
        "args": [
            {
                "name": "modified_files"
            },
            {
                "name": "dir_name"
            },
            {
                "name": "file_names"
            }
        ]
    },
    "unmarkouterparen": {
        "args": [
            {
                "name": "line"
            }
        ]
    },
    "unmask ": {
        "args": []
    },
    "unshare_mask": {
        "args": []
    },
    "unshare_mask ": {
        "args": []
    },
    "unwrap": {
        "args": [
            {
                "name": "p"
            },
            {
                "default": "pi",
                "name": "discont"
            },
            {
                "default": "-1",
                "name": "axis"
            }
        ]
    },
    "update_executables": {
        "args": []
    },
    "updatevars": {
        "args": [
            {
                "name": "typespec"
            },
            {
                "name": "selector"
            },
            {
                "name": "attrspec"
            },
            {
                "name": "entitydecl"
            }
        ]
    },
    "upper": {
        "args": []
    },
    "use2fortran": {
        "args": [
            {
                "name": "use"
            },
            {
                "default": "''",
                "name": "tab"
            }
        ]
    },
    "use_distribution": {
        "args": [
            {
                "name": "dist"
            }
        ]
    },
    "userisined.append": {
        "args": [
            {
                "name": "k"
            }
        ]
    },
    "using scientific notation ": {
        "args": [
            {
                "name": "ault False)."
            }
        ]
    },
    "val = _check_fill_value": {
        "args": [
            {
                "name": "None"
            },
            {
                "name": "obj.dtype"
            }
        ]
    },
    "val = ault_filler.get": {
        "args": [
            {
                "name": "obj.kind"
            },
            {
                "name": "'?'"
            }
        ]
    },
    "vander": {
        "args": [
            {
                "name": "x"
            },
            {
                "default": "None",
                "name": "N"
            }
        ]
    },
    "var": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": "None",
                "name": "axis"
            },
            {
                "default": "None",
                "name": "dtype"
            },
            {
                "default": "None",
                "name": "out"
            },
            {
                "default": "0",
                "name": "ddof"
            },
            {
                "name": ""
            }
        ]
    },
    "var2fixfortran": {
        "args": [
            {
                "name": "vars"
            },
            {
                "name": "a"
            },
            {
                "default": "None",
                "name": "fa"
            },
            {
                "default": "None",
                "name": "f90mode"
            }
        ]
    },
    "var='%s %s'%": {
        "args": [
            {
                "name": "var"
            },
            {
                "name": "fa"
            }
        ]
    },
    "var='%s :: %s'%": {
        "args": [
            {
                "name": "var"
            },
            {
                "name": "a"
            }
        ]
    },
    "var='%s :: %s=%s'%": {
        "args": [
            {
                "name": "var"
            },
            {
                "name": "a"
            },
            {
                "name": "v"
            }
        ]
    },
    "var='%s)'%": {
        "args": [
            {
                "name": "var"
            }
        ]
    },
    "var='%s*%s'%": {
        "args": [
            {
                "name": "var"
            },
            {
                "name": "selector['*']"
            }
        ]
    },
    "var='%s,kind=%s)'%": {
        "args": [
            {
                "name": "var"
            },
            {
                "name": "selector['kind']"
            }
        ]
    },
    "variables": {
        "args": []
    },
    "variance": {
        "args": [
            {
                "name": "data"
            }
        ]
    },
    "vars2fortran": {
        "args": [
            {
                "name": "block"
            },
            {
                "name": "vars"
            },
            {
                "name": "args"
            },
            {
                "default": "''",
                "name": "tab"
            },
            {
                "default": "False",
                "name": "as_interface"
            }
        ]
    },
    "vdot": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "b"
            }
        ]
    },
    "version_match": {
        "args": [
            {
                "name": "version_string"
            }
        ]
    },
    "view": {
        "args": [
            {
                "default": "None",
                "name": "dtype"
            },
            {
                "default": "None",
                "name": "type"
            }
        ]
    },
    "visibility_ine": {
        "args": [
            {
                "name": "config"
            }
        ]
    },
    "visit": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "visitBytes": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "visitConst": {
        "args": [
            {
                "name": "node"
            },
            {
                "name": "**kw"
            }
        ]
    },
    "visitDict": {
        "args": [
            {
                "name": "node"
            },
            {
                "name": "**kw"
            }
        ]
    },
    "visitExpression": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "visitList": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "visitName": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "visitNameConstant": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "visitNum": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "visitStr": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "visitTuple": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "visitUnaryAdd": {
        "args": [
            {
                "name": "node"
            },
            {
                "name": "**kw"
            }
        ]
    },
    "visitUnaryOp": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "visitUnarySub": {
        "args": [
            {
                "name": "node"
            },
            {
                "name": "**kw"
            }
        ]
    },
    "vsplit": {
        "args": [
            {
                "name": "ary"
            },
            {
                "name": "indices_or_sections"
            }
        ]
    },
    "vstack": {
        "args": [
            {
                "name": "tup"
            }
        ]
    },
    "warn": {
        "args": [
            {
                "name": "message"
            }
        ]
    },
    "where": {
        "args": [
            {
                "name": "condition"
            },
            {
                "default": "None",
                "name": "x"
            },
            {
                "default": "None",
                "name": "y"
            },
            {
                "default": "None",
                "name": "out"
            }
        ]
    },
    "where ": {
        "args": [
            {
                "name": "condition"
            },
            {
                "name": "x"
            },
            {
                "name": "y"
            }
        ]
    },
    "whether the data is copied ": {
        "args": [
            {
                "name": "the ault)"
            },
            {
                "name": "or whether a view is"
            }
        ]
    },
    "while '%s_%i'%": {
        "args": [
            {
                "name": "mname"
            },
            {
                "default": "i+1",
                "name": "i) in userisined: i"
            }
        ]
    },
    "who": {
        "args": [
            {
                "default": "None",
                "name": "vardict"
            }
        ]
    },
    "win32_checks": {
        "args": [
            {
                "name": "mores"
            }
        ]
    },
    "within_tol": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "y"
            },
            {
                "name": "atol"
            },
            {
                "name": "rtol"
            }
        ]
    },
    "words.append": {
        "args": [
            {
                "name": "s[:end])       # we initely have a word delimiter"
            }
        ]
    },
    "write ": {
        "args": [
            {
                "name": "data"
            }
        ]
    },
    "write_array_header_1_0": {
        "args": [
            {
                "name": "fp"
            },
            {
                "name": "d"
            }
        ]
    },
    "y = self.array": {
        "args": [
            {
                "name": "['abc'"
            },
            {
                "name": "1"
            },
            {
                "name": "''"
            },
            {
                "name": "2"
            },
            {
                "name": "3]"
            },
            {
                "name": "object"
            }
        ]
    },
    "yellow_text": {
        "args": [
            {
                "name": "s"
            }
        ]
    },
    "zeros": {
        "args": [
            {
                "name": "shape"
            },
            {
                "default": "None",
                "name": "type"
            },
            {
                "default": "None",
                "name": "typecode"
            },
            {
                "default": "None",
                "name": "dtype"
            }
        ]
    },
    "zeros ": {
        "args": [
            {
                "name": "shape"
            },
            {
                "default": "float",
                "name": "dtype"
            }
        ]
    },
    "zeros_like": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": "None",
                "name": "dtype"
            },
            {
                "default": "'K'",
                "name": "order"
            },
            {
                "default": "True",
                "name": "subok"
            }
        ]
    },
    "zfill": {
        "args": [
            {
                "name": "width"
            }
        ]
    },
    "zip_descr": {
        "args": [
            {
                "name": "seqarrays"
            },
            {
                "default": "False",
                "name": "flatten"
            }
        ]
    },
    "zipfile_factory": {
        "args": [
            {
                "name": "*args"
            },
            {
                "name": "**kwargs"
            }
        ]
    },
    "zmin_zmax": {
        "args": [
            {
                "name": "z"
            },
            {
                "name": "ireg"
            }
        ]
    },
    "{l_not": {
        "args": [
            {
                "name": "isintent_callback):'\\t#cbname#_type #varname#_cptr;'}"
            }
        ]
    },
    "{{}\\\\verb@ #argname#": {
        "args": [
            {
                "name": "#latexdocsignature#): return #docreturn#@{}}"
            }
        ]
    }
}