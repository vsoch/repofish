{
    "ANTSBuildTemplate": {
        "*": {
            "ANTSTemplateBuildSingleIterationWF": {
                "args": [
                    {
                        "default": "''",
                        "name": "iterationPhasePrefix"
                    }
                ]
            },
            "FlattenTransformAndImagesList": {
                "args": [
                    {
                        "name": "ListOfPassiveImagesDictionaries"
                    },
                    {
                        "name": "transformation_series"
                    }
                ]
            },
            "GetFirstListElement": {
                "args": [
                    {
                        "name": "this_list"
                    }
                ]
            },
            "MakeListsOfTransformLists": {
                "args": [
                    {
                        "name": "warpTransformList"
                    },
                    {
                        "name": "AffineTransformList"
                    }
                ]
            },
            "MakeTransformListWithGradientWarps": {
                "args": [
                    {
                        "name": "averageAffineTranform"
                    },
                    {
                        "name": "gradientStepWarp"
                    }
                ]
            },
            "RenestDeformedPassiveImages": {
                "args": [
                    {
                        "name": "deformedPassiveImages"
                    },
                    {
                        "name": "flattened_image_nametypes"
                    }
                ]
            }
        }
    },
    "README": {
        "*": {}
    },
    "analysis": {
        "*": {},
        "CoherenceAnalyzer": {
            "_csv2ts": {
                "args": []
            },
            "_list_outputs": {
                "args": []
            },
            "_make_output_figures": {
                "args": []
            },
            "_make_output_files": {
                "args": []
            },
            "_read_csv": {
                "args": []
            },
            "_run_interface": {
                "args": [
                    {
                        "name": "runtime"
                    }
                ]
            }
        },
        "CoherenceAnalyzerInputSpec": {},
        "CoherenceAnalyzerOutputSpec": {},
        "GetTimeSeriesInputSpec": {},
        "GetTimeSeriesOutputSpec": {}
    },
    "antsRegistrationBuildTemplate": {
        "*": {
            "FlattenTransformAndImagesList": {
                "args": [
                    {
                        "name": "ListOfPassiveImagesDictionaries"
                    },
                    {
                        "name": "transforms"
                    },
                    {
                        "name": "invert_transform_flags"
                    },
                    {
                        "name": "interpolationMapping"
                    }
                ]
            },
            "GetFirstListElement": {
                "args": [
                    {
                        "name": "this_list"
                    }
                ]
            },
            "GetMovingImages": {
                "args": [
                    {
                        "name": "ListOfImagesDictionaries"
                    },
                    {
                        "name": "registrationImageTypes"
                    },
                    {
                        "name": "interpolationMapping"
                    }
                ]
            },
            "GetPassiveImages": {
                "args": [
                    {
                        "name": "ListOfImagesDictionaries"
                    },
                    {
                        "name": "registrationImageTypes"
                    }
                ]
            },
            "MakeTransformListWithGradientWarps": {
                "args": [
                    {
                        "name": "averageAffineTranform"
                    },
                    {
                        "name": "gradientStepWarp"
                    }
                ]
            },
            "RenestDeformedPassiveImages": {
                "args": [
                    {
                        "name": "deformedPassiveImages"
                    },
                    {
                        "name": "flattened_image_nametypes"
                    },
                    {
                        "name": "interpolationMapping"
                    }
                ]
            },
            "SplitAffineAndWarpComponents": {
                "args": [
                    {
                        "name": "list_of_transforms_lists"
                    }
                ]
            },
            "antsRegistrationTemplateBuildSingleIterationWF": {
                "args": [
                    {
                        "default": "''",
                        "name": "iterationPhasePrefix"
                    }
                ]
            },
            "makeListOfOneElement": {
                "args": [
                    {
                        "name": "inputFile"
                    }
                ]
            }
        }
    },
    "arithmetic": {
        "*": {},
        "AddScalarVolumes": {},
        "AddScalarVolumesInputSpec": {},
        "AddScalarVolumesOutputSpec": {},
        "CastScalarVolumeInputSpec": {},
        "CastScalarVolumeOutputSpec": {},
        "MaskScalarVolume": {},
        "MaskScalarVolumeInputSpec": {},
        "MaskScalarVolumeOutputSpec": {},
        "MultiplyScalarVolumes": {},
        "MultiplyScalarVolumesInputSpec": {},
        "MultiplyScalarVolumesOutputSpec": {},
        "SubtractScalarVolumes": {},
        "SubtractScalarVolumesInputSpec": {},
        "SubtractScalarVolumesOutputSpec": {}
    },
    "artifacts": {
        "*": {
            "_checkrnum": {
                "args": [
                    {
                        "name": "ref_num"
                    }
                ]
            },
            "_eff_t_echo": {
                "args": [
                    {
                        "name": "echospacing"
                    },
                    {
                        "name": "acc_factor"
                    }
                ]
            },
            "_fix_enc_dir": {
                "args": [
                    {
                        "name": "enc_dir"
                    }
                ]
            },
            "_gen_index": {
                "args": [
                    {
                        "name": "in_file"
                    }
                ]
            },
            "_get_zoom": {
                "args": [
                    {
                        "name": "in_file"
                    },
                    {
                        "name": "enc_dir"
                    }
                ]
            },
            "_nonb0": {
                "args": [
                    {
                        "name": "in_bval"
                    }
                ]
            },
            "_xfm_jacobian": {
                "args": [
                    {
                        "name": "in_xfm"
                    }
                ]
            },
            "all_fmb_pipeline": {
                "args": [
                    {
                        "default": "'hmc_sdc_ecc'",
                        "name": "name"
                    },
                    {
                        "default": "dict(smooth3d=2.0",
                        "name": "fugue_params"
                    }
                ]
            },
            "all_fsl_pipeline": {
                "args": [
                    {
                        "default": "'fsl_all_correct'",
                        "name": "name"
                    },
                    {
                        "name": ""
                    },
                    {
                        "default": "dict(echospacing=0.77e-3",
                        "name": "epi_params"
                    },
                    {
                        "name": ""
                    },
                    {
                        "default": "3",
                        "name": "acc_factor"
                    },
                    {
                        "name": ""
                    },
                    {
                        "default": "'y-')",
                        "name": "enc_dir"
                    },
                    {
                        "name": ""
                    },
                    {
                        "default": "dict(echospacing=0.77e-3",
                        "name": "altepi_params"
                    },
                    {
                        "name": ""
                    },
                    {
                        "default": "3",
                        "name": "acc_factor"
                    },
                    {
                        "name": ""
                    },
                    {
                        "default": "'y'",
                        "name": "enc_dir"
                    }
                ]
            },
            "all_peb_pipeline": {
                "args": [
                    {
                        "default": "'hmc_sdc_ecc'",
                        "name": "name"
                    },
                    {
                        "name": ""
                    },
                    {
                        "default": "dict(echospacing=0.77e-3",
                        "name": "epi_params"
                    },
                    {
                        "name": ""
                    },
                    {
                        "default": "3",
                        "name": "acc_factor"
                    },
                    {
                        "name": ""
                    },
                    {
                        "default": "'y-'",
                        "name": "enc_dir"
                    },
                    {
                        "name": ""
                    },
                    {
                        "default": "1)",
                        "name": "epi_factor"
                    },
                    {
                        "name": ""
                    },
                    {
                        "default": "dict(echospacing=0.77e-3",
                        "name": "altepi_params"
                    },
                    {
                        "name": ""
                    },
                    {
                        "default": "3",
                        "name": "acc_factor"
                    },
                    {
                        "name": ""
                    },
                    {
                        "default": "'y'",
                        "name": "enc_dir"
                    },
                    {
                        "name": ""
                    },
                    {
                        "default": "1",
                        "name": "epi_factor"
                    }
                ]
            },
            "ecc_pipeline": {
                "args": [
                    {
                        "default": "'eddy_correct'",
                        "name": "name"
                    }
                ]
            },
            "hmc_pipeline": {
                "args": [
                    {
                        "default": "'motion_correct'",
                        "name": "name"
                    }
                ]
            },
            "remove_bias": {
                "args": [
                    {
                        "default": "'bias_correct'",
                        "name": "name"
                    }
                ]
            },
            "sdc_fmb": {
                "args": [
                    {
                        "default": "'fmb_correction'",
                        "name": "name"
                    },
                    {
                        "default": "'Linear'",
                        "name": "interp"
                    },
                    {
                        "name": ""
                    },
                    {
                        "default": "dict(smooth3d=2.0",
                        "name": "fugue_params"
                    }
                ]
            },
            "sdc_peb": {
                "args": [
                    {
                        "default": "'peb_correction'",
                        "name": "name"
                    },
                    {
                        "name": ""
                    },
                    {
                        "default": "dict(echospacing=0.77e-3",
                        "name": "epi_params"
                    },
                    {
                        "name": ""
                    },
                    {
                        "default": "3",
                        "name": "acc_factor"
                    },
                    {
                        "name": ""
                    },
                    {
                        "default": "'y-'",
                        "name": "enc_dir"
                    },
                    {
                        "name": ""
                    },
                    {
                        "default": "1)",
                        "name": "epi_factor"
                    },
                    {
                        "name": ""
                    },
                    {
                        "default": "dict(echospacing=0.77e-3",
                        "name": "altepi_params"
                    },
                    {
                        "name": ""
                    },
                    {
                        "default": "3",
                        "name": "acc_factor"
                    },
                    {
                        "name": ""
                    },
                    {
                        "default": "'y'",
                        "name": "enc_dir"
                    },
                    {
                        "name": ""
                    },
                    {
                        "default": "1",
                        "name": "epi_factor"
                    }
                ]
            }
        }
    },
    "base": {
        "*": {
            "create_pyscript": {
                "args": [
                    {
                        "name": "node"
                    },
                    {
                        "default": "False",
                        "name": "updatehash"
                    },
                    {
                        "default": "True",
                        "name": "store_exception"
                    }
                ]
            },
            "report_crash": {
                "args": [
                    {
                        "name": "node"
                    },
                    {
                        "default": "None",
                        "name": "traceback"
                    },
                    {
                        "default": "None",
                        "name": "hostname"
                    }
                ]
            },
            "report_nodes_not_run": {
                "args": [
                    {
                        "name": "notrun"
                    }
                ]
            }
        },
        "DistributedPluginBase": {
            "__init__": {
                "args": [
                    {
                        "default": "None",
                        "name": "plugin_args"
                    }
                ]
            },
            "_clean_queue": {
                "args": [
                    {
                        "name": "jobid"
                    },
                    {
                        "name": "graph"
                    },
                    {
                        "default": "None",
                        "name": "result"
                    }
                ]
            },
            "_clear_task": {
                "args": [
                    {
                        "name": "taskid"
                    }
                ]
            },
            "_generate_dependency_list": {
                "args": [
                    {
                        "name": "graph"
                    }
                ]
            },
            "_get_result": {
                "args": [
                    {
                        "name": "taskid"
                    }
                ]
            },
            "_remove_node_deps": {
                "args": [
                    {
                        "name": "jobid"
                    },
                    {
                        "name": "crashfile"
                    },
                    {
                        "name": "graph"
                    }
                ]
            },
            "_remove_node_dirs": {
                "args": []
            },
            "_report_crash": {
                "args": [
                    {
                        "name": "node"
                    },
                    {
                        "default": "None",
                        "name": "result"
                    }
                ]
            },
            "_send_procs_to_workers": {
                "args": [
                    {
                        "default": "False",
                        "name": "updatehash"
                    },
                    {
                        "default": "None",
                        "name": "graph"
                    }
                ]
            },
            "_submit_job": {
                "args": [
                    {
                        "name": "node"
                    },
                    {
                        "default": "False",
                        "name": "updatehash"
                    }
                ]
            },
            "_submit_mapnode": {
                "args": [
                    {
                        "name": "jobid"
                    }
                ]
            },
            "_task_finished_cb": {
                "args": [
                    {
                        "name": "jobid"
                    }
                ]
            },
            "run": {
                "args": [
                    {
                        "name": "graph"
                    },
                    {
                        "name": "config"
                    },
                    {
                        "default": "False",
                        "name": "updatehash"
                    }
                ]
            }
        },
        "PluginBase": {
            "__init__": {
                "args": [
                    {
                        "default": "None",
                        "name": "plugin_args"
                    }
                ]
            },
            "run": {
                "args": [
                    {
                        "name": "graph"
                    },
                    {
                        "name": "config"
                    },
                    {
                        "default": "False",
                        "name": "updatehash"
                    }
                ]
            }
        },
        "SGELikeBatchManagerBase": {
            "__init__": {
                "args": [
                    {
                        "name": "template"
                    },
                    {
                        "default": "None",
                        "name": "plugin_args"
                    }
                ]
            },
            "_clear_task": {
                "args": [
                    {
                        "name": "taskid"
                    }
                ]
            },
            "_get_result": {
                "args": [
                    {
                        "name": "taskid"
                    }
                ]
            },
            "_is_pending": {
                "args": [
                    {
                        "name": "taskid"
                    }
                ]
            },
            "_report_crash": {
                "args": [
                    {
                        "name": "node"
                    },
                    {
                        "default": "None",
                        "name": "result"
                    }
                ]
            },
            "_submit_batchtask": {
                "args": [
                    {
                        "name": "scriptfile"
                    },
                    {
                        "name": "node"
                    }
                ]
            },
            "_submit_job": {
                "args": [
                    {
                        "name": "node"
                    },
                    {
                        "default": "False",
                        "name": "updatehash"
                    }
                ]
            }
        }
    },
    "bem": {
        "*": {
            "create_bem_flow": {
                "args": [
                    {
                        "default": "'bem'",
                        "name": "name"
                    },
                    {
                        "default": "'stl'",
                        "name": "out_format"
                    }
                ]
            }
        }
    },
    "brains": {
        "*": {},
        "BRAINSAlignMSP": {},
        "BRAINSAlignMSPInputSpec": {},
        "BRAINSAlignMSPOutputSpec": {},
        "BRAINSClipInferior": {},
        "BRAINSClipInferiorInputSpec": {},
        "BRAINSClipInferiorOutputSpec": {},
        "BRAINSConstellationModeler": {},
        "BRAINSConstellationModelerInputSpec": {},
        "BRAINSConstellationModelerOutputSpec": {},
        "BRAINSEyeDetector": {},
        "BRAINSEyeDetectorInputSpec": {},
        "BRAINSEyeDetectorOutputSpec": {},
        "BRAINSInitializedControlPoints": {},
        "BRAINSInitializedControlPointsInputSpec": {},
        "BRAINSInitializedControlPointsOutputSpec": {},
        "BRAINSLandmarkInitializer": {},
        "BRAINSLandmarkInitializerInputSpec": {},
        "BRAINSLandmarkInitializerOutputSpec": {},
        "BRAINSLinearModelerEPCA": {},
        "BRAINSLinearModelerEPCAInputSpec": {},
        "BRAINSLinearModelerEPCAOutputSpec": {},
        "BRAINSLmkTransform": {},
        "BRAINSLmkTransformInputSpec": {},
        "BRAINSLmkTransformOutputSpec": {},
        "BRAINSMush": {},
        "BRAINSMushInputSpec": {},
        "BRAINSMushOutputSpec": {},
        "BRAINSSnapShotWriter": {},
        "BRAINSSnapShotWriterInputSpec": {},
        "BRAINSSnapShotWriterOutputSpec": {},
        "BRAINSTransformConvert": {},
        "BRAINSTransformConvertInputSpec": {},
        "BRAINSTransformConvertOutputSpec": {},
        "BRAINSTrimForegroundInDirection": {},
        "BRAINSTrimForegroundInDirectionInputSpec": {},
        "BRAINSTrimForegroundInDirectionOutputSpec": {},
        "CleanUpOverlapLabels": {},
        "CleanUpOverlapLabelsInputSpec": {},
        "CleanUpOverlapLabelsOutputSpec": {},
        "FindCenterOfBrainInputSpec": {},
        "FindCenterOfBrainOutputSpec": {},
        "GenerateLabelMapFromProbabilityMap": {},
        "GenerateLabelMapFromProbabilityMapInputSpec": {},
        "GenerateLabelMapFromProbabilityMapOutputSpec": {},
        "ImageRegionPlotter": {},
        "ImageRegionPlotterInputSpec": {},
        "ImageRegionPlotterOutputSpec": {},
        "JointHistogram": {},
        "JointHistogramInputSpec": {},
        "JointHistogramOutputSpec": {},
        "ShuffleVectorsModule": {},
        "ShuffleVectorsModuleInputSpec": {},
        "ShuffleVectorsModuleOutputSpec": {},
        "fcsv_to_hdf5": {},
        "fcsv_to_hdf5InputSpec": {},
        "fcsv_to_hdf5OutputSpec": {},
        "insertMidACPCpoint": {},
        "insertMidACPCpointInputSpec": {},
        "insertMidACPCpointOutputSpec": {},
        "landmarksConstellationAligner": {},
        "landmarksConstellationAlignerInputSpec": {},
        "landmarksConstellationAlignerOutputSpec": {},
        "landmarksConstellationWeights": {},
        "landmarksConstellationWeightsInputSpec": {},
        "landmarksConstellationWeightsOutputSpec": {}
    },
    "brainsfit": {
        "*": {},
        "BRAINSFitInputSpec": {},
        "BRAINSFitOutputSpec": {}
    },
    "brainsresample": {
        "*": {},
        "BRAINSResampleInputSpec": {},
        "BRAINSResampleOutputSpec": {}
    },
    "brainsresize": {
        "*": {},
        "BRAINSResizeInputSpec": {},
        "BRAINSResizeOutputSpec": {}
    },
    "c3": {
        "*": {},
        "C3dAffineToolInputSpec": {},
        "C3dAffineToolOutputSpec": {}
    },
    "calib": {
        "*": {},
        "SFLUTGenInputSpec": {},
        "SFLUTGenOutputSpec": {},
        "SFPICOCalibData": {
            "_gen_outfilename": {
                "args": []
            },
            "_list_outputs": {
                "args": []
            }
        },
        "SFPICOCalibDataInputSpec": {},
        "SFPICOCalibDataOutputSpec": {}
    },
    "changequantification": {
        "*": {},
        "IntensityDifferenceMetricInputSpec": {},
        "IntensityDifferenceMetricOutputSpec": {}
    },
    "checkerboardfilter": {
        "*": {},
        "CheckerBoardFilterInputSpec": {},
        "CheckerBoardFilterOutputSpec": {}
    },
    "classify": {
        "*": {},
        "BRAINSPosteriorToContinuousClassInputSpec": {},
        "BRAINSPosteriorToContinuousClassOutputSpec": {}
    },
    "cloghandler": {
        "*": {}
    },
    "cmtk": {
        "*": {
            "cmat": {
                "args": [
                    {
                        "name": "track_file"
                    },
                    {
                        "name": "roi_file"
                    },
                    {
                        "name": "resolution_network_file"
                    },
                    {
                        "name": "matrix_name"
                    },
                    {
                        "name": "matrix_mat_name"
                    },
                    {
                        "name": "endpoint_name"
                    },
                    {
                        "default": "False",
                        "name": "intersections"
                    }
                ]
            },
            "create_allpoints_cmat": {
                "args": [
                    {
                        "name": "streamlines"
                    },
                    {
                        "name": "roiData"
                    },
                    {
                        "name": "voxelSize"
                    },
                    {
                        "name": "n_rois"
                    }
                ]
            },
            "create_endpoints_array": {
                "args": [
                    {
                        "name": "fib"
                    },
                    {
                        "name": "voxelSize"
                    }
                ]
            },
            "get_connectivity_matrix": {
                "args": [
                    {
                        "name": "n_rois"
                    },
                    {
                        "name": "list_of_roi_crossed_lists"
                    }
                ]
            },
            "get_rois_crossed": {
                "args": [
                    {
                        "name": "pointsmm"
                    },
                    {
                        "name": "roiData"
                    },
                    {
                        "name": "voxelSize"
                    }
                ]
            },
            "length": {
                "args": [
                    {
                        "name": "xyz"
                    },
                    {
                        "default": "False",
                        "name": "along"
                    }
                ]
            },
            "save_fibers": {
                "args": [
                    {
                        "name": "oldhdr"
                    },
                    {
                        "name": "oldfib"
                    },
                    {
                        "name": "fname"
                    },
                    {
                        "name": "indices"
                    }
                ]
            }
        },
        "CreateMatrix": {
            "_gen_outfilename": {
                "args": [
                    {
                        "name": "ext"
                    }
                ]
            },
            "_list_outputs": {
                "args": []
            },
            "_run_interface": {
                "args": [
                    {
                        "name": "runtime"
                    }
                ]
            }
        },
        "CreateMatrixInputSpec": {},
        "CreateMatrixOutputSpec": {},
        "CreateNodesInputSpec": {},
        "CreateNodesOutputSpec": {},
        "ROIGen": {
            "_gen_outfilename": {
                "args": [
                    {
                        "name": "ext"
                    }
                ]
            },
            "_list_outputs": {
                "args": []
            },
            "_run_interface": {
                "args": [
                    {
                        "name": "runtime"
                    }
                ]
            },
            "create_nodes": {
                "args": [
                    {
                        "name": "roi_file"
                    },
                    {
                        "name": "resolution_network_file"
                    },
                    {
                        "name": "out_filename"
                    }
                ]
            }
        },
        "ROIGenInputSpec": {},
        "ROIGenOutputSpec": {}
    },
    "commandlineonly": {
        "*": {},
        "fiberstatsInputSpec": {},
        "fiberstatsOutputSpec": {}
    },
    "condor": {
        "*": {}
    },
    "config": {
        "*": {
            "mkdir_p": {
                "args": [
                    {
                        "name": "path"
                    }
                ]
            }
        }
    },
    "connectivity": {
        "*": {},
        "ConmatInputSpec": {},
        "ConmatOutputSpec": {}
    },
    "connectivity_mapping": {
        "*": {
            "create_connectivity_pipeline": {
                "args": [
                    {
                        "default": "\"connectivity\"",
                        "name": "name"
                    }
                ]
            }
        }
    },
    "convert": {
        "*": {},
        "AnalyzeHeader": {
            "_gen_outfilename": {
                "args": []
            },
            "_list_outputs": {
                "args": []
            }
        },
        "AnalyzeHeaderInputSpec": {},
        "AnalyzeHeaderOutputSpec": {},
        "DT2NIfTI": {
            "_gen_filename": {
                "args": [
                    {
                        "name": "name"
                    }
                ]
            },
            "_gen_outfilename": {
                "args": []
            },
            "_gen_outputroot": {
                "args": []
            },
            "_list_outputs": {
                "args": []
            }
        },
        "DT2NIfTIInputSpec": {},
        "DT2NIfTIOutputSpec": {},
        "FSL2Scheme": {
            "_gen_outfilename": {
                "args": []
            },
            "_list_outputs": {
                "args": []
            }
        },
        "FSL2SchemeInputSpec": {},
        "FSL2SchemeOutputSpec": {},
        "Image2Voxel": {
            "_gen_outfilename": {
                "args": []
            },
            "_list_outputs": {
                "args": []
            }
        },
        "Image2VoxelInputSpec": {},
        "Image2VoxelOutputSpec": {},
        "NIfTIDT2Camino": {
            "_gen_filename": {
                "args": [
                    {
                        "name": "name"
                    }
                ]
            },
            "_list_outputs": {
                "args": []
            }
        },
        "NIfTIDT2CaminoInputSpec": {},
        "NIfTIDT2CaminoOutputSpec": {},
        "ProcStreamlines": {
            "_format_arg": {
                "args": [
                    {
                        "name": "name"
                    },
                    {
                        "name": "spec"
                    },
                    {
                        "name": "value"
                    }
                ]
            },
            "_gen_outfilename": {
                "args": []
            },
            "_get_actual_outputroot": {
                "args": [
                    {
                        "name": "outputroot"
                    }
                ]
            },
            "_list_outputs": {
                "args": []
            },
            "_run_interface": {
                "args": [
                    {
                        "name": "runtime"
                    }
                ]
            }
        },
        "ProcStreamlinesInputSpec": {},
        "ProcStreamlinesOutputSpec": {},
        "ShredderInputSpec": {},
        "ShredderOutputSpec": {},
        "TractShredder": {
            "_gen_outfilename": {
                "args": []
            },
            "_list_outputs": {
                "args": []
            }
        },
        "TractShredderInputSpec": {},
        "TractShredderOutputSpec": {},
        "VtkStreamlines": {
            "_gen_outfilename": {
                "args": []
            },
            "_list_outputs": {
                "args": []
            }
        },
        "VtkStreamlinesInputSpec": {},
        "VtkStreamlinesOutputSpec": {}
    },
    "converters": {
        "*": {},
        "DWICompareInputSpec": {},
        "DWICompareOutputSpec": {},
        "DWISimpleCompare": {},
        "DWISimpleCompareInputSpec": {},
        "DWISimpleCompareOutputSpec": {}
    },
    "dagman": {
        "*": {}
    },
    "dcm2nii": {
        "*": {},
        "Dcm2niiInputSpec": {},
        "Dcm2niiOutputSpec": {}
    },
    "dcmstack": {
        "*": {
            "sanitize_path_comp": {
                "args": [
                    {
                        "name": "path_comp"
                    }
                ]
            }
        },
        "CopyMeta": {
            "_list_outputs": {
                "args": []
            },
            "_run_interface": {
                "args": [
                    {
                        "name": "runtime"
                    }
                ]
            }
        },
        "CopyMetaInputSpec": {},
        "CopyMetaOutputSpec": {},
        "DcmStack": {
            "_get_filelist": {
                "args": [
                    {
                        "name": "trait_input"
                    }
                ]
            },
            "_list_outputs": {
                "args": []
            },
            "_run_interface": {
                "args": [
                    {
                        "name": "runtime"
                    }
                ]
            }
        },
        "DcmStackInputSpec": {},
        "DcmStackOutputSpec": {},
        "GroupAndStack": {
            "_list_outputs": {
                "args": []
            },
            "_run_interface": {
                "args": [
                    {
                        "name": "runtime"
                    }
                ]
            }
        },
        "GroupAndStackOutputSpec": {},
        "LookupMeta": {
            "_list_outputs": {
                "args": []
            },
            "_make_name_map": {
                "args": []
            },
            "_outputs": {
                "args": []
            },
            "_run_interface": {
                "args": [
                    {
                        "name": "runtime"
                    }
                ]
            }
        },
        "LookupMetaInputSpec": {},
        "MergeNifti": {
            "_list_outputs": {
                "args": []
            },
            "_run_interface": {
                "args": [
                    {
                        "name": "runtime"
                    }
                ]
            }
        },
        "MergeNiftiInputSpec": {},
        "MergeNiftiOutputSpec": {
            "key_func": {
                "args": [
                    {
                        "name": "src_nii"
                    }
                ]
            },
            "make_key_func": {
                "args": [
                    {
                        "name": "meta_keys"
                    },
                    {
                        "default": "None",
                        "name": "index"
                    }
                ]
            }
        },
        "NiftiGeneratorBase": {
            "_get_out_path": {
                "args": [
                    {
                        "name": "meta"
                    },
                    {
                        "default": "None",
                        "name": "idx"
                    }
                ]
            }
        },
        "NiftiGeneratorBaseInputSpec": {},
        "SplitNiftiInputSpec": {},
        "SplitNiftiOutputSpec": {}
    },
    "debug": {
        "*": {}
    },
    "denoise": {
        "*": {
            "bg_mask": {
                "args": [
                    {
                        "name": "in_file"
                    },
                    {
                        "name": "in_mask"
                    },
                    {
                        "default": "None",
                        "name": "out_file"
                    }
                ]
            },
            "csf_mask": {
                "args": [
                    {
                        "name": "in_file"
                    },
                    {
                        "name": "in_mask"
                    },
                    {
                        "default": "None",
                        "name": "out_file"
                    }
                ]
            },
            "nlmeans_pipeline": {
                "args": [
                    {
                        "default": "'Denoise'",
                        "name": "name"
                    },
                    {
                        "name": ""
                    },
                    {
                        "default": "{'patch_radius': 1",
                        "name": "params"
                    },
                    {
                        "name": "'block_radius': 5}"
                    }
                ]
            }
        }
    },
    "denoising": {
        "*": {},
        "UnbiasedNonLocalMeansInputSpec": {},
        "UnbiasedNonLocalMeansOutputSpec": {}
    },
    "developer": {
        "*": {},
        "JistBrainMgdmSegmentation": {},
        "JistBrainMgdmSegmentationInputSpec": {},
        "JistBrainMgdmSegmentationOutputSpec": {},
        "JistBrainMp2rageDuraEstimation": {},
        "JistBrainMp2rageDuraEstimationInputSpec": {},
        "JistBrainMp2rageDuraEstimationOutputSpec": {},
        "JistBrainMp2rageSkullStripping": {},
        "JistBrainMp2rageSkullStrippingInputSpec": {},
        "JistBrainMp2rageSkullStrippingOutputSpec": {},
        "JistBrainPartialVolumeFilter": {},
        "JistBrainPartialVolumeFilterInputSpec": {},
        "JistBrainPartialVolumeFilterOutputSpec": {},
        "JistCortexSurfaceMeshInflation": {},
        "JistCortexSurfaceMeshInflationInputSpec": {},
        "JistCortexSurfaceMeshInflationOutputSpec": {},
        "JistIntensityMp2rageMasking": {},
        "JistIntensityMp2rageMaskingInputSpec": {},
        "JistIntensityMp2rageMaskingOutputSpec": {},
        "JistLaminarProfileCalculator": {},
        "JistLaminarProfileCalculatorInputSpec": {},
        "JistLaminarProfileCalculatorOutputSpec": {},
        "JistLaminarProfileGeometry": {},
        "JistLaminarProfileGeometryInputSpec": {},
        "JistLaminarProfileGeometryOutputSpec": {},
        "JistLaminarProfileSampling": {},
        "JistLaminarProfileSamplingInputSpec": {},
        "JistLaminarProfileSamplingOutputSpec": {},
        "JistLaminarROIAveraging": {},
        "JistLaminarROIAveragingInputSpec": {},
        "JistLaminarROIAveragingOutputSpec": {},
        "JistLaminarVolumetricLayering": {},
        "JistLaminarVolumetricLayeringInputSpec": {},
        "JistLaminarVolumetricLayeringOutputSpec": {},
        "MedicAlgorithmImageCalculator": {},
        "MedicAlgorithmImageCalculatorInputSpec": {},
        "MedicAlgorithmImageCalculatorOutputSpec": {},
        "MedicAlgorithmLesionToads": {},
        "MedicAlgorithmLesionToadsInputSpec": {},
        "MedicAlgorithmLesionToadsOutputSpec": {},
        "MedicAlgorithmMipavReorient": {},
        "MedicAlgorithmMipavReorientInputSpec": {},
        "MedicAlgorithmMipavReorientOutputSpec": {},
        "MedicAlgorithmN3": {},
        "MedicAlgorithmN3InputSpec": {},
        "MedicAlgorithmN3OutputSpec": {},
        "MedicAlgorithmSPECTRE2010": {},
        "MedicAlgorithmSPECTRE2010InputSpec": {},
        "MedicAlgorithmSPECTRE2010OutputSpec": {},
        "MedicAlgorithmThresholdToBinaryMaskInputSpec": {},
        "MedicAlgorithmThresholdToBinaryMaskOutputSpec": {},
        "RandomVol": {},
        "RandomVolInputSpec": {},
        "RandomVolOutputSpec": {}
    },
    "diffusion": {
        "*": {
            "create_camino_dti_pipeline": {
                "args": [
                    {
                        "default": "\"dtiproc\"",
                        "name": "name"
                    }
                ]
            }
        }
    },
    "docparse": {
        "*": {
            "_parse_doc": {
                "args": [
                    {
                        "name": "doc"
                    },
                    {
                        "default": "['--']",
                        "name": "style"
                    }
                ]
            },
            "build_doc": {
                "args": [
                    {
                        "name": "doc"
                    },
                    {
                        "name": "opts"
                    }
                ]
            },
            "format_params": {
                "args": [
                    {
                        "name": "paramlist"
                    },
                    {
                        "default": "None",
                        "name": "otherlist"
                    }
                ]
            },
            "get_doc": {
                "args": [
                    {
                        "name": "cmd"
                    },
                    {
                        "name": "opt_map"
                    },
                    {
                        "default": "None",
                        "name": "help_flag"
                    },
                    {
                        "default": "True",
                        "name": "trap_error"
                    }
                ]
            },
            "get_params_from_doc": {
                "args": [
                    {
                        "name": "cmd"
                    },
                    {
                        "default": "'--'",
                        "name": "style"
                    },
                    {
                        "default": "None",
                        "name": "help_flag"
                    },
                    {
                        "default": "True",
                        "name": "trap_error"
                    }
                ]
            },
            "grab_doc": {
                "args": [
                    {
                        "name": "cmd"
                    },
                    {
                        "default": "True",
                        "name": "trap_error"
                    }
                ]
            },
            "insert_doc": {
                "args": [
                    {
                        "name": "doc"
                    },
                    {
                        "name": "new_items"
                    }
                ]
            },
            "replace_opts": {
                "args": [
                    {
                        "name": "rep_doc"
                    },
                    {
                        "name": "opts"
                    }
                ]
            },
            "reverse_opt_map": {
                "args": [
                    {
                        "name": "opt_map"
                    }
                ]
            }
        }
    },
    "dti": {
        "*": {
            "bedpostx_parallel": {
                "args": [
                    {
                        "default": "'bedpostx_parallel'",
                        "name": "name"
                    },
                    {
                        "name": ""
                    },
                    {
                        "default": "True",
                        "name": "compute_all_outputs"
                    },
                    {
                        "name": ""
                    },
                    {
                        "default": "{'n_fibres':2",
                        "name": "params"
                    },
                    {
                        "name": "'fudge':1"
                    },
                    {
                        "name": "'burn_in':1000"
                    },
                    {
                        "name": ""
                    },
                    {
                        "name": "'n_jumps':1250"
                    },
                    {
                        "name": "'sample_every':25"
                    },
                    {
                        "name": "'model':1"
                    },
                    {
                        "name": ""
                    },
                    {
                        "name": "'cnlinear':True}"
                    }
                ]
            },
            "create_bedpostx_pipeline": {
                "args": [
                    {
                        "default": "'bedpostx'",
                        "name": "name"
                    },
                    {
                        "default": "{'n_fibres':2",
                        "name": "params"
                    },
                    {
                        "name": "'fudge':1"
                    },
                    {
                        "name": "'burn_in':1000"
                    },
                    {
                        "name": ""
                    },
                    {
                        "name": "'n_jumps':1250"
                    },
                    {
                        "name": "'sample_every':25"
                    },
                    {
                        "name": "'model':1"
                    },
                    {
                        "name": ""
                    },
                    {
                        "name": "'cnlinear':True}"
                    }
                ]
            },
            "merge_and_mean": {
                "args": [
                    {
                        "default": "'mm'",
                        "name": "name"
                    }
                ]
            },
            "merge_and_mean_parallel": {
                "args": [
                    {
                        "default": "'mm'",
                        "name": "name"
                    }
                ]
            },
            "transpose": {
                "args": [
                    {
                        "name": "samples_over_fibres"
                    }
                ]
            }
        }
    },
    "dynamic_slicer": {
        "*": {},
        "SlicerCommandLineInputSpec": {}
    },
    "engine": {
        "*": {
            "_write_inputs": {
                "args": [
                    {
                        "name": "node"
                    }
                ]
            },
            "format_node": {
                "args": [
                    {
                        "name": "node"
                    },
                    {
                        "default": "'python'",
                        "name": "format"
                    },
                    {
                        "default": "False",
                        "name": "include_config"
                    }
                ]
            }
        },
        "JoinNode": {
            "__init__": {
                "args": [
                    {
                        "name": "interface"
                    },
                    {
                        "name": "name"
                    },
                    {
                        "name": "joinsource"
                    },
                    {
                        "default": "None",
                        "name": "joinfield"
                    },
                    {
                        "name": ""
                    },
                    {
                        "default": "False",
                        "name": "unique"
                    },
                    {
                        "name": "**kwargs"
                    }
                ]
            },
            "_add_join_item_field": {
                "args": [
                    {
                        "name": "field"
                    },
                    {
                        "name": "index"
                    }
                ]
            },
            "_add_join_item_fields": {
                "args": []
            },
            "_collate_input_value": {
                "args": [
                    {
                        "name": "field"
                    }
                ]
            },
            "_collate_join_field_inputs": {
                "args": []
            },
            "_join_item_field_name": {
                "args": [
                    {
                        "name": "field"
                    },
                    {
                        "name": "index"
                    }
                ]
            },
            "_override_join_traits": {
                "args": [
                    {
                        "name": "basetraits"
                    },
                    {
                        "name": "fields"
                    }
                ]
            },
            "_run_command": {
                "args": [
                    {
                        "name": "execute"
                    },
                    {
                        "default": "True",
                        "name": "copyfiles"
                    }
                ]
            },
            "_slot_value": {
                "args": [
                    {
                        "name": "field"
                    },
                    {
                        "name": "index"
                    }
                ]
            },
            "inputs": {
                "args": []
            },
            "joinsource": {
                "args": [
                    {
                        "name": "value"
                    }
                ]
            }
        },
        "Node": {
            "__init__": {
                "args": [
                    {
                        "name": "interface"
                    },
                    {
                        "name": "name"
                    },
                    {
                        "default": "None",
                        "name": "iterables"
                    },
                    {
                        "default": "None",
                        "name": "itersource"
                    },
                    {
                        "name": ""
                    },
                    {
                        "default": "False",
                        "name": "synchronize"
                    },
                    {
                        "default": "None",
                        "name": "overwrite"
                    },
                    {
                        "default": "None",
                        "name": "needed_outputs"
                    },
                    {
                        "name": ""
                    },
                    {
                        "default": "False",
                        "name": "run_without_submitting"
                    },
                    {
                        "name": "**kwargs"
                    }
                ]
            },
            "_copyfiles_to_wd": {
                "args": [
                    {
                        "name": "outdir"
                    },
                    {
                        "name": "execute"
                    },
                    {
                        "default": "False",
                        "name": "linksonly"
                    }
                ]
            },
            "_get_hashval": {
                "args": []
            },
            "_get_inputs": {
                "args": []
            },
            "_load_resultfile": {
                "args": [
                    {
                        "name": "cwd"
                    }
                ]
            },
            "_load_results": {
                "args": [
                    {
                        "name": "cwd"
                    }
                ]
            },
            "_parameterization_dir": {
                "args": [
                    {
                        "name": "param"
                    }
                ]
            },
            "_run_command": {
                "args": [
                    {
                        "name": "execute"
                    },
                    {
                        "default": "True",
                        "name": "copyfiles"
                    }
                ]
            },
            "_run_interface": {
                "args": [
                    {
                        "default": "True",
                        "name": "execute"
                    },
                    {
                        "default": "False",
                        "name": "updatehash"
                    }
                ]
            },
            "_save_hashfile": {
                "args": [
                    {
                        "name": "hashfile"
                    },
                    {
                        "name": "hashed_inputs"
                    }
                ]
            },
            "_save_results": {
                "args": [
                    {
                        "name": "result"
                    },
                    {
                        "name": "cwd"
                    }
                ]
            },
            "_strip_temp": {
                "args": [
                    {
                        "name": "files"
                    },
                    {
                        "name": "wd"
                    }
                ]
            },
            "get_output": {
                "args": [
                    {
                        "name": "parameter"
                    }
                ]
            },
            "hash_exists": {
                "args": [
                    {
                        "default": "False",
                        "name": "updatehash"
                    }
                ]
            },
            "help": {
                "args": []
            },
            "inputs": {
                "args": []
            },
            "interface": {
                "args": []
            },
            "output_dir": {
                "args": []
            },
            "outputs": {
                "args": []
            },
            "result": {
                "args": []
            },
            "run": {
                "args": [
                    {
                        "default": "False",
                        "name": "updatehash"
                    }
                ]
            },
            "set_input": {
                "args": [
                    {
                        "name": "parameter"
                    },
                    {
                        "name": "val"
                    }
                ]
            },
            "update": {
                "args": [
                    {
                        "name": "**opts"
                    }
                ]
            },
            "write_report": {
                "args": [
                    {
                        "default": "None",
                        "name": "report_type"
                    },
                    {
                        "default": "None",
                        "name": "cwd"
                    }
                ]
            }
        },
        "Workflow": {
            "__init__": {
                "args": [
                    {
                        "name": "name"
                    },
                    {
                        "default": "None",
                        "name": "base_dir"
                    }
                ]
            },
            "_check_inputs": {
                "args": [
                    {
                        "name": "parameter"
                    }
                ]
            },
            "_check_nodes": {
                "args": [
                    {
                        "name": "nodes"
                    }
                ]
            },
            "_check_outputs": {
                "args": [
                    {
                        "name": "parameter"
                    }
                ]
            },
            "_configure_exec_nodes": {
                "args": [
                    {
                        "name": "graph"
                    }
                ]
            },
            "_create_flat_graph": {
                "args": []
            },
            "_generate_flatgraph": {
                "args": []
            },
            "_get_all_nodes": {
                "args": []
            },
            "_get_dot": {
                "args": [
                    {
                        "default": "None",
                        "name": "prefix"
                    },
                    {
                        "default": "None",
                        "name": "hierarchy"
                    },
                    {
                        "default": "False",
                        "name": "colored"
                    },
                    {
                        "name": ""
                    },
                    {
                        "default": "True",
                        "name": "simple_form"
                    },
                    {
                        "default": "0",
                        "name": "level"
                    }
                ]
            },
            "_get_inputs": {
                "args": []
            },
            "_get_outputs": {
                "args": []
            },
            "_get_parameter_node": {
                "args": [
                    {
                        "name": "parameter"
                    },
                    {
                        "default": "'in'",
                        "name": "subtype"
                    }
                ]
            },
            "_has_attr": {
                "args": [
                    {
                        "name": "parameter"
                    },
                    {
                        "default": "'in'",
                        "name": "subtype"
                    }
                ]
            },
            "_has_node": {
                "args": [
                    {
                        "name": "wanted_node"
                    }
                ]
            },
            "_reset_hierarchy": {
                "args": []
            },
            "_set_input": {
                "args": [
                    {
                        "name": "object"
                    },
                    {
                        "name": "name"
                    },
                    {
                        "name": "newvalue"
                    }
                ]
            },
            "_set_needed_outputs": {
                "args": [
                    {
                        "name": "graph"
                    }
                ]
            },
            "_set_node_input": {
                "args": [
                    {
                        "name": "node"
                    },
                    {
                        "name": "param"
                    },
                    {
                        "name": "source"
                    },
                    {
                        "name": "sourceinfo"
                    }
                ]
            },
            "_write_report_info": {
                "args": [
                    {
                        "name": "workingdir"
                    },
                    {
                        "name": "name"
                    },
                    {
                        "name": "graph"
                    }
                ]
            },
            "add_nodes": {
                "args": [
                    {
                        "name": "nodes"
                    }
                ]
            },
            "clone": {
                "args": [
                    {
                        "name": "name"
                    }
                ]
            },
            "connect": {
                "args": [
                    {
                        "name": "*args"
                    },
                    {
                        "name": "**kwargs"
                    }
                ]
            },
            "disconnect": {
                "args": [
                    {
                        "name": "*args"
                    }
                ]
            },
            "export": {
                "args": [
                    {
                        "default": "None",
                        "name": "filename"
                    },
                    {
                        "default": "\"output\"",
                        "name": "prefix"
                    },
                    {
                        "default": "\"python\"",
                        "name": "format"
                    },
                    {
                        "name": ""
                    },
                    {
                        "default": "False",
                        "name": "include_config"
                    }
                ]
            },
            "get_node": {
                "args": [
                    {
                        "name": "name"
                    }
                ]
            },
            "getname": {
                "args": [
                    {
                        "name": "u"
                    },
                    {
                        "name": "i"
                    }
                ]
            },
            "inputs": {
                "args": []
            },
            "list_node_names": {
                "args": []
            },
            "outputs": {
                "args": []
            },
            "remove_nodes": {
                "args": [
                    {
                        "name": "nodes"
                    }
                ]
            },
            "run": {
                "args": [
                    {
                        "default": "None",
                        "name": "plugin"
                    },
                    {
                        "default": "None",
                        "name": "plugin_args"
                    },
                    {
                        "default": "False",
                        "name": "updatehash"
                    }
                ]
            },
            "write_graph": {
                "args": [
                    {
                        "default": "'graph.dot'",
                        "name": "dotfilename"
                    },
                    {
                        "default": "'hierarchical'",
                        "name": "graph2use"
                    },
                    {
                        "name": ""
                    },
                    {
                        "default": "\"png\"",
                        "name": "format"
                    },
                    {
                        "default": "True",
                        "name": "simple_form"
                    }
                ]
            },
            "write_hierarchical_dotfile": {
                "args": [
                    {
                        "default": "None",
                        "name": "dotfilename"
                    },
                    {
                        "default": "False",
                        "name": "colored"
                    },
                    {
                        "name": ""
                    },
                    {
                        "default": "True",
                        "name": "simple_form"
                    }
                ]
            }
        },
        "WorkflowBase": {
            "__init__": {
                "args": [
                    {
                        "default": "None",
                        "name": "name"
                    },
                    {
                        "default": "None",
                        "name": "base_dir"
                    }
                ]
            },
            "__repr__": {
                "args": []
            },
            "_check_inputs": {
                "args": [
                    {
                        "name": "parameter"
                    }
                ]
            },
            "_check_outputs": {
                "args": [
                    {
                        "name": "parameter"
                    }
                ]
            },
            "_verify_name": {
                "args": [
                    {
                        "name": "name"
                    }
                ]
            },
            "clone": {
                "args": [
                    {
                        "name": "name"
                    }
                ]
            },
            "fullname": {
                "args": []
            },
            "inputs": {
                "args": []
            },
            "load": {
                "args": [
                    {
                        "name": "filename"
                    }
                ]
            },
            "outputs": {
                "args": []
            },
            "save": {
                "args": [
                    {
                        "default": "None",
                        "name": "filename"
                    }
                ]
            }
        }
    },
    "epi": {
        "*": {
            "_cat_logs": {
                "args": [
                    {
                        "name": "in_files"
                    }
                ]
            },
            "_compute_dwelltime": {
                "args": [
                    {
                        "default": "0.68",
                        "name": "dwell_time"
                    },
                    {
                        "default": "1.0",
                        "name": "pi_factor"
                    },
                    {
                        "default": "False",
                        "name": "is_reverse_encoding"
                    }
                ]
            },
            "_dilate_mask": {
                "args": [
                    {
                        "name": "in_file"
                    },
                    {
                        "default": "4",
                        "name": "iterations"
                    }
                ]
            },
            "_effective_echospacing": {
                "args": [
                    {
                        "name": "dwell_time"
                    },
                    {
                        "default": "1.0",
                        "name": "pi_factor"
                    }
                ]
            },
            "_fill_phase": {
                "args": [
                    {
                        "name": "in_file"
                    }
                ]
            },
            "_ms2sec": {
                "args": [
                    {
                        "name": "val"
                    }
                ]
            },
            "_prepare_phasediff": {
                "args": [
                    {
                        "name": "in_file"
                    }
                ]
            },
            "_rotate_bvecs": {
                "args": [
                    {
                        "name": "in_bvec"
                    },
                    {
                        "name": "in_matrix"
                    }
                ]
            },
            "_split_dwi": {
                "args": [
                    {
                        "name": "in_file"
                    }
                ]
            },
            "_vsm_remove_mean": {
                "args": [
                    {
                        "name": "in_file"
                    },
                    {
                        "name": "mask_file"
                    },
                    {
                        "name": "in_unwarped"
                    }
                ]
            },
            "create_dmri_preprocessing": {
                "args": [
                    {
                        "default": "'dMRI_preprocessing'",
                        "name": "name"
                    },
                    {
                        "default": "True",
                        "name": "use_fieldmap"
                    },
                    {
                        "default": "False",
                        "name": "fieldmap_registration"
                    }
                ]
            },
            "create_eddy_correct_pipeline": {
                "args": [
                    {
                        "default": "'eddy_correct'",
                        "name": "name"
                    }
                ]
            },
            "create_epidewarp_pipeline": {
                "args": [
                    {
                        "default": "'epidewarp'",
                        "name": "name"
                    },
                    {
                        "default": "False",
                        "name": "fieldmap_registration"
                    }
                ]
            },
            "create_motion_correct_pipeline": {
                "args": [
                    {
                        "default": "'motion_correct'",
                        "name": "name"
                    }
                ]
            },
            "fieldmap_correction": {
                "args": [
                    {
                        "default": "'fieldmap_correction'",
                        "name": "name"
                    },
                    {
                        "default": "False",
                        "name": "nocheck"
                    }
                ]
            },
            "topup_correction": {
                "args": [
                    {
                        "default": "'topup_correction'",
                        "name": "name"
                    }
                ]
            }
        }
    },
    "estimate": {
        "*": {
            "create_fixed_effects_flow": {
                "args": [
                    {
                        "default": "'fixedfx'",
                        "name": "name"
                    }
                ]
            },
            "create_modelfit_workflow": {
                "args": [
                    {
                        "default": "'modelfit'",
                        "name": "name"
                    },
                    {
                        "default": "False",
                        "name": "f_contrasts"
                    }
                ]
            },
            "create_overlay_workflow": {
                "args": [
                    {
                        "default": "'overlay'",
                        "name": "name"
                    }
                ]
            },
            "get_dofvolumes": {
                "args": [
                    {
                        "name": "dof_files"
                    },
                    {
                        "name": "cope_files"
                    }
                ]
            }
        }
    },
    "extractskeleton": {
        "*": {},
        "ExtractSkeletonInputSpec": {},
        "ExtractSkeletonOutputSpec": {}
    },
    "featurecreator": {
        "*": {},
        "GenerateCsfClippedFromClassifiedImageInputSpec": {},
        "GenerateCsfClippedFromClassifiedImageOutputSpec": {}
    },
    "featuredetection": {
        "*": {},
        "CannyEdgeInputSpec": {},
        "CannyEdgeOutputSpec": {},
        "CannySegmentationLevelSetImageFilter": {},
        "CannySegmentationLevelSetImageFilterInputSpec": {},
        "CannySegmentationLevelSetImageFilterOutputSpec": {},
        "DilateImage": {},
        "DilateImageInputSpec": {},
        "DilateImageOutputSpec": {},
        "DilateMask": {},
        "DilateMaskInputSpec": {},
        "DilateMaskOutputSpec": {},
        "DistanceMaps": {},
        "DistanceMapsInputSpec": {},
        "DistanceMapsOutputSpec": {},
        "DumpBinaryTrainingVectors": {},
        "DumpBinaryTrainingVectorsInputSpec": {},
        "DumpBinaryTrainingVectorsOutputSpec": {},
        "ErodeImage": {},
        "ErodeImageInputSpec": {},
        "ErodeImageOutputSpec": {},
        "FlippedDifference": {},
        "FlippedDifferenceInputSpec": {},
        "FlippedDifferenceOutputSpec": {},
        "GenerateBrainClippedImage": {},
        "GenerateBrainClippedImageInputSpec": {},
        "GenerateBrainClippedImageOutputSpec": {},
        "GenerateSummedGradientImage": {},
        "GenerateSummedGradientImageInputSpec": {},
        "GenerateSummedGradientImageOutputSpec": {},
        "GenerateTestImage": {},
        "GenerateTestImageInputSpec": {},
        "GenerateTestImageOutputSpec": {},
        "GradientAnisotropicDiffusionImageFilter": {},
        "GradientAnisotropicDiffusionImageFilterInputSpec": {},
        "GradientAnisotropicDiffusionImageFilterOutputSpec": {},
        "HammerAttributeCreator": {},
        "HammerAttributeCreatorInputSpec": {},
        "HammerAttributeCreatorOutputSpec": {},
        "NeighborhoodMean": {},
        "NeighborhoodMeanInputSpec": {},
        "NeighborhoodMeanOutputSpec": {},
        "NeighborhoodMedian": {},
        "NeighborhoodMedianInputSpec": {},
        "NeighborhoodMedianOutputSpec": {},
        "STAPLEAnalysis": {},
        "STAPLEAnalysisInputSpec": {},
        "STAPLEAnalysisOutputSpec": {},
        "TextureFromNoiseImageFilter": {},
        "TextureFromNoiseImageFilterInputSpec": {},
        "TextureFromNoiseImageFilterOutputSpec": {},
        "TextureMeasureFilter": {},
        "TextureMeasureFilterInputSpec": {},
        "TextureMeasureFilterOutputSpec": {}
    },
    "fiberprocess": {
        "*": {},
        "fiberprocessInputSpec": {},
        "fiberprocessOutputSpec": {}
    },
    "fibertrack": {
        "*": {},
        "fibertrackInputSpec": {},
        "fibertrackOutputSpec": {}
    },
    "filemanip": {
        "*": {}
    },
    "filtering": {
        "*": {},
        "OtsuThresholdImageFilter": {},
        "OtsuThresholdImageFilterInputSpec": {},
        "OtsuThresholdImageFilterOutputSpec": {},
        "ResampleScalarVolumeInputSpec": {},
        "ResampleScalarVolumeOutputSpec": {}
    },
    "generate_classes": {
        "*": {
            "add_class_to_package": {
                "args": [
                    {
                        "name": "class_codes"
                    },
                    {
                        "name": "class_names"
                    },
                    {
                        "name": "module_name"
                    },
                    {
                        "name": "package_dir"
                    }
                ]
            },
            "configuration": {
                "args": [
                    {
                        "default": "''",
                        "name": "parent_package"
                    },
                    {
                        "default": "None",
                        "name": "top_path"
                    }
                ]
            },
            "crawl_code_struct": {
                "args": [
                    {
                        "name": "code_struct"
                    },
                    {
                        "name": "package_dir"
                    }
                ]
            },
            "force_to_valid_python_variable_name": {
                "args": [
                    {
                        "name": "old_name"
                    }
                ]
            },
            "gen_filename_from_param": {
                "args": [
                    {
                        "name": "param"
                    },
                    {
                        "name": "base"
                    }
                ]
            },
            "generate_all_classes": {
                "args": [
                    {
                        "default": "[]",
                        "name": "modules_list"
                    },
                    {
                        "default": "[]",
                        "name": "launcher"
                    },
                    {
                        "default": "False",
                        "name": "redirect_x"
                    },
                    {
                        "default": "False",
                        "name": "mipav_hacks"
                    }
                ]
            },
            "generate_class": {
                "args": [
                    {
                        "name": "module"
                    },
                    {
                        "name": "launcher"
                    },
                    {
                        "default": "True",
                        "name": "strip_module_name_prefix"
                    },
                    {
                        "default": " False",
                        "name": "redirect_x "
                    },
                    {
                        "default": "False",
                        "name": "mipav_hacks"
                    }
                ]
            },
            "grab_xml": {
                "args": [
                    {
                        "name": "module"
                    },
                    {
                        "name": "launcher"
                    },
                    {
                        "default": "False",
                        "name": "mipav_hacks"
                    }
                ]
            },
            "parse_params": {
                "args": [
                    {
                        "name": "params"
                    }
                ]
            },
            "parse_values": {
                "args": [
                    {
                        "name": "values"
                    }
                ]
            }
        }
    },
    "group_connectivity": {
        "*": {
            "create_group_connectivity_pipeline": {
                "args": [
                    {
                        "name": "group_list"
                    },
                    {
                        "name": "group_id"
                    },
                    {
                        "name": "data_dir"
                    },
                    {
                        "name": "subjects_dir"
                    },
                    {
                        "name": "output_dir"
                    },
                    {
                        "default": "0",
                        "name": "template_args_dict"
                    }
                ]
            }
        }
    },
    "gtract": {
        "*": {},
        "compareTractInclusion": {},
        "compareTractInclusionInputSpec": {},
        "compareTractInclusionOutputSpec": {},
        "extractNrrdVectorIndex": {},
        "extractNrrdVectorIndexInputSpec": {},
        "extractNrrdVectorIndexOutputSpec": {},
        "gtractAnisotropyMap": {},
        "gtractAnisotropyMapInputSpec": {},
        "gtractAnisotropyMapOutputSpec": {},
        "gtractAverageBvalues": {},
        "gtractAverageBvaluesInputSpec": {},
        "gtractAverageBvaluesOutputSpec": {},
        "gtractClipAnisotropy": {},
        "gtractClipAnisotropyInputSpec": {},
        "gtractClipAnisotropyOutputSpec": {},
        "gtractCoRegAnatomy": {},
        "gtractCoRegAnatomyInputSpec": {},
        "gtractCoRegAnatomyOutputSpec": {},
        "gtractConcatDwi": {},
        "gtractConcatDwiInputSpec": {},
        "gtractConcatDwiOutputSpec": {},
        "gtractCopyImageOrientation": {},
        "gtractCopyImageOrientationInputSpec": {},
        "gtractCopyImageOrientationOutputSpec": {},
        "gtractCoregBvalues": {},
        "gtractCoregBvaluesInputSpec": {},
        "gtractCoregBvaluesOutputSpec": {},
        "gtractCostFastMarching": {},
        "gtractCostFastMarchingInputSpec": {},
        "gtractCostFastMarchingOutputSpec": {},
        "gtractCreateGuideFiber": {},
        "gtractCreateGuideFiberInputSpec": {},
        "gtractCreateGuideFiberOutputSpec": {},
        "gtractFastMarchingTracking": {},
        "gtractFastMarchingTrackingInputSpec": {},
        "gtractFastMarchingTrackingOutputSpec": {},
        "gtractFiberTracking": {},
        "gtractFiberTrackingInputSpec": {},
        "gtractFiberTrackingOutputSpec": {},
        "gtractImageConformity": {},
        "gtractImageConformityInputSpec": {},
        "gtractImageConformityOutputSpec": {},
        "gtractInvertBSplineTransform": {},
        "gtractInvertBSplineTransformInputSpec": {},
        "gtractInvertBSplineTransformOutputSpec": {},
        "gtractInvertDisplacementField": {},
        "gtractInvertDisplacementFieldInputSpec": {},
        "gtractInvertDisplacementFieldOutputSpec": {},
        "gtractInvertRigidTransform": {},
        "gtractInvertRigidTransformInputSpec": {},
        "gtractInvertRigidTransformOutputSpec": {},
        "gtractResampleAnisotropy": {},
        "gtractResampleAnisotropyInputSpec": {},
        "gtractResampleAnisotropyOutputSpec": {},
        "gtractResampleB0": {},
        "gtractResampleB0InputSpec": {},
        "gtractResampleB0OutputSpec": {},
        "gtractResampleCodeImage": {},
        "gtractResampleCodeImageInputSpec": {},
        "gtractResampleCodeImageOutputSpec": {},
        "gtractResampleDWIInPlace": {},
        "gtractResampleDWIInPlaceInputSpec": {},
        "gtractResampleDWIInPlaceOutputSpec": {},
        "gtractResampleFibers": {},
        "gtractResampleFibersInputSpec": {},
        "gtractResampleFibersOutputSpec": {},
        "gtractTensorInputSpec": {},
        "gtractTensorOutputSpec": {},
        "gtractTransformToDisplacementField": {},
        "gtractTransformToDisplacementFieldInputSpec": {},
        "gtractTransformToDisplacementFieldOutputSpec": {}
    },
    "histogrammatching": {
        "*": {},
        "HistogramMatchingInputSpec": {},
        "HistogramMatchingOutputSpec": {}
    },
    "icc": {
        "*": {},
        "ICCInputSpec": {},
        "ICCOutputSpec": {}
    },
    "imagelabelcombine": {
        "*": {},
        "ImageLabelCombineInputSpec": {},
        "ImageLabelCombineOutputSpec": {}
    },
    "info": {
        "*": {
            "get_nipype_gitversion": {
                "args": [
                    {
                        "name": ""
                    }
                ]
            }
        }
    },
    "io": {
        "*": {
            "add_traits": {
                "args": [
                    {
                        "name": "base"
                    },
                    {
                        "name": "names"
                    },
                    {
                        "default": "None",
                        "name": "trait_type"
                    }
                ]
            },
            "copytree": {
                "args": [
                    {
                        "name": "src"
                    },
                    {
                        "name": "dst"
                    },
                    {
                        "default": "False",
                        "name": "use_hardlink"
                    }
                ]
            }
        },
        "DataFinder": {
            "_list_outputs": {
                "args": []
            },
            "_match_path": {
                "args": [
                    {
                        "name": "target_path"
                    }
                ]
            },
            "_run_interface": {
                "args": [
                    {
                        "name": "runtime"
                    }
                ]
            }
        },
        "DataFinderInputSpec": {},
        "DataGrabber": {
            "__init__": {
                "args": [
                    {
                        "default": "None",
                        "name": "infields"
                    },
                    {
                        "default": "None",
                        "name": "outfields"
                    },
                    {
                        "name": "**kwargs"
                    }
                ]
            },
            "_add_output_traits": {
                "args": [
                    {
                        "name": "base"
                    }
                ]
            },
            "_list_outputs": {
                "args": []
            }
        },
        "DataGrabberInputSpec": {},
        "DataSink": {
            "__init__": {
                "args": [
                    {
                        "default": "None",
                        "name": "infields"
                    },
                    {
                        "default": "True",
                        "name": "force_run"
                    },
                    {
                        "name": "**kwargs"
                    }
                ]
            },
            "_get_dst": {
                "args": [
                    {
                        "name": "src"
                    }
                ]
            },
            "_list_outputs": {
                "args": []
            },
            "_substitute": {
                "args": [
                    {
                        "name": "pathstr"
                    }
                ]
            }
        },
        "DataSinkInputSpec": {
            "__setattr__": {
                "args": [
                    {
                        "name": "key"
                    },
                    {
                        "name": "value"
                    }
                ]
            }
        },
        "DataSinkOutputSpec": {},
        "FSSourceInputSpec": {},
        "FSSourceOutputSpec": {},
        "FreeSurferSource": {
            "_get_files": {
                "args": [
                    {
                        "name": "path"
                    },
                    {
                        "name": "key"
                    },
                    {
                        "name": "dirval"
                    },
                    {
                        "default": "None",
                        "name": "altkey"
                    }
                ]
            },
            "_list_outputs": {
                "args": []
            }
        },
        "IOBase": {
            "_add_output_traits": {
                "args": [
                    {
                        "name": "base"
                    }
                ]
            },
            "_list_outputs": {
                "args": []
            },
            "_outputs": {
                "args": []
            },
            "_run_interface": {
                "args": [
                    {
                        "name": "runtime"
                    }
                ]
            }
        },
        "JSONFileGrabber": {
            "_list_outputs": {
                "args": []
            }
        },
        "JSONFileGrabberInputSpec": {},
        "JSONFileSinkInputSpec": {
            "__setattr__": {
                "args": [
                    {
                        "name": "key"
                    },
                    {
                        "name": "value"
                    }
                ]
            }
        },
        "JSONFileSinkOutputSpec": {},
        "MySQLSink": {
            "__init__": {
                "args": [
                    {
                        "name": "input_names"
                    },
                    {
                        "name": "**inputs"
                    }
                ]
            },
            "_list_outputs": {
                "args": []
            }
        },
        "MySQLSinkInputSpec": {},
        "SQLiteSink": {
            "__init__": {
                "args": [
                    {
                        "name": "input_names"
                    },
                    {
                        "name": "**inputs"
                    }
                ]
            },
            "_list_outputs": {
                "args": []
            }
        },
        "SQLiteSinkInputSpec": {},
        "SSHDataGrabber": {
            "__init__": {
                "args": [
                    {
                        "default": "None",
                        "name": "infields"
                    },
                    {
                        "default": "None",
                        "name": "outfields"
                    },
                    {
                        "name": "**kwargs"
                    }
                ]
            },
            "_get_ssh_client": {
                "args": []
            },
            "_list_outputs": {
                "args": []
            }
        },
        "SSHDataGrabberInputSpec": {},
        "SelectFiles": {
            "__init__": {
                "args": [
                    {
                        "name": "templates"
                    },
                    {
                        "name": "**kwargs"
                    }
                ]
            },
            "_add_output_traits": {
                "args": [
                    {
                        "name": "base"
                    }
                ]
            },
            "_list_outputs": {
                "args": []
            }
        },
        "SelectFilesInputSpec": {},
        "XNATSink": {
            "_list_outputs": {
                "args": []
            },
            "capture_provenance": {
                "args": [
                    {
                        "name": ""
                    }
                ]
            },
            "push_file": {
                "args": [
                    {
                        "name": "xnat"
                    },
                    {
                        "name": "file_name"
                    },
                    {
                        "name": "out_key"
                    },
                    {
                        "name": "uri_template_args"
                    }
                ]
            },
            "push_provenance": {
                "args": [
                    {
                        "name": ""
                    }
                ]
            },
            "quote_id": {
                "args": [
                    {
                        "name": "string"
                    }
                ]
            },
            "unquote_id": {
                "args": [
                    {
                        "name": "string"
                    }
                ]
            }
        },
        "XNATSinkInputSpec": {
            "__setattr__": {
                "args": [
                    {
                        "name": "key"
                    },
                    {
                        "name": "value"
                    }
                ]
            }
        },
        "XNATSource": {
            "__init__": {
                "args": [
                    {
                        "default": "None",
                        "name": "infields"
                    },
                    {
                        "default": "None",
                        "name": "outfields"
                    },
                    {
                        "name": "**kwargs"
                    }
                ]
            },
            "_add_output_traits": {
                "args": [
                    {
                        "name": "base"
                    }
                ]
            },
            "_list_outputs": {
                "args": []
            }
        },
        "XNATSourceInputSpec": {}
    },
    "ipython": {
        "*": {
            "execute_task": {
                "args": [
                    {
                        "name": "pckld_task"
                    },
                    {
                        "name": "node_config"
                    },
                    {
                        "name": "updatehash"
                    }
                ]
            }
        }
    },
    "ipythonx": {
        "*": {}
    },
    "legacy": {
        "*": {},
        "GenWarpFields": {},
        "antsIntroduction": {
            "_list_outputs": {
                "args": []
            }
        },
        "antsIntroductionInputSpec": {},
        "antsIntroductionOutputSpec": {},
        "buildtemplateparallelInputSpec": {},
        "buildtemplateparallelOutputSpec": {}
    },
    "linear": {
        "*": {}
    },
    "logger": {
        "*": {}
    },
    "lsf": {
        "*": {}
    },
    "maths": {
        "*": {},
        "ApplyMask": {},
        "ApplyMaskInput": {},
        "BinaryMaths": {},
        "BinaryMathsInput": {},
        "ChangeDataType": {},
        "ChangeDataTypeInput": {},
        "DilateImage": {
            "_format_arg": {
                "args": [
                    {
                        "name": "name"
                    },
                    {
                        "name": "spec"
                    },
                    {
                        "name": "value"
                    }
                ]
            }
        },
        "DilateInput": {},
        "ErodeImage": {
            "_format_arg": {
                "args": [
                    {
                        "name": "name"
                    },
                    {
                        "name": "spec"
                    },
                    {
                        "name": "value"
                    }
                ]
            }
        },
        "ErodeInput": {},
        "IsotropicSmooth": {
            "_format_arg": {
                "args": [
                    {
                        "name": "name"
                    },
                    {
                        "name": "spec"
                    },
                    {
                        "name": "value"
                    }
                ]
            }
        },
        "IsotropicSmoothInput": {},
        "KernelInput": {},
        "MathsCommand": {
            "_gen_filename": {
                "args": [
                    {
                        "name": "name"
                    }
                ]
            },
            "_list_outputs": {
                "args": []
            }
        },
        "MathsInput": {},
        "MathsOutput": {},
        "MaxImage": {},
        "MaxImageInput": {},
        "MeanImage": {},
        "MeanImageInput": {},
        "MultiImageMaths": {
            "_format_arg": {
                "args": [
                    {
                        "name": "name"
                    },
                    {
                        "name": "spec"
                    },
                    {
                        "name": "value"
                    }
                ]
            }
        },
        "MultiImageMathsInput": {},
        "SpatialFilter": {},
        "SpatialFilterInput": {},
        "TemporalFilterInput": {},
        "Threshold": {
            "_format_arg": {
                "args": [
                    {
                        "name": "name"
                    },
                    {
                        "name": "spec"
                    },
                    {
                        "name": "value"
                    }
                ]
            }
        },
        "ThresholdInputSpec": {},
        "UnaryMaths": {
            "_list_outputs": {
                "args": []
            }
        },
        "UnaryMathsInput": {}
    },
    "matlab": {
        "*": {
            "get_matlab_command": {
                "args": [
                    {
                        "name": ""
                    }
                ]
            }
        },
        "MatlabInputSpec": {}
    },
    "matlabtools": {
        "*": {
            "fltcols": {
                "args": [
                    {
                        "name": "vals"
                    }
                ]
            },
            "mlab_tempfile": {
                "args": [
                    {
                        "default": "None",
                        "name": "dir"
                    }
                ]
            }
        }
    },
    "maxcurvature": {
        "*": {},
        "maxcurvatureInputSpec": {},
        "maxcurvatureOutputSpec": {}
    },
    "memory": {
        "*": {},
        "PipeFunc": {
            "__call__": {
                "args": [
                    {
                        "name": "**kwargs"
                    }
                ]
            },
            "__init__": {
                "args": [
                    {
                        "name": "interface"
                    },
                    {
                        "name": "base_dir"
                    },
                    {
                        "default": "None",
                        "name": "callback"
                    }
                ]
            },
            "__repr__": {
                "args": []
            },
            "read_log": {
                "args": [
                    {
                        "name": "filename"
                    },
                    {
                        "default": "None",
                        "name": "run_dict"
                    }
                ]
            },
            "rm_all_but": {
                "args": [
                    {
                        "name": "base_dir"
                    },
                    {
                        "name": "dirs_to_keep"
                    },
                    {
                        "default": "False",
                        "name": "warn"
                    }
                ]
            }
        },
        "_MemoryCallback": {
            "__call__": {
                "args": [
                    {
                        "name": "dir_name"
                    },
                    {
                        "name": "job_name"
                    }
                ]
            },
            "__init__": {
                "args": [
                    {
                        "name": "memory"
                    }
                ]
            }
        }
    },
    "mesh": {
        "*": {},
        "ComputeMeshWarp": {
            "_list_outputs": {
                "args": []
            },
            "_run_interface": {
                "args": [
                    {
                        "name": "runtime"
                    }
                ]
            },
            "_triangle_area": {
                "args": [
                    {
                        "name": "A"
                    },
                    {
                        "name": "B"
                    },
                    {
                        "name": "C"
                    }
                ]
            }
        },
        "ComputeMeshWarpInputSpec": {},
        "ComputeMeshWarpOutputSpec": {},
        "MeshWarpMaths": {
            "_list_outputs": {
                "args": []
            },
            "_run_interface": {
                "args": [
                    {
                        "name": "runtime"
                    }
                ]
            }
        },
        "MeshWarpMathsInputSpec": {},
        "MeshWarpMathsOutputSpec": {},
        "WarpPoints": {
            "_gen_fname": {
                "args": [
                    {
                        "name": "in_file"
                    },
                    {
                        "default": "'generated'",
                        "name": "suffix"
                    },
                    {
                        "default": "None",
                        "name": "ext"
                    }
                ]
            },
            "_list_outputs": {
                "args": []
            },
            "_run_interface": {
                "args": [
                    {
                        "name": "runtime"
                    }
                ]
            }
        },
        "WarpPointsInputSpec": {},
        "WarpPointsOutputSpec": {}
    },
    "meshfix": {
        "*": {},
        "MeshFixInputSpec": {},
        "MeshFixOutputSpec": {}
    },
    "metrics": {
        "*": {},
        "Distance": {
            "_eucl_cog": {
                "args": [
                    {
                        "name": "nii1"
                    },
                    {
                        "name": "nii2"
                    }
                ]
            },
            "_eucl_max": {
                "args": [
                    {
                        "name": "nii1"
                    },
                    {
                        "name": "nii2"
                    }
                ]
            },
            "_eucl_mean": {
                "args": [
                    {
                        "name": "nii1"
                    },
                    {
                        "name": "nii2"
                    },
                    {
                        "default": "False",
                        "name": "weighted"
                    }
                ]
            },
            "_eucl_min": {
                "args": [
                    {
                        "name": "nii1"
                    },
                    {
                        "name": "nii2"
                    }
                ]
            },
            "_find_border": {
                "args": [
                    {
                        "name": "data"
                    }
                ]
            },
            "_get_coordinates": {
                "args": [
                    {
                        "name": "data"
                    },
                    {
                        "name": "affine"
                    }
                ]
            },
            "_list_outputs": {
                "args": []
            },
            "_run_interface": {
                "args": [
                    {
                        "name": "runtime"
                    }
                ]
            }
        },
        "DistanceInputSpec": {},
        "DistanceOutputSpec": {},
        "ErrorMap": {
            "_list_outputs": {
                "args": []
            },
            "_run_interface": {
                "args": [
                    {
                        "name": "runtime"
                    }
                ]
            }
        },
        "ErrorMapInputSpec": {},
        "ErrorMapOutputSpec": {},
        "FuzzyOverlap": {
            "_list_outputs": {
                "args": []
            },
            "_run_interface": {
                "args": [
                    {
                        "name": "runtime"
                    }
                ]
            }
        },
        "FuzzyOverlapInputSpec": {},
        "FuzzyOverlapOutputSpec": {},
        "Overlap": {
            "_bool_vec_dissimilarity": {
                "args": [
                    {
                        "name": "booldata1"
                    },
                    {
                        "name": "booldata2"
                    },
                    {
                        "name": "method"
                    }
                ]
            },
            "_list_outputs": {
                "args": []
            },
            "_run_interface": {
                "args": [
                    {
                        "name": "runtime"
                    }
                ]
            }
        },
        "OverlapInputSpec": {},
        "OverlapOutputSpec": {},
        "SimilarityInputSpec": {},
        "SimilarityOutputSpec": {}
    },
    "misc": {
        "*": {
            "atoi": {
                "args": [
                    {
                        "name": "text"
                    }
                ]
            },
            "container_to_string": {
                "args": [
                    {
                        "name": "cont"
                    }
                ]
            },
            "create_function_from_source": {
                "args": [
                    {
                        "name": "function_source"
                    },
                    {
                        "default": "None",
                        "name": "imports"
                    }
                ]
            },
            "find_indices": {
                "args": [
                    {
                        "name": "condition"
                    }
                ]
            },
            "flatten": {
                "args": [
                    {
                        "name": "S"
                    }
                ]
            },
            "getsource": {
                "args": [
                    {
                        "name": "function"
                    }
                ]
            },
            "human_order_sorted": {
                "args": [
                    {
                        "name": "l"
                    }
                ]
            },
            "is_container": {
                "args": [
                    {
                        "name": "item"
                    }
                ]
            },
            "natural_keys": {
                "args": [
                    {
                        "name": "text"
                    }
                ]
            },
            "package_check": {
                "args": [
                    {
                        "name": "pkg_name"
                    },
                    {
                        "default": "None",
                        "name": "version"
                    },
                    {
                        "default": "None",
                        "name": "app"
                    },
                    {
                        "default": "LooseVersion",
                        "name": "checker"
                    },
                    {
                        "name": ""
                    },
                    {
                        "default": "ImportError",
                        "name": "exc_failed_import"
                    },
                    {
                        "name": ""
                    },
                    {
                        "default": "RuntimeError",
                        "name": "exc_failed_check"
                    }
                ]
            },
            "str2bool": {
                "args": [
                    {
                        "name": "v"
                    }
                ]
            },
            "trim": {
                "args": [
                    {
                        "name": "docstring"
                    },
                    {
                        "default": "None",
                        "name": "marker"
                    }
                ]
            },
            "unflatten": {
                "args": [
                    {
                        "name": "in_list"
                    },
                    {
                        "name": "prev_structure"
                    }
                ]
            }
        }
    },
    "model": {
        "*": {},
        "Cluster": {
            "_format_arg": {
                "args": [
                    {
                        "name": "name"
                    },
                    {
                        "name": "spec"
                    },
                    {
                        "name": "value"
                    }
                ]
            },
            "_list_outputs": {
                "args": []
            }
        },
        "ClusterInputSpec": {},
        "ClusterOutputSpec": {},
        "ContrastMgr": {
            "_format_arg": {
                "args": [
                    {
                        "name": "name"
                    },
                    {
                        "name": "trait_spec"
                    },
                    {
                        "name": "value"
                    }
                ]
            },
            "_get_design_root": {
                "args": [
                    {
                        "name": "infile"
                    }
                ]
            },
            "_get_numcons": {
                "args": []
            },
            "_list_outputs": {
                "args": []
            },
            "_run_interface": {
                "args": [
                    {
                        "name": "runtime"
                    }
                ]
            }
        },
        "ContrastMgrInputSpec": {},
        "ContrastMgrOutputSpec": {},
        "FEAT": {
            "_list_outputs": {
                "args": []
            }
        },
        "FEATInputSpec": {},
        "FEATModel": {
            "_format_arg": {
                "args": [
                    {
                        "name": "name"
                    },
                    {
                        "name": "trait_spec"
                    },
                    {
                        "name": "value"
                    }
                ]
            },
            "_get_design_root": {
                "args": [
                    {
                        "name": "infile"
                    }
                ]
            },
            "_list_outputs": {
                "args": []
            }
        },
        "FEATModelInputSpec": {},
        "FEATModelOutpuSpec": {},
        "FEATOutputSpec": {},
        "FEATRegister": {
            "_list_outputs": {
                "args": []
            },
            "_run_interface": {
                "args": [
                    {
                        "name": "runtime"
                    }
                ]
            }
        },
        "FEATRegisterInputSpec": {},
        "FEATRegisterOutputSpec": {},
        "FILMGLS": {
            "_get_numcons": {
                "args": []
            },
            "_get_pe_files": {
                "args": [
                    {
                        "name": "cwd"
                    }
                ]
            },
            "_list_outputs": {
                "args": []
            }
        },
        "FILMGLSInputSpec": {},
        "FILMGLSInputSpec505": {},
        "FILMGLSInputSpec507": {},
        "FILMGLSOutputSpec": {},
        "FILMGLSOutputSpec507": {},
        "FLAMEO": {
            "_list_outputs": {
                "args": []
            },
            "_run_interface": {
                "args": [
                    {
                        "name": "runtime"
                    }
                ]
            }
        },
        "FLAMEOInputSpec": {},
        "FLAMEOOutputSpec": {},
        "GLMInputSpec": {},
        "GLMOutputSpec": {},
        "L2Model": {
            "_list_outputs": {
                "args": []
            },
            "_run_interface": {
                "args": [
                    {
                        "name": "runtime"
                    }
                ]
            }
        },
        "L2ModelInputSpec": {},
        "L2ModelOutputSpec": {},
        "Level1Design": {
            "_create_ev_file": {
                "args": [
                    {
                        "name": "evfname"
                    },
                    {
                        "name": "evinfo"
                    }
                ]
            },
            "_create_ev_files": {
                "args": [
                    {
                        "name": ""
                    },
                    {
                        "name": "self"
                    },
                    {
                        "name": "cwd"
                    },
                    {
                        "name": "runinfo"
                    },
                    {
                        "name": "runidx"
                    },
                    {
                        "name": "usetd"
                    },
                    {
                        "name": "contrasts"
                    },
                    {
                        "name": "no_bases"
                    },
                    {
                        "name": ""
                    },
                    {
                        "name": "do_tempfilter"
                    }
                ]
            },
            "_format_session_info": {
                "args": [
                    {
                        "name": "session_info"
                    }
                ]
            },
            "_get_func_files": {
                "args": [
                    {
                        "name": "session_info"
                    }
                ]
            },
            "_list_outputs": {
                "args": []
            },
            "_run_interface": {
                "args": [
                    {
                        "name": "runtime"
                    }
                ]
            }
        },
        "Level1DesignInputSpec": {},
        "Level1DesignOutputSpec": {},
        "MELODIC": {
            "_gen_filename": {
                "args": [
                    {
                        "name": "name"
                    }
                ]
            },
            "_list_outputs": {
                "args": []
            }
        },
        "MELODICInputSpec": {},
        "MELODICOutputSpec": {},
        "MultipleRegressDesign": {
            "_list_outputs": {
                "args": []
            },
            "_run_interface": {
                "args": [
                    {
                        "name": "runtime"
                    }
                ]
            }
        },
        "MultipleRegressDesignInputSpec": {},
        "MultipleRegressDesignOutputSpec": {},
        "Randomise": {
            "_list_outputs": {
                "args": []
            }
        },
        "RandomiseInputSpec": {},
        "RandomiseOutputSpec": {},
        "SMM": {
            "_list_outputs": {
                "args": []
            }
        },
        "SMMInputSpec": {},
        "SMMOutputSpec": {},
        "SmoothEstimate": {
            "aggregate_outputs": {
                "args": [
                    {
                        "default": "None",
                        "name": "runtime"
                    },
                    {
                        "default": "None",
                        "name": "needed_outputs"
                    }
                ]
            }
        },
        "SmoothEstimateInputSpec": {},
        "SmoothEstimateOutputSpec": {}
    },
    "modelgen": {
        "*": {
            "gcd": {
                "args": [
                    {
                        "name": "a"
                    },
                    {
                        "name": "b"
                    }
                ]
            },
            "gen_info": {
                "args": [
                    {
                        "name": "run_event_files"
                    }
                ]
            },
            "orth": {
                "args": [
                    {
                        "name": "x_in"
                    },
                    {
                        "name": "y_in"
                    }
                ]
            },
            "scale_timings": {
                "args": [
                    {
                        "name": "timelist"
                    },
                    {
                        "name": "input_units"
                    },
                    {
                        "name": "output_units"
                    },
                    {
                        "name": "time_repetition"
                    }
                ]
            },
            "spm_hrf": {
                "args": [
                    {
                        "name": "RT"
                    },
                    {
                        "default": "None",
                        "name": "P"
                    },
                    {
                        "default": "16",
                        "name": "fMRI_T"
                    }
                ]
            }
        },
        "SpecifyModel": {
            "_generate_design": {
                "args": [
                    {
                        "default": "None",
                        "name": "infolist"
                    }
                ]
            },
            "_generate_standard_design": {
                "args": [
                    {
                        "name": "infolist"
                    },
                    {
                        "name": ""
                    },
                    {
                        "default": "None",
                        "name": "functional_runs"
                    },
                    {
                        "name": ""
                    },
                    {
                        "default": "None",
                        "name": "realignment_parameters"
                    },
                    {
                        "name": ""
                    },
                    {
                        "default": "None",
                        "name": "outliers"
                    }
                ]
            },
            "_list_outputs": {
                "args": []
            },
            "_run_interface": {
                "args": [
                    {
                        "name": "runtime"
                    }
                ]
            }
        },
        "SpecifyModelInputSpec": {},
        "SpecifyModelOutputSpec": {},
        "SpecifySPMModel": {
            "_concatenate_info": {
                "args": [
                    {
                        "name": "infolist"
                    }
                ]
            },
            "_generate_design": {
                "args": [
                    {
                        "default": "None",
                        "name": "infolist"
                    }
                ]
            }
        },
        "SpecifySPMModelInputSpec": {},
        "SpecifySparseModelInputSpec": {},
        "SpecifySparseModelOutputSpec": {}
    },
    "morphology": {
        "*": {},
        "GrayscaleFillHoleImageFilterInputSpec": {},
        "GrayscaleFillHoleImageFilterOutputSpec": {},
        "GrayscaleGrindPeakImageFilter": {},
        "GrayscaleGrindPeakImageFilterInputSpec": {},
        "GrayscaleGrindPeakImageFilterOutputSpec": {}
    },
    "multiproc": {
        "*": {
            "run_node": {
                "args": [
                    {
                        "name": "node"
                    },
                    {
                        "name": "updatehash"
                    }
                ]
            }
        },
        "NonDaemonPool": {},
        "NonDaemonProcess": {
            "_get_daemon": {
                "args": []
            },
            "_set_daemon": {
                "args": [
                    {
                        "name": "value"
                    }
                ]
            }
        }
    },
    "n4itkbiasfieldcorrection": {
        "*": {},
        "N4ITKBiasFieldCorrectionInputSpec": {},
        "N4ITKBiasFieldCorrectionOutputSpec": {}
    },
    "nbs": {
        "*": {
            "ntwks_to_matrices": {
                "args": [
                    {
                        "name": "in_files"
                    },
                    {
                        "name": "edge_key"
                    }
                ]
            }
        },
        "NetworkBasedStatisticInputSpec": {},
        "NetworkBasedStatisticOutputSpec": {}
    },
    "nipype2boutiques": {
        "*": {
            "create_tempfile": {
                "args": [
                    {
                        "name": ""
                    }
                ]
            },
            "generate_boutiques_descriptor": {
                "args": [
                    {
                        "name": "module"
                    },
                    {
                        "name": "interface_name"
                    },
                    {
                        "name": "ignored_template_inputs"
                    },
                    {
                        "name": "docker_image"
                    },
                    {
                        "name": "docker_index"
                    },
                    {
                        "name": "verbose"
                    },
                    {
                        "name": "ignore_template_numbers"
                    }
                ]
            },
            "get_boutiques_input": {
                "args": [
                    {
                        "name": "inputs"
                    },
                    {
                        "name": "interface"
                    },
                    {
                        "name": "input_name"
                    },
                    {
                        "name": "spec"
                    },
                    {
                        "name": "ignored_template_inputs"
                    },
                    {
                        "name": "verbose"
                    },
                    {
                        "name": "ignore_template_numbers"
                    }
                ]
            },
            "get_boutiques_output": {
                "args": [
                    {
                        "name": "name"
                    },
                    {
                        "name": "interface"
                    },
                    {
                        "name": "tool_inputs"
                    },
                    {
                        "default": "False",
                        "name": "verbose"
                    }
                ]
            },
            "get_type_from_spec_info": {
                "args": [
                    {
                        "name": "spec_info"
                    }
                ]
            },
            "get_unique_value": {
                "args": [
                    {
                        "name": "type"
                    },
                    {
                        "name": "id"
                    }
                ]
            },
            "is_list": {
                "args": [
                    {
                        "name": "spec_info"
                    }
                ]
            },
            "main": {
                "args": [
                    {
                        "name": "argv"
                    }
                ]
            },
            "must_generate_value": {
                "args": [
                    {
                        "name": "name"
                    },
                    {
                        "name": "type"
                    },
                    {
                        "name": "ignored_template_inputs"
                    },
                    {
                        "name": "spec_info"
                    },
                    {
                        "name": "spec"
                    },
                    {
                        "name": "ignore_template_numbers"
                    }
                ]
            }
        }
    },
    "nipype_cmd": {
        "*": {
            "add_options": {
                "args": [
                    {
                        "default": "None",
                        "name": "parser"
                    },
                    {
                        "default": "None",
                        "name": "module"
                    },
                    {
                        "default": "None",
                        "name": "function"
                    }
                ]
            },
            "listClasses": {
                "args": [
                    {
                        "default": "None",
                        "name": "module"
                    }
                ]
            },
            "main": {
                "args": [
                    {
                        "name": "argv"
                    }
                ]
            },
            "run_instance": {
                "args": [
                    {
                        "name": "interface"
                    },
                    {
                        "name": "options"
                    }
                ]
            }
        }
    },
    "nx": {
        "*": {
            "add_global_to_filename": {
                "args": [
                    {
                        "name": "in_file"
                    }
                ]
            },
            "add_nodal_to_filename": {
                "args": [
                    {
                        "name": "in_file"
                    }
                ]
            },
            "create_cmats_to_csv_pipeline": {
                "args": [
                    {
                        "default": "\"cmats_to_csv\"",
                        "name": "name"
                    },
                    {
                        "default": "\"subject\"",
                        "name": "extra_column_heading"
                    }
                ]
            },
            "create_networkx_pipeline": {
                "args": [
                    {
                        "default": "\"networkx\"",
                        "name": "name"
                    },
                    {
                        "default": "\"subject\"",
                        "name": "extra_column_heading"
                    }
                ]
            }
        }
    },
    "odf": {
        "*": {},
        "LinRecon": {
            "_gen_outfilename": {
                "args": []
            },
            "_list_outputs": {
                "args": []
            }
        },
        "LinReconInputSpec": {},
        "LinReconOutputSpec": {},
        "MESD": {
            "_gen_outfilename": {
                "args": []
            },
            "_list_outputs": {
                "args": []
            }
        },
        "MESDInputSpec": {},
        "MESDOutputSpec": {},
        "QBallMX": {
            "_gen_outfilename": {
                "args": []
            },
            "_list_outputs": {
                "args": []
            }
        },
        "QBallMXInputSpec": {},
        "QBallMXOutputSpec": {},
        "SFPeaksInputSpec": {},
        "SFPeaksOutputSpec": {}
    },
    "onetime": {
        "*": {}
    },
    "parcellation": {
        "*": {
            "create_annot_label": {
                "args": [
                    {
                        "name": "subject_id"
                    },
                    {
                        "name": "subjects_dir"
                    },
                    {
                        "name": "fs_dir"
                    },
                    {
                        "name": "parcellation_name"
                    }
                ]
            },
            "create_roi": {
                "args": [
                    {
                        "name": "subject_id"
                    },
                    {
                        "name": "subjects_dir"
                    },
                    {
                        "name": "fs_dir"
                    },
                    {
                        "name": "parcellation_name"
                    },
                    {
                        "name": "dilation"
                    }
                ]
            },
            "create_wm_mask": {
                "args": [
                    {
                        "name": "subject_id"
                    },
                    {
                        "name": "subjects_dir"
                    },
                    {
                        "name": "fs_dir"
                    },
                    {
                        "name": "parcellation_name"
                    }
                ]
            },
            "crop_and_move_datasets": {
                "args": [
                    {
                        "name": "subject_id"
                    },
                    {
                        "name": "subjects_dir"
                    },
                    {
                        "name": "fs_dir"
                    },
                    {
                        "name": "parcellation_name"
                    },
                    {
                        "name": "out_roi_file"
                    },
                    {
                        "name": "dilation"
                    }
                ]
            },
            "extract": {
                "args": [
                    {
                        "name": "Z"
                    },
                    {
                        "name": "shape"
                    },
                    {
                        "name": "position"
                    },
                    {
                        "name": "fill"
                    }
                ]
            }
        },
        "ParcellateInputSpec": {},
        "ParcellateOutputSpec": {}
    },
    "pbs": {
        "*": {}
    },
    "pbsgraph": {
        "*": {}
    },
    "petstandarduptakevaluecomputation": {
        "*": {},
        "PETStandardUptakeValueComputationInputSpec": {},
        "PETStandardUptakeValueComputationOutputSpec": {}
    },
    "pkg_info": {
        "*": {
            "get_pkg_info": {
                "args": [
                    {
                        "name": "pkg_path"
                    }
                ]
            },
            "pkg_commit_hash": {
                "args": [
                    {
                        "name": "pkg_path"
                    }
                ]
            }
        }
    },
    "portalocker": {
        "*": {}
    },
    "postproc": {
        "*": {},
        "SplineFilter": {
            "_list_outputs": {
                "args": []
            }
        },
        "SplineFilterInputSpec": {},
        "SplineFilterOutputSpec": {},
        "TrackMergeInputSpec": {},
        "TrackMergeOutputSpec": {}
    },
    "preprocess": {
        "*": {
            "chooseindex": {
                "args": [
                    {
                        "name": "fwhm"
                    }
                ]
            },
            "create_featreg_preproc": {
                "args": [
                    {
                        "default": "'featpreproc'",
                        "name": "name"
                    },
                    {
                        "default": "True",
                        "name": "highpass"
                    },
                    {
                        "default": "'middle'",
                        "name": "whichvol"
                    }
                ]
            },
            "create_fsl_fs_preproc": {
                "args": [
                    {
                        "default": "'preproc'",
                        "name": "name"
                    },
                    {
                        "default": "True",
                        "name": "highpass"
                    },
                    {
                        "default": "'middle'",
                        "name": "whichvol"
                    }
                ]
            },
            "create_parallelfeat_preproc": {
                "args": [
                    {
                        "default": "'featpreproc'",
                        "name": "name"
                    },
                    {
                        "default": "True",
                        "name": "highpass"
                    }
                ]
            },
            "create_reg_workflow": {
                "args": [
                    {
                        "default": "'registration'",
                        "name": "name"
                    }
                ]
            },
            "create_susan_smooth": {
                "args": [
                    {
                        "default": "\"susan_smooth\"",
                        "name": "name"
                    },
                    {
                        "default": "True",
                        "name": "separate_masks"
                    }
                ]
            },
            "getbtthresh": {
                "args": [
                    {
                        "name": "medianvals"
                    }
                ]
            },
            "getmeanscale": {
                "args": [
                    {
                        "name": "medianvals"
                    }
                ]
            },
            "getthreshop": {
                "args": [
                    {
                        "name": "thresh"
                    }
                ]
            },
            "getusans": {
                "args": [
                    {
                        "name": "x"
                    }
                ]
            },
            "pickfirst": {
                "args": [
                    {
                        "name": "files"
                    }
                ]
            },
            "pickmiddle": {
                "args": [
                    {
                        "name": "files"
                    }
                ]
            },
            "pickvol": {
                "args": [
                    {
                        "name": "filenames"
                    },
                    {
                        "name": "fileidx"
                    },
                    {
                        "name": "which"
                    }
                ]
            }
        }
    },
    "provcopy": {
        "*": {
            "_ensure_datetime": {
                "args": [
                    {
                        "name": "time"
                    }
                ]
            },
            "_ensure_multiline_string_triple_quoted": {
                "args": [
                    {
                        "name": "s"
                    }
                ]
            },
            "_parse_xsd_dateTime": {
                "args": [
                    {
                        "name": "s"
                    }
                ]
            },
            "encoding_PROV_N_value": {
                "args": [
                    {
                        "name": "value"
                    }
                ]
            },
            "parse_datatype": {
                "args": [
                    {
                        "name": "value"
                    },
                    {
                        "name": "datatype"
                    }
                ]
            },
            "parse_xsd_dateTime": {
                "args": [
                    {
                        "name": "s"
                    }
                ]
            },
            "parse_xsd_types": {
                "args": [
                    {
                        "name": "value"
                    },
                    {
                        "name": "datatype"
                    }
                ]
            }
        },
        "AnonymousIDGenerator": {
            "__init__": {
                "args": []
            },
            "get_anon_id": {
                "args": [
                    {
                        "name": "obj"
                    },
                    {
                        "default": "\"id\"",
                        "name": "local_prefix"
                    }
                ]
            }
        },
        "Identifier": {
            "__eq__": {
                "args": [
                    {
                        "name": "other"
                    }
                ]
            },
            "__hash__": {
                "args": []
            },
            "__init__": {
                "args": [
                    {
                        "name": "uri"
                    }
                ]
            },
            "__str__": {
                "args": []
            },
            "__unicode__": {
                "args": []
            },
            "get_uri": {
                "args": []
            },
            "json_representation": {
                "args": []
            },
            "provn_representation": {
                "args": []
            },
            "rdf_representation": {
                "args": []
            }
        },
        "JSONEncoder": {
            "default": {
                "args": [
                    {
                        "name": "o"
                    }
                ]
            }
        },
        "Literal": {
            "__eq__": {
                "args": [
                    {
                        "name": "other"
                    }
                ]
            },
            "__hash__": {
                "args": []
            },
            "__init__": {
                "args": [
                    {
                        "name": "value"
                    },
                    {
                        "default": "None",
                        "name": "datatype"
                    },
                    {
                        "default": "None",
                        "name": "langtag"
                    }
                ]
            },
            "__str__": {
                "args": []
            },
            "__unicode__": {
                "args": []
            },
            "get_datatype": {
                "args": []
            },
            "get_langtag": {
                "args": []
            },
            "get_value": {
                "args": []
            },
            "has_no_langtag": {
                "args": []
            },
            "json_representation": {
                "args": []
            },
            "provn_representation": {
                "args": []
            },
            "rdf_representation": {
                "args": []
            }
        },
        "Namespace": {
            "__eq__": {
                "args": [
                    {
                        "name": "other"
                    }
                ]
            },
            "__getitem__": {
                "args": [
                    {
                        "name": "localpart"
                    }
                ]
            },
            "__hash__": {
                "args": []
            },
            "__init__": {
                "args": [
                    {
                        "name": "prefix"
                    },
                    {
                        "name": "uri"
                    }
                ]
            },
            "contains": {
                "args": [
                    {
                        "name": "identifier"
                    }
                ]
            },
            "get_prefix": {
                "args": []
            },
            "get_uri": {
                "args": []
            },
            "qname": {
                "args": [
                    {
                        "name": "identifier"
                    }
                ]
            }
        },
        "NamespaceManager": {
            "__init__": {
                "args": [
                    {
                        "default": "{}",
                        "name": "namespaces"
                    },
                    {
                        "default": "{PROV.get_prefix(): PROV",
                        "name": "default_namespaces"
                    },
                    {
                        "name": "XSD.get_prefix(): XSD}"
                    },
                    {
                        "default": "None",
                        "name": "default"
                    },
                    {
                        "default": "None",
                        "name": "parent"
                    }
                ]
            },
            "_get_unused_prefix": {
                "args": [
                    {
                        "name": "original_prefix"
                    }
                ]
            },
            "add_namespace": {
                "args": [
                    {
                        "name": "namespace"
                    }
                ]
            },
            "add_namespaces": {
                "args": [
                    {
                        "name": "namespaces"
                    }
                ]
            },
            "get_anonymous_identifier": {
                "args": [
                    {
                        "default": "'id'",
                        "name": "local_prefix"
                    }
                ]
            },
            "get_default_namespace": {
                "args": []
            },
            "get_namespace": {
                "args": [
                    {
                        "name": "uri"
                    }
                ]
            },
            "get_registered_namespaces": {
                "args": []
            },
            "get_valid_identifier": {
                "args": [
                    {
                        "name": "identifier"
                    }
                ]
            },
            "set_default_namespace": {
                "args": [
                    {
                        "name": "uri"
                    }
                ]
            }
        },
        "ProvActivity": {
            "add_attributes": {
                "args": [
                    {
                        "name": "attributes"
                    },
                    {
                        "name": "extra_attributes"
                    }
                ]
            },
            "get_endTime": {
                "args": []
            },
            "get_prov_type": {
                "args": []
            },
            "get_startTime": {
                "args": []
            },
            "get_type": {
                "args": []
            },
            "set_time": {
                "args": [
                    {
                        "default": "None",
                        "name": "startTime"
                    },
                    {
                        "default": "None",
                        "name": "endTime"
                    }
                ]
            }
        },
        "ProvAgent": {
            "get_prov_type": {
                "args": []
            },
            "get_type": {
                "args": []
            }
        },
        "ProvAlternate": {
            "add_attributes": {
                "args": [
                    {
                        "name": "attributes"
                    },
                    {
                        "name": "extra_attributes"
                    }
                ]
            },
            "get_prov_type": {
                "args": []
            },
            "get_type": {
                "args": []
            }
        },
        "ProvAssociation": {
            "add_attributes": {
                "args": [
                    {
                        "name": "attributes"
                    },
                    {
                        "name": "extra_attributes"
                    }
                ]
            },
            "get_prov_type": {
                "args": []
            },
            "get_type": {
                "args": []
            }
        },
        "ProvAttribution": {
            "add_attributes": {
                "args": [
                    {
                        "name": "attributes"
                    },
                    {
                        "name": "extra_attributes"
                    }
                ]
            },
            "get_prov_type": {
                "args": []
            },
            "get_type": {
                "args": []
            }
        },
        "ProvBundle": {
            "__init__": {
                "args": [
                    {
                        "default": "None",
                        "name": "bundle"
                    },
                    {
                        "default": "None",
                        "name": "identifier"
                    },
                    {
                        "default": "None",
                        "name": "attributes"
                    },
                    {
                        "default": "None",
                        "name": "other_attributes"
                    },
                    {
                        "default": "True",
                        "name": "asserted"
                    },
                    {
                        "default": "{}",
                        "name": "namespaces"
                    }
                ]
            },
            "add_namespace": {
                "args": [
                    {
                        "name": "namespace_or_prefix"
                    },
                    {
                        "default": "None",
                        "name": "uri"
                    }
                ]
            },
            "get_anon_id": {
                "args": [
                    {
                        "name": "record"
                    }
                ]
            },
            "get_bundle": {
                "args": [
                    {
                        "name": "identifier"
                    }
                ]
            },
            "get_default_namespace": {
                "args": []
            },
            "get_record": {
                "args": [
                    {
                        "name": "identifier"
                    }
                ]
            },
            "get_records": {
                "args": [
                    {
                        "default": "None",
                        "name": "class_or_type_or_tuple"
                    }
                ]
            },
            "get_registered_namespaces": {
                "args": []
            },
            "set_default_namespace": {
                "args": [
                    {
                        "name": "uri"
                    }
                ]
            },
            "valid_identifier": {
                "args": [
                    {
                        "name": "identifier"
                    }
                ]
            }
        },
        "ProvCommunication": {
            "add_attributes": {
                "args": [
                    {
                        "name": "attributes"
                    },
                    {
                        "name": "extra_attributes"
                    }
                ]
            },
            "get_prov_type": {
                "args": []
            },
            "get_type": {
                "args": []
            }
        },
        "ProvDelegation": {
            "add_attributes": {
                "args": [
                    {
                        "name": "attributes"
                    },
                    {
                        "name": "extra_attributes"
                    }
                ]
            },
            "get_prov_type": {
                "args": []
            },
            "get_type": {
                "args": []
            }
        },
        "ProvDerivation": {
            "add_attributes": {
                "args": [
                    {
                        "name": "attributes"
                    },
                    {
                        "name": "extra_attributes"
                    }
                ]
            },
            "get_prov_type": {
                "args": []
            },
            "get_type": {
                "args": []
            }
        },
        "ProvElement": {
            "is_element": {
                "args": []
            },
            "rdf": {
                "args": [
                    {
                        "default": "None",
                        "name": "graph"
                    }
                ]
            }
        },
        "ProvEnd": {
            "add_attributes": {
                "args": [
                    {
                        "name": "attributes"
                    },
                    {
                        "name": "extra_attributes"
                    }
                ]
            },
            "get_prov_type": {
                "args": []
            },
            "get_type": {
                "args": []
            }
        },
        "ProvEntity": {
            "get_prov_type": {
                "args": []
            },
            "get_type": {
                "args": []
            }
        },
        "ProvException": {},
        "ProvExceptionCannotUnifyAttribute": {
            "__init__": {
                "args": [
                    {
                        "name": "identifier"
                    },
                    {
                        "name": "record_type1"
                    },
                    {
                        "name": "record_type2"
                    }
                ]
            },
            "__str__": {
                "args": []
            }
        },
        "ProvExceptionContraint": {
            "__init__": {
                "args": [
                    {
                        "name": "record_type"
                    },
                    {
                        "name": "attribute1"
                    },
                    {
                        "name": "attribute2"
                    },
                    {
                        "name": "msg"
                    }
                ]
            }
        },
        "ProvExceptionMissingRequiredAttribute": {
            "__init__": {
                "args": [
                    {
                        "name": "record_type"
                    },
                    {
                        "name": "attribute_id"
                    }
                ]
            },
            "__str__": {
                "args": []
            }
        },
        "ProvExceptionNotValidAttribute": {
            "__init__": {
                "args": [
                    {
                        "name": "record_type"
                    },
                    {
                        "name": "attribute"
                    },
                    {
                        "name": "attribute_types"
                    }
                ]
            },
            "__str__": {
                "args": []
            }
        },
        "ProvGeneration": {
            "add_attributes": {
                "args": [
                    {
                        "name": "attributes"
                    },
                    {
                        "name": "extra_attributes"
                    }
                ]
            },
            "get_prov_type": {
                "args": []
            },
            "get_type": {
                "args": []
            }
        },
        "ProvInfluence": {
            "add_attributes": {
                "args": [
                    {
                        "name": "attributes"
                    },
                    {
                        "name": "extra_attributes"
                    }
                ]
            },
            "get_prov_type": {
                "args": []
            },
            "get_type": {
                "args": []
            }
        },
        "ProvInvalidation": {
            "add_attributes": {
                "args": [
                    {
                        "name": "attributes"
                    },
                    {
                        "name": "extra_attributes"
                    }
                ]
            },
            "get_prov_type": {
                "args": []
            },
            "get_type": {
                "args": []
            }
        },
        "ProvMembership": {
            "add_attributes": {
                "args": [
                    {
                        "name": "attributes"
                    },
                    {
                        "name": "extra_attributes"
                    }
                ]
            },
            "get_prov_type": {
                "args": []
            },
            "get_type": {
                "args": []
            }
        },
        "ProvMention": {
            "add_attributes": {
                "args": [
                    {
                        "name": "attributes"
                    },
                    {
                        "name": "extra_attributes"
                    }
                ]
            },
            "get_prov_type": {
                "args": []
            },
            "get_type": {
                "args": []
            }
        },
        "ProvRecord": {
            "__eq__": {
                "args": [
                    {
                        "name": "other"
                    }
                ]
            },
            "__init__": {
                "args": [
                    {
                        "name": "bundle"
                    },
                    {
                        "name": "identifier"
                    },
                    {
                        "default": "None",
                        "name": "attributes"
                    },
                    {
                        "default": "None",
                        "name": "other_attributes"
                    },
                    {
                        "default": "True",
                        "name": "asserted"
                    },
                    {
                        "default": "None",
                        "name": "allowed_types"
                    },
                    {
                        "default": "None",
                        "name": "infered_for"
                    }
                ]
            },
            "__str__": {
                "args": []
            },
            "__unicode__": {
                "args": []
            },
            "_auto_literal_conversion": {
                "args": [
                    {
                        "name": "literal"
                    }
                ]
            },
            "_parse_attribute": {
                "args": [
                    {
                        "name": "attribute"
                    },
                    {
                        "name": "attribute_types"
                    }
                ]
            },
            "_parse_identifier": {
                "args": [
                    {
                        "name": "value"
                    }
                ]
            },
            "_parse_record": {
                "args": [
                    {
                        "name": "attribute"
                    },
                    {
                        "name": "attribute_types"
                    }
                ]
            },
            "_validate_attribute": {
                "args": [
                    {
                        "name": "attribute"
                    },
                    {
                        "name": "attribute_types"
                    }
                ]
            },
            "add_asserted_type": {
                "args": [
                    {
                        "name": "type_identifier"
                    }
                ]
            },
            "add_attributes": {
                "args": [
                    {
                        "name": "attributes"
                    },
                    {
                        "name": "extra_attributes"
                    }
                ]
            },
            "add_extra_attributes": {
                "args": [
                    {
                        "name": "extra_attributes"
                    }
                ]
            },
            "get_allowed_types": {
                "args": []
            },
            "get_asserted_types": {
                "args": []
            },
            "get_attribute": {
                "args": [
                    {
                        "name": "attr_name"
                    }
                ]
            },
            "get_attributes": {
                "args": []
            },
            "get_bundle": {
                "args": []
            },
            "get_identifier": {
                "args": []
            },
            "get_label": {
                "args": []
            },
            "get_prov_type": {
                "args": []
            },
            "get_provn": {
                "args": [
                    {
                        "default": "0",
                        "name": "_indent_level"
                    }
                ]
            },
            "get_type": {
                "args": []
            },
            "get_value": {
                "args": []
            },
            "is_asserted": {
                "args": []
            },
            "is_element": {
                "args": []
            },
            "is_relation": {
                "args": []
            },
            "optional_attribute": {
                "args": [
                    {
                        "name": "attributes"
                    },
                    {
                        "name": "attribute_id"
                    },
                    {
                        "name": "attribute_types"
                    }
                ]
            },
            "parse_extra_attributes": {
                "args": [
                    {
                        "name": "extra_attributes"
                    }
                ]
            },
            "rdf": {
                "args": [
                    {
                        "default": "None",
                        "name": "graph"
                    },
                    {
                        "default": "None",
                        "name": "subj"
                    }
                ]
            },
            "required_attribute": {
                "args": [
                    {
                        "name": "attributes"
                    },
                    {
                        "name": "attribute_id"
                    },
                    {
                        "name": "attribute_types"
                    }
                ]
            }
        },
        "ProvRelation": {
            "is_relation": {
                "args": []
            },
            "rdf": {
                "args": [
                    {
                        "default": "None",
                        "name": "graph"
                    }
                ]
            }
        },
        "ProvSpecialization": {
            "add_attributes": {
                "args": [
                    {
                        "name": "attributes"
                    },
                    {
                        "name": "extra_attributes"
                    }
                ]
            },
            "get_prov_type": {
                "args": []
            },
            "get_type": {
                "args": []
            }
        },
        "ProvStart": {
            "add_attributes": {
                "args": [
                    {
                        "name": "attributes"
                    },
                    {
                        "name": "extra_attributes"
                    }
                ]
            },
            "get_prov_type": {
                "args": []
            },
            "get_type": {
                "args": []
            }
        },
        "ProvUsage": {
            "add_attributes": {
                "args": [
                    {
                        "name": "attributes"
                    },
                    {
                        "name": "extra_attributes"
                    }
                ]
            },
            "get_prov_type": {
                "args": []
            },
            "get_type": {
                "args": []
            }
        },
        "QName": {
            "__init__": {
                "args": [
                    {
                        "name": "namespace"
                    },
                    {
                        "name": "localpart"
                    }
                ]
            },
            "__str__": {
                "args": []
            },
            "__unicode__": {
                "args": []
            },
            "get_localpart": {
                "args": []
            },
            "get_namespace": {
                "args": []
            },
            "get_uri": {
                "args": []
            },
            "json_representation": {
                "args": []
            },
            "provn_representation": {
                "args": []
            }
        }
    },
    "provenance": {
        "*": {
            "_get_sorteddict": {
                "args": [
                    {
                        "name": "object"
                    },
                    {
                        "default": "False",
                        "name": "dictwithhash"
                    }
                ]
            },
            "get_attr_id": {
                "args": [
                    {
                        "name": "attr"
                    },
                    {
                        "default": "None",
                        "name": "skip"
                    }
                ]
            },
            "get_hashval": {
                "args": [
                    {
                        "name": "inputdict"
                    },
                    {
                        "default": "None",
                        "name": "skip"
                    }
                ]
            },
            "prov_encode": {
                "args": [
                    {
                        "name": "graph"
                    },
                    {
                        "name": "value"
                    },
                    {
                        "default": "True",
                        "name": "create_container"
                    }
                ]
            },
            "safe_encode": {
                "args": [
                    {
                        "name": "x"
                    },
                    {
                        "default": "True",
                        "name": "as_literal"
                    }
                ]
            },
            "write_provenance": {
                "args": [
                    {
                        "name": "results"
                    },
                    {
                        "default": "'provenance'",
                        "name": "filename"
                    },
                    {
                        "default": "'turtle'",
                        "name": "format"
                    }
                ]
            }
        }
    },
    "rapidart": {
        "*": {
            "_calc_norm": {
                "args": [
                    {
                        "name": "mc"
                    },
                    {
                        "name": "use_differences"
                    },
                    {
                        "name": "source"
                    },
                    {
                        "default": "None",
                        "name": "brain_pts"
                    }
                ]
            },
            "_get_affine_matrix": {
                "args": [
                    {
                        "name": "params"
                    },
                    {
                        "name": "source"
                    }
                ]
            },
            "_nanmean": {
                "args": [
                    {
                        "name": "a"
                    },
                    {
                        "default": "None",
                        "name": "axis"
                    }
                ]
            }
        },
        "ArtifactDetect": {
            "__init__": {
                "args": [
                    {
                        "name": "**inputs"
                    }
                ]
            },
            "_detect_outliers_core": {
                "args": [
                    {
                        "name": "imgfile"
                    },
                    {
                        "name": "motionfile"
                    },
                    {
                        "name": "runidx"
                    },
                    {
                        "default": "None",
                        "name": "cwd"
                    }
                ]
            },
            "_get_output_filenames": {
                "args": [
                    {
                        "name": "motionfile"
                    },
                    {
                        "name": "output_dir"
                    }
                ]
            },
            "_list_outputs": {
                "args": []
            },
            "_plot_outliers_with_wave": {
                "args": [
                    {
                        "name": "wave"
                    },
                    {
                        "name": "outliers"
                    },
                    {
                        "name": "name"
                    }
                ]
            },
            "_run_interface": {
                "args": [
                    {
                        "name": "runtime"
                    }
                ]
            }
        },
        "ArtifactDetectInputSpec": {},
        "ArtifactDetectOutputSpec": {},
        "StimCorrInputSpec": {},
        "StimCorrOutputSpec": {}
    },
    "recon": {
        "*": {
            "create_skullstripped_recon_flow": {
                "args": [
                    {
                        "default": "\"skullstripped_recon_all\"",
                        "name": "name"
                    }
                ]
            },
            "link_masks": {
                "args": [
                    {
                        "name": "subjects_dir"
                    },
                    {
                        "name": "subject_id"
                    }
                ]
            }
        }
    },
    "registration": {
        "*": {},
        "AnalyzeWarp": {
            "_list_outputs": {
                "args": []
            }
        },
        "AnalyzeWarpInputSpec": {},
        "AnalyzeWarpOutputSpec": {},
        "ApplyWarp": {
            "_list_outputs": {
                "args": []
            }
        },
        "ApplyWarpInputSpec": {},
        "ApplyWarpOutputSpec": {},
        "PointsWarpInputSpec": {},
        "PointsWarpOutputSpec": {},
        "Registration": {
            "_cast": {
                "args": [
                    {
                        "name": "val"
                    }
                ]
            },
            "_list_outputs": {
                "args": []
            }
        },
        "RegistrationInputSpec": {},
        "RegistrationOutputSpec": {}
    },
    "resamplescalarvectordwivolume": {
        "*": {},
        "ResampleScalarVectorDWIVolumeInputSpec": {},
        "ResampleScalarVectorDWIVolumeOutputSpec": {}
    },
    "resampling": {
        "*": {},
        "ApplyTransforms": {
            "_format_arg": {
                "args": [
                    {
                        "name": "opt"
                    },
                    {
                        "name": "spec"
                    },
                    {
                        "name": "val"
                    }
                ]
            },
            "_gen_filename": {
                "args": [
                    {
                        "name": "name"
                    }
                ]
            },
            "_getOutputWarpedFileName": {
                "args": []
            },
            "_getTransformFileNames": {
                "args": []
            },
            "_list_outputs": {
                "args": []
            }
        },
        "ApplyTransformsInputSpec": {},
        "ApplyTransformsOutputSpec": {},
        "ApplyTransformsToPointsInputSpec": {},
        "ApplyTransformsToPointsOutputSpec": {},
        "WarpImageMultiTransform": {
            "_format_arg": {
                "args": [
                    {
                        "name": "opt"
                    },
                    {
                        "name": "spec"
                    },
                    {
                        "name": "val"
                    }
                ]
            },
            "_gen_filename": {
                "args": [
                    {
                        "name": "name"
                    }
                ]
            },
            "_list_outputs": {
                "args": []
            }
        },
        "WarpImageMultiTransformInputSpec": {},
        "WarpImageMultiTransformOutputSpec": {},
        "WarpTimeSeriesImageMultiTransform": {
            "_format_arg": {
                "args": [
                    {
                        "name": "opt"
                    },
                    {
                        "name": "spec"
                    },
                    {
                        "name": "val"
                    }
                ]
            },
            "_list_outputs": {
                "args": []
            },
            "_run_interface": {
                "args": [
                    {
                        "name": "runtime"
                    }
                ]
            }
        },
        "WarpTimeSeriesImageMultiTransformInputSpec": {},
        "WarpTimeSeriesImageMultiTransformOutputSpec": {}
    },
    "resting": {
        "*": {
            "create_realign_flow": {
                "args": [
                    {
                        "default": "'realign'",
                        "name": "name"
                    }
                ]
            },
            "create_resting_preproc": {
                "args": [
                    {
                        "default": "'restpreproc'",
                        "name": "name"
                    }
                ]
            },
            "extract_noise_components": {
                "args": [
                    {
                        "name": "realigned_file"
                    },
                    {
                        "name": "noise_mask_file"
                    },
                    {
                        "name": "num_components"
                    }
                ]
            },
            "select_volume": {
                "args": [
                    {
                        "name": "filename"
                    },
                    {
                        "name": "which"
                    }
                ]
            }
        }
    },
    "segmentation": {
        "*": {},
        "BRAINSTalairach": {},
        "BRAINSTalairachInputSpec": {},
        "BRAINSTalairachMaskInputSpec": {},
        "BRAINSTalairachMaskOutputSpec": {},
        "BRAINSTalairachOutputSpec": {},
        "SimilarityIndex": {},
        "SimilarityIndexInputSpec": {},
        "SimilarityIndexOutputSpec": {}
    },
    "setup": {
        "*": {
            "configuration": {
                "args": [
                    {
                        "default": "''",
                        "name": "parent_package"
                    },
                    {
                        "default": "None",
                        "name": "top_path"
                    }
                ]
            }
        }
    },
    "sge": {
        "*": {
            "sge_debug_print": {
                "args": [
                    {
                        "name": "message"
                    }
                ]
            }
        },
        "QJobInfo:": {
            "__init__": {
                "args": [
                    {
                        "name": "job_num"
                    },
                    {
                        "name": "job_queue_state"
                    },
                    {
                        "name": "job_time"
                    },
                    {
                        "name": "job_queue_name"
                    },
                    {
                        "name": "job_slots"
                    },
                    {
                        "name": "qsub_command_line"
                    }
                ]
            },
            "__repr__": {
                "args": []
            },
            "is_initializing": {
                "args": []
            },
            "is_job_state_pending": {
                "args": []
            },
            "is_pending": {
                "args": []
            },
            "is_running": {
                "args": []
            },
            "is_zombie": {
                "args": []
            },
            "set_state": {
                "args": [
                    {
                        "name": "new_state"
                    }
                ]
            },
            "update_info": {
                "args": [
                    {
                        "name": "job_queue_state"
                    },
                    {
                        "name": "job_time"
                    },
                    {
                        "name": "job_queue_name"
                    },
                    {
                        "name": "job_slots"
                    }
                ]
            }
        },
        "QstatSubstitute:": {
            "__init__": {
                "args": [
                    {
                        "default": "'qstat'",
                        "name": "qstat_instant_executable"
                    },
                    {
                        "default": "'qstat'",
                        "name": "qstat_cached_executable"
                    }
                ]
            },
            "_parse_qstat_job_list": {
                "args": [
                    {
                        "name": "xml_job_list"
                    }
                ]
            },
            "_qacct_verified_complete": {
                "args": [
                    {
                        "name": "taskid"
                    }
                ]
            },
            "_remove_old_jobs": {
                "args": []
            },
            "_run_qstat": {
                "args": [
                    {
                        "name": "reason_for_qstat"
                    },
                    {
                        "default": "True",
                        "name": "force_instant"
                    }
                ]
            },
            "add_startup_job": {
                "args": [
                    {
                        "name": "taskid"
                    },
                    {
                        "name": "qsub_command_line"
                    }
                ]
            },
            "is_job_pending": {
                "args": [
                    {
                        "name": "task_id"
                    }
                ]
            },
            "print_dictionary": {
                "args": []
            },
            "qsub_sanitize_job_name": {
                "args": [
                    {
                        "name": "testjobname"
                    }
                ]
            }
        }
    },
    "sgegraph": {
        "*": {
            "node_completed_status": {
                "args": [
                    {
                        "name": "checknode"
                    }
                ]
            }
        }
    },
    "simpleregiongrowingsegmentation": {
        "*": {},
        "SimpleRegionGrowingSegmentationInputSpec": {},
        "SimpleRegionGrowingSegmentationOutputSpec": {}
    },
    "simulate": {
        "*": {},
        "SimulateMultiTensorInputSpec": {},
        "SimulateMultiTensorOutputSpec": {}
    },
    "six": {
        "*": {},
        "Iterator": {
            "b": {
                "args": [
                    {
                        "name": "s"
                    }
                ]
            },
            "byte2int": {
                "args": [
                    {
                        "name": "bs"
                    }
                ]
            },
            "exec_": {
                "args": [
                    {
                        "name": "_code_"
                    },
                    {
                        "default": "None",
                        "name": "_globs_"
                    },
                    {
                        "default": "None",
                        "name": "_locs_"
                    }
                ]
            },
            "indexbytes": {
                "args": [
                    {
                        "name": "buf"
                    },
                    {
                        "name": "i"
                    }
                ]
            },
            "int2byte": {
                "args": [
                    {
                        "name": "i"
                    }
                ]
            },
            "iterbytes": {
                "args": [
                    {
                        "name": "buf"
                    }
                ]
            },
            "iteritems": {
                "args": [
                    {
                        "name": "d"
                    },
                    {
                        "name": "**kw"
                    }
                ]
            },
            "iterkeys": {
                "args": [
                    {
                        "name": "d"
                    },
                    {
                        "name": "**kw"
                    }
                ]
            },
            "iterlists": {
                "args": [
                    {
                        "name": "d"
                    },
                    {
                        "name": "**kw"
                    }
                ]
            },
            "itervalues": {
                "args": [
                    {
                        "name": "d"
                    },
                    {
                        "name": "**kw"
                    }
                ]
            },
            "next": {
                "args": []
            },
            "print_": {
                "args": [
                    {
                        "name": "*args"
                    },
                    {
                        "name": "**kwargs"
                    }
                ]
            },
            "reraise": {
                "args": [
                    {
                        "name": "tp"
                    },
                    {
                        "name": "value"
                    },
                    {
                        "default": "None",
                        "name": "tb"
                    }
                ]
            },
            "u": {
                "args": [
                    {
                        "name": "s"
                    }
                ]
            },
            "with_metaclass": {
                "args": [
                    {
                        "name": "meta"
                    },
                    {
                        "name": "*bases"
                    }
                ]
            },
            "wrapper": {
                "args": [
                    {
                        "name": "f"
                    }
                ]
            },
            "wraps": {
                "args": [
                    {
                        "name": "wrapped"
                    },
                    {
                        "default": "functools.WRAPPER_ASSIGNMENTS",
                        "name": "assigned"
                    },
                    {
                        "name": ""
                    },
                    {
                        "default": "functools.WRAPPER_UPDATES",
                        "name": "updated"
                    }
                ]
            },
            "write": {
                "args": [
                    {
                        "name": "data"
                    }
                ]
            }
        },
        "Module_six_moves_urllib": {
            "__dir__": {
                "args": []
            },
            "add_move": {
                "args": [
                    {
                        "name": "move"
                    }
                ]
            },
            "advance_iterator": {
                "args": [
                    {
                        "name": "it"
                    }
                ]
            },
            "callable": {
                "args": [
                    {
                        "name": "obj"
                    }
                ]
            },
            "create_bound_method": {
                "args": [
                    {
                        "name": "func"
                    },
                    {
                        "name": "obj"
                    }
                ]
            },
            "get_unbound_function": {
                "args": [
                    {
                        "name": "unbound"
                    }
                ]
            },
            "remove_move": {
                "args": [
                    {
                        "name": "name"
                    }
                ]
            }
        },
        "Module_six_moves_urllib_error": {},
        "Module_six_moves_urllib_parse": {},
        "Module_six_moves_urllib_request": {},
        "Module_six_moves_urllib_response": {},
        "Module_six_moves_urllib_robotparser": {},
        "MovedAttribute": {
            "__init__": {
                "args": [
                    {
                        "name": "name"
                    },
                    {
                        "name": "old_mod"
                    },
                    {
                        "name": "new_mod"
                    },
                    {
                        "default": "None",
                        "name": "old_attr"
                    },
                    {
                        "default": "None",
                        "name": "new_attr"
                    }
                ]
            },
            "_resolve": {
                "args": []
            }
        },
        "MovedModule": {
            "__getattr__": {
                "args": [
                    {
                        "name": "attr"
                    }
                ]
            },
            "__init__": {
                "args": [
                    {
                        "name": "name"
                    },
                    {
                        "name": "old"
                    },
                    {
                        "default": "None",
                        "name": "new"
                    }
                ]
            },
            "_resolve": {
                "args": []
            }
        },
        "X": {
            "__len__": {
                "args": []
            },
            "_add_doc": {
                "args": [
                    {
                        "name": "func"
                    },
                    {
                        "name": "doc"
                    }
                ]
            },
            "_import_module": {
                "args": [
                    {
                        "name": "name"
                    }
                ]
            }
        },
        "_LazyDescr": {
            "__get__": {
                "args": [
                    {
                        "name": "obj"
                    },
                    {
                        "name": "tp"
                    }
                ]
            },
            "__init__": {
                "args": [
                    {
                        "name": "name"
                    }
                ]
            }
        },
        "_LazyModule": {
            "__dir__": {
                "args": []
            },
            "__init__": {
                "args": [
                    {
                        "name": "name"
                    }
                ]
            }
        },
        "_MovedItems": {},
        "_SixMetaPathImporter": {
            "__get_module": {
                "args": [
                    {
                        "name": "fullname"
                    }
                ]
            },
            "__init__": {
                "args": [
                    {
                        "name": "six_module_name"
                    }
                ]
            },
            "_add_module": {
                "args": [
                    {
                        "name": "mod"
                    },
                    {
                        "name": "*fullnames"
                    }
                ]
            },
            "_get_module": {
                "args": [
                    {
                        "name": "fullname"
                    }
                ]
            },
            "find_module": {
                "args": [
                    {
                        "name": "fullname"
                    },
                    {
                        "default": "None",
                        "name": "path"
                    }
                ]
            },
            "get_code": {
                "args": [
                    {
                        "name": "fullname"
                    }
                ]
            },
            "is_package": {
                "args": [
                    {
                        "name": "fullname"
                    }
                ]
            },
            "load_module": {
                "args": [
                    {
                        "name": "fullname"
                    }
                ]
            }
        }
    },
    "slurm": {
        "*": {}
    },
    "slurmgraph": {
        "*": {
            "node_completed_status": {
                "args": [
                    {
                        "name": "checknode"
                    }
                ]
            }
        }
    },
    "somaflow": {
        "*": {}
    },
    "specialized": {
        "*": {},
        "BRAINSDemonWarp": {},
        "BRAINSDemonWarpInputSpec": {},
        "BRAINSDemonWarpOutputSpec": {},
        "BRAINSTransformFromFiducialsInputSpec": {},
        "BRAINSTransformFromFiducialsOutputSpec": {},
        "VBRAINSDemonWarp": {},
        "VBRAINSDemonWarpInputSpec": {},
        "VBRAINSDemonWarpOutputSpec": {}
    },
    "spm_docs": {
        "*": {
            "_strip_header": {
                "args": [
                    {
                        "name": "doc"
                    }
                ]
            },
            "grab_doc": {
                "args": [
                    {
                        "name": "task_name"
                    }
                ]
            }
        }
    },
    "spminfo": {
        "*": {}
    },
    "surface": {
        "*": {},
        "GrayscaleModelMaker": {},
        "GrayscaleModelMakerInputSpec": {},
        "GrayscaleModelMakerOutputSpec": {},
        "LabelMapSmoothing": {},
        "LabelMapSmoothingInputSpec": {},
        "LabelMapSmoothingOutputSpec": {},
        "MergeModels": {},
        "MergeModelsInputSpec": {},
        "MergeModelsOutputSpec": {},
        "ModelMakerInputSpec": {},
        "ModelMakerOutputSpec": {},
        "ModelToLabelMap": {},
        "ModelToLabelMapInputSpec": {},
        "ModelToLabelMapOutputSpec": {},
        "ProbeVolumeWithModel": {},
        "ProbeVolumeWithModelInputSpec": {},
        "ProbeVolumeWithModelOutputSpec": {}
    },
    "svm": {
        "*": {},
        "SVMTestInputSpec": {},
        "SVMTrain": {
            "_format_arg": {
                "args": [
                    {
                        "name": "name"
                    },
                    {
                        "name": "trait_spec"
                    },
                    {
                        "name": "value"
                    }
                ]
            }
        },
        "SVMTrainInputSpec": {},
        "SVMTrainOutputSpec": {}
    },
    "tbss": {
        "*": {
            "create_tbss_1_preproc": {
                "args": [
                    {
                        "default": "'tbss_1_preproc'",
                        "name": "name"
                    }
                ]
            },
            "create_tbss_2_reg": {
                "args": [
                    {
                        "default": "\"tbss_2_reg\"",
                        "name": "name"
                    }
                ]
            },
            "create_tbss_3_postreg": {
                "args": [
                    {
                        "default": "'tbss_3_postreg'",
                        "name": "name"
                    },
                    {
                        "default": "True",
                        "name": "estimate_skeleton"
                    }
                ]
            },
            "create_tbss_4_prestats": {
                "args": [
                    {
                        "default": "'tbss_4_prestats'",
                        "name": "name"
                    }
                ]
            },
            "create_tbss_all": {
                "args": [
                    {
                        "default": "'tbss_all'",
                        "name": "name"
                    },
                    {
                        "default": "True",
                        "name": "estimate_skeleton"
                    }
                ]
            },
            "create_tbss_non_FA": {
                "args": [
                    {
                        "default": "'tbss_non_FA'",
                        "name": "name"
                    }
                ]
            },
            "tbss1_op_string": {
                "args": [
                    {
                        "name": "in_files"
                    }
                ]
            },
            "tbss4_op_string": {
                "args": [
                    {
                        "name": "skeleton_thresh"
                    }
                ]
            }
        }
    },
    "tensors": {
        "*": {},
        "ConstrainedSphericalDeconvolution": {
            "_gen_filename": {
                "args": [
                    {
                        "name": "name"
                    }
                ]
            },
            "_gen_outfilename": {
                "args": []
            },
            "_list_outputs": {
                "args": []
            }
        },
        "ConstrainedSphericalDeconvolutionInputSpec": {},
        "ConstrainedSphericalDeconvolutionOutputSpec": {},
        "DWI2SphericalHarmonicsImage": {
            "_gen_filename": {
                "args": [
                    {
                        "name": "name"
                    }
                ]
            },
            "_gen_outfilename": {
                "args": []
            },
            "_list_outputs": {
                "args": []
            }
        },
        "DWI2SphericalHarmonicsImageInputSpec": {},
        "DWI2SphericalHarmonicsImageOutputSpec": {},
        "Directions2AmplitudeInputSpec": {},
        "Directions2AmplitudeOutputSpec": {},
        "EstimateResponseForSH": {
            "_gen_filename": {
                "args": [
                    {
                        "name": "name"
                    }
                ]
            },
            "_gen_outfilename": {
                "args": []
            },
            "_list_outputs": {
                "args": []
            },
            "concat_files": {
                "args": [
                    {
                        "name": "bvec_file"
                    },
                    {
                        "name": "bval_file"
                    },
                    {
                        "name": "invert_x"
                    },
                    {
                        "name": "invert_y"
                    },
                    {
                        "name": "invert_z"
                    }
                ]
            }
        },
        "EstimateResponseForSHInputSpec": {},
        "EstimateResponseForSHOutputSpec": {},
        "FSL2MRTrix": {
            "_gen_filename": {
                "args": [
                    {
                        "name": "name"
                    }
                ]
            },
            "_gen_outfilename": {
                "args": []
            },
            "_list_outputs": {
                "args": []
            },
            "_run_interface": {
                "args": [
                    {
                        "name": "runtime"
                    }
                ]
            }
        },
        "FSL2MRTrixInputSpec": {},
        "FSL2MRTrixOutputSpec": {},
        "FindShPeaks": {},
        "FindShPeaksInputSpec": {},
        "FindShPeaksOutputSpec": {},
        "GenerateDirections": {},
        "GenerateDirectionsInputSpec": {},
        "GenerateDirectionsOutputSpec": {}
    },
    "thresholdscalarvolume": {
        "*": {},
        "ThresholdScalarVolumeInputSpec": {},
        "ThresholdScalarVolumeOutputSpec": {}
    },
    "tmpdirs": {
        "*": {},
        "TemporaryDirectory": {
            "__enter__": {
                "args": []
            },
            "__exit__": {
                "args": [
                    {
                        "name": "exc"
                    },
                    {
                        "name": "value"
                    },
                    {
                        "name": "tb"
                    }
                ]
            },
            "__init__": {
                "args": [
                    {
                        "default": "\"\"",
                        "name": "suffix"
                    },
                    {
                        "default": "template",
                        "name": "prefix"
                    },
                    {
                        "default": "None",
                        "name": "dir"
                    }
                ]
            },
            "cleanup": {
                "args": []
            }
        }
    },
    "tracking": {
        "*": {},
        "DiffusionTensorStreamlineTrack": {
            "__init__": {
                "args": [
                    {
                        "default": "None",
                        "name": "command"
                    },
                    {
                        "name": "**inputs"
                    }
                ]
            }
        },
        "DiffusionTensorStreamlineTrackInputSpec": {},
        "FilterTracks": {},
        "FilterTracksInputSpec": {},
        "FilterTracksOutputSpec": {},
        "ProbabilisticSphericallyDeconvolutedStreamlineTrack": {
            "__init__": {
                "args": [
                    {
                        "default": "None",
                        "name": "command"
                    },
                    {
                        "name": "**inputs"
                    }
                ]
            }
        },
        "ProbabilisticSphericallyDeconvolutedStreamlineTrackInputSpec": {},
        "StreamlineTrack": {},
        "StreamlineTrackInputSpec": {},
        "StreamlineTrackOutputSpec": {},
        "Tracks2Prob": {
            "_gen_filename": {
                "args": [
                    {
                        "name": "name"
                    }
                ]
            },
            "_gen_outfilename": {
                "args": []
            },
            "_list_outputs": {
                "args": []
            }
        },
        "Tracks2ProbInputSpec": {},
        "Tracks2ProbOutputSpec": {}
    },
    "tracks": {
        "*": {},
        "TrackDensityMapInputSpec": {},
        "TrackDensityMapOutputSpec": {}
    },
    "traits_extension": {
        "*": {},
        "BaseDirectory ": {
            "": {
                "args": [
                    {
                        "name": "self"
                    },
                    {
                        "name": "object"
                    },
                    {
                        "name": "name"
                    },
                    {
                        "name": "value"
                    }
                ]
            }
        },
        "BaseFile ": {
            "": {
                "args": [
                    {
                        "name": "self"
                    },
                    {
                        "name": "object"
                    },
                    {
                        "name": "name"
                    },
                    {
                        "name": "value"
                    }
                ]
            }
        },
        "File ": {
            "": {
                "args": [
                    {
                        "name": "self"
                    },
                    {
                        "default": " ''",
                        "name": "value "
                    },
                    {
                        "default": " None",
                        "name": "filter "
                    },
                    {
                        "default": " False",
                        "name": "auto_set "
                    },
                    {
                        "name": ""
                    },
                    {
                        "default": " 0",
                        "name": "entries "
                    },
                    {
                        "default": " False",
                        "name": "exists "
                    },
                    {
                        "name": "**metadata"
                    }
                ]
            }
        }
    },
    "ukftractography": {
        "*": {},
        "UKFTractographyInputSpec": {},
        "UKFTractographyOutputSpec": {}
    },
    "utilities": {
        "*": {},
        "HistogramMatchingFilterInputSpec": {},
        "HistogramMatchingFilterOutputSpec": {}
    },
    "utility": {
        "*": {},
        "AssertEqual": {
            "_run_interface": {
                "args": [
                    {
                        "name": "runtime"
                    }
                ]
            }
        },
        "AssertEqualInputSpec": {},
        "CSVReaderInputSpec": {},
        "Function": {
            "__init__": {
                "args": [
                    {
                        "name": "input_names"
                    },
                    {
                        "name": "output_names"
                    },
                    {
                        "default": "None",
                        "name": "function"
                    },
                    {
                        "default": "None",
                        "name": "imports"
                    },
                    {
                        "name": ""
                    },
                    {
                        "name": "**inputs"
                    }
                ]
            },
            "_add_output_traits": {
                "args": [
                    {
                        "name": "base"
                    }
                ]
            },
            "_list_outputs": {
                "args": []
            },
            "_run_interface": {
                "args": [
                    {
                        "name": "runtime"
                    }
                ]
            },
            "_set_function_string": {
                "args": [
                    {
                        "name": "obj"
                    },
                    {
                        "name": "name"
                    },
                    {
                        "name": "old"
                    },
                    {
                        "name": "new"
                    }
                ]
            }
        },
        "FunctionInputSpec": {},
        "IdentityInterface": {
            "__init__": {
                "args": [
                    {
                        "default": "None",
                        "name": "fields"
                    },
                    {
                        "default": "True",
                        "name": "mandatory_inputs"
                    },
                    {
                        "name": "**inputs"
                    }
                ]
            },
            "_add_output_traits": {
                "args": [
                    {
                        "name": "base"
                    }
                ]
            },
            "_list_outputs": {
                "args": []
            }
        },
        "Merge": {
            "__init__": {
                "args": [
                    {
                        "default": "0",
                        "name": "numinputs"
                    },
                    {
                        "name": "**inputs"
                    }
                ]
            },
            "_list_outputs": {
                "args": []
            }
        },
        "MergeInputSpec": {},
        "MergeOutputSpec": {},
        "Rename": {
            "__init__": {
                "args": [
                    {
                        "default": "None",
                        "name": "format_string"
                    },
                    {
                        "name": "**inputs"
                    }
                ]
            },
            "_list_outputs": {
                "args": []
            },
            "_rename": {
                "args": []
            },
            "_run_interface": {
                "args": [
                    {
                        "name": "runtime"
                    }
                ]
            }
        },
        "RenameInputSpec": {},
        "RenameOutputSpec": {},
        "Select": {
            "_list_outputs": {
                "args": []
            }
        },
        "SelectInputSpec": {},
        "SelectOutputSpec": {},
        "Split": {
            "_add_output_traits": {
                "args": [
                    {
                        "name": "base"
                    }
                ]
            },
            "_list_outputs": {
                "args": []
            }
        },
        "SplitInputSpec": {}
    },
    "utils": {
        "*": {
            "get_affine": {
                "args": [
                    {
                        "name": "volume"
                    }
                ]
            },
            "get_data_dims": {
                "args": [
                    {
                        "name": "volume"
                    }
                ]
            },
            "get_vox_dims": {
                "args": [
                    {
                        "name": "volume"
                    }
                ]
            },
            "id_list_from_lookup_table": {
                "args": [
                    {
                        "name": "lookup_file"
                    },
                    {
                        "name": "region_list"
                    }
                ]
            },
            "region_list_from_volume": {
                "args": [
                    {
                        "name": "in_file"
                    }
                ]
            },
            "select_aparc": {
                "args": [
                    {
                        "name": "list_of_files"
                    }
                ]
            },
            "select_aparc_annot": {
                "args": [
                    {
                        "name": "list_of_files"
                    }
                ]
            }
        }
    },
    "vista": {
        "*": {},
        "Vnifti2Image": {},
        "Vnifti2ImageInputSpec": {},
        "Vnifti2ImageOutputSpec": {},
        "VtoMatInputSpec": {},
        "VtoMatOutputSpec": {}
    },
    "visualization": {
        "*": {},
        "ConvertScalarImageToRGB": {
            "_format_arg": {
                "args": [
                    {
                        "name": "opt"
                    },
                    {
                        "name": "spec"
                    },
                    {
                        "name": "val"
                    }
                ]
            },
            "_list_outputs": {
                "args": []
            }
        },
        "ConvertScalarImageToRGBInputSpec": {},
        "ConvertScalarImageToRGBOutputSpec": {},
        "CreateTiledMosaicInputSpec": {},
        "CreateTiledMosaicOutputSpec": {}
    },
    "votingbinaryholefillingimagefilter": {
        "*": {},
        "VotingBinaryHoleFillingImageFilterInputSpec": {},
        "VotingBinaryHoleFillingImageFilterOutputSpec": {}
    }
}