{
    "": {
        "args": [
            {
                "name": "sample_size"
            },
            {
                "name": "sample_size"
            },
            {
                "name": "[]"
            },
            {
                "name": "[]"
            },
            {
                "name": "-5."
            },
            {
                "name": "ault_rtol"
            },
            {
                "name": "ault_rtol)"
            },
            {
                "name": ""
            }
        ]
    },
    "\" argmax": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "axis+eps) is unined\""
            }
        ]
    },
    "\" argsort": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "axis+eps) is unined\""
            }
        ]
    },
    "\" fill_diagonal_offset": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "val"
            },
            {
                "name": "offset+eps) is unined\""
            }
        ]
    },
    "\" sort": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "axis+eps) is unined\""
            }
        ]
    },
    "\"\"\" \"Transpose\" of Conv3D ": {
        "args": [
            {
                "name": "Conv3D implements multiplication by an implicitly ined matrix W. This implements multiplication by its transpose) \"\"\""
            }
        ]
    },
    "\"\"\" % ": {
        "args": [
            {
                "name": "compiledir_format_keys"
            },
            {
                "name": "ault_compiledir_format)))"
            },
            {
                "name": ""
            }
        ]
    },
    "\"\"\"Alias for self.ault_output": {
        "args": [
            {
                "name": "\"\"\""
            }
        ]
    },
    "\"\"\"The ault age threshold for `clear_old` ": {
        "args": [
            {
                "name": "in seconds"
            }
        ]
    },
    "\"A ault ": {
        "args": [
            {
                "name": "initial) value is required for an \""
            }
        ]
    },
    "\"Allow/disallow gc inside of Scan ": {
        "args": [
            {
                "name": "ault: False)\""
            },
            {
                "name": ""
            }
        ]
    },
    "\"input %s ": {
        "args": [
            {
                "name": "%s) of the %s op is mathematically unined. %s\""
            }
        ]
    },
    "\"or one of %s\" % theano.compile.mode.preined_linkers.keys": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "# ": {
        "args": [
            {
                "name": "even if we just use a pointer to it in a function"
            }
        ]
    },
    "#      make_node": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "reps"
            },
            {
                "name": "g_out"
            }
        ]
    },
    "#      perform": {
        "args": [
            {
                "name": "node"
            },
            {
                "name": "inp"
            },
            {
                "name": "out"
            }
        ]
    },
    "#     get_shape_info": {
        "args": [
            {
                "name": "obj"
            }
        ]
    },
    "#     get_size": {
        "args": [
            {
                "name": "shape_info"
            }
        ]
    },
    "#     infer_shape": {
        "args": [
            {
                "name": "node"
            },
            {
                "name": "i0_shapes"
            }
        ]
    },
    "#     local_merge_blocksparse_alpha": {
        "args": [
            {
                "name": "node"
            },
            {
                "name": "*inputs"
            }
        ]
    },
    "#     local_merge_blocksparse_output": {
        "args": [
            {
                "name": "node"
            },
            {
                "name": "*inputs"
            }
        ]
    },
    "#  __iand__": {
        "args": [
            {
                "name": "other"
            }
        ]
    },
    "#  __ior__": {
        "args": [
            {
                "name": "other"
            }
        ]
    },
    "#  __len__": {
        "args": []
    },
    "#  _as_TensorVariable": {
        "args": []
    },
    "#  elemwise_to_scal": {
        "args": [
            {
                "name": "fgraph"
            }
        ]
    },
    "# 1. The gradient may be sparser than the input matrix ined by ": {
        "args": [
            {
                "name": "data"
            },
            {
                "name": ""
            }
        ]
    },
    "# FFT gets the highest priority ": {
        "args": [
            {
                "name": "lowest number)"
            },
            {
                "name": "but is disabled by ault."
            }
        ]
    },
    "# If it is the ault ": {
        "args": [
            {
                "name": "None"
            },
            {
                "name": "None"
            },
            {
                "name": "None) slice"
            },
            {
                "name": "or a variant"
            },
            {
                "name": ""
            }
        ]
    },
    "# In that case, initions in files on the right ": {
        "args": [
            {
                "name": "here"
            },
            {
                "name": "~/.theanorc) have"
            }
        ]
    },
    "# It means the gradient is unined ": {
        "args": [
            {
                "name": "which implies"
            }
        ]
    },
    "# Object to mark that a parameter is unined ": {
        "args": [
            {
                "name": "useful in cases where"
            }
        ]
    },
    "# This sum": {
        "args": [
            {
                "name": "is ined above"
            },
            {
                "name": "it's not the builtin sum."
            }
        ]
    },
    "# We need to ault to 7 to support theano.tensor.tensor": {
        "args": [
            {
                "name": "...)."
            }
        ]
    },
    "# __iadd__": {
        "args": [
            {
                "name": "other"
            }
        ]
    },
    "# __idiv__": {
        "args": [
            {
                "name": "other"
            }
        ]
    },
    "# __imul__": {
        "args": [
            {
                "name": "other"
            }
        ]
    },
    "# __ipow__": {
        "args": [
            {
                "name": "other"
            }
        ]
    },
    "# __isub__": {
        "args": [
            {
                "name": "other"
            }
        ]
    },
    "# __ixor__": {
        "args": [
            {
                "name": "other"
            }
        ]
    },
    "# are mapped to the same name.  Duplicates are ined by ": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "# as stdin ": {
        "args": [
            {
                "name": "which is the ault) results in the process"
            }
        ]
    },
    "# assign": {
        "args": [
            {
                "name": "c"
            },
            {
                "name": "v"
            }
        ]
    },
    "# aults to 0 ": {
        "args": [
            {
                "name": "aka False)."
            }
        ]
    },
    "# c_code": {
        "args": [
            {
                "name": "node"
            },
            {
                "name": "name"
            },
            {
                "name": "inputs"
            },
            {
                "name": "outputs"
            },
            {
                "name": "sub"
            }
        ]
    },
    "# filter_inplace": {
        "args": [
            {
                "name": "value"
            },
            {
                "name": "storage"
            },
            {
                "default": "False",
                "name": "strict"
            },
            {
                "default": "None",
                "name": "allow_downcast"
            }
        ]
    },
    "# get index ": {
        "args": [
            {
                "name": "which must be a vector by inition"
            }
        ]
    },
    "# main seed: [12345]*6 ": {
        "args": [
            {
                "name": "ault"
            }
        ]
    },
    "# methods ined that the CLinker expects ": {
        "args": [
            {
                "name": "Scan is an"
            }
        ]
    },
    "# perform": {
        "args": [
            {
                "name": "node"
            },
            {
                "name": "input_storage"
            },
            {
                "name": "output_storage"
            }
        ]
    },
    "# variable ": {
        "args": [
            {
                "name": "is it a ault? ignored?"
            },
            {
                "name": "if the shared variable changes"
            },
            {
                "name": ""
            }
        ]
    },
    "# when ining CUDA kernels ": {
        "args": [
            {
                "name": "with Cuda 4.2 and 5.0). See gh-1172."
            }
        ]
    },
    "# wrap_thunk": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "#if ined": {
        "args": [
            {
                "default": " 20",
                "name": "CUDNN_VERSION) && CUDNN_VERSION >"
            }
        ]
    },
    "#ine blas_type dtype_ ## %": {
        "args": [
            {
                "name": "V)s"
            }
        ]
    },
    "%": {
        "args": [
            {
                "name": "un_macros)s"
            }
        ]
    },
    "'evaluating f": {
        "args": [
            {
                "name": "x) is to ine a new input `y` and use '"
            }
        ]
    },
    "'large'.  ": {
        "args": [
            {
                "name": "ault is None which takes its value from"
            }
        ]
    },
    "- ReplaceValidate": {
        "args": [
            {
                "name": "Added by ault"
            }
        ]
    },
    "- `Constant` ": {
        "args": [
            {
                "name": "a subclass) which adds a ault and un-replaceable :literal:`value`"
            },
            {
                "name": "and"
            }
        ]
    },
    "- if mode=raise ": {
        "args": [
            {
                "name": "the ault)"
            },
            {
                "name": "then"
            },
            {
                "name": "first of all"
            },
            {
                "name": "each element of a"
            }
        ]
    },
    "10. * std / numpy.sqrt": {
        "args": [
            {
                "name": "steps)"
            },
            {
                "name": "ault_rtol)"
            },
            {
                "name": ""
            }
        ]
    },
    "3. The compiler options ined in `key` ": {
        "args": [
            {
                "name": "command line parameters and"
            }
        ]
    },
    ":Parameter: *mode* - {``raise`` ": {
        "args": [
            {
                "name": "ault)"
            },
            {
                "name": "``wrap``"
            },
            {
                "name": "``clip``}"
            },
            {
                "name": "optional"
            }
        ]
    },
    ":note: Another way to ine signals: ": {
        "args": [
            {
                "name": "batch"
            },
            {
                "name": "time"
            },
            {
                "name": "in channel"
            },
            {
                "name": "row"
            },
            {
                "name": "column"
            }
        ]
    },
    ":param ault: The ault value to use at call-time ": {
        "args": [
            {
                "name": "can also be a Container where"
            }
        ]
    },
    ":param copy_inputs: if True, the inputs will be copied ": {
        "args": [
            {
                "name": "aults to True"
            }
        ]
    },
    ":param grad_preserves_dense: if True ": {
        "args": [
            {
                "name": "ault)"
            },
            {
                "name": "makes the grad of"
            }
        ]
    },
    ":param int verbosity: amount of feedback displayed to screen ": {
        "args": [
            {
                "name": "ault 1"
            }
        ]
    },
    ":param mode: one of 'max', 'average' ": {
        "args": [
            {
                "name": "ault: 'max'"
            }
        ]
    },
    ">>>  even": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "@local_optimizer": {
        "args": [
            {
                "name": "None) # XXX: det is ined later and can't be used here"
            }
        ]
    },
    "AddConfigVar": {
        "args": [
            {
                "name": "name"
            },
            {
                "name": "doc"
            },
            {
                "name": "configparam"
            },
            {
                "default": "config",
                "name": "root"
            },
            {
                "default": "True",
                "name": "in_c_key"
            }
        ]
    },
    "Another way to ine filters: ": {
        "args": [
            {
                "name": "out channel"
            },
            {
                "name": "time"
            },
            {
                "name": "in channel"
            },
            {
                "name": "row"
            },
            {
                "name": "column"
            }
        ]
    },
    "BoolParam": {
        "args": [
            {
                "name": "ault"
            },
            {
                "default": "None",
                "name": "is_valid"
            },
            {
                "default": "True",
                "name": "allow_override"
            }
        ]
    },
    "By ault ``get_value": {
        "args": [
            {
                "name": "`` copies from the GPU to a ``numpy.ndarray`` and returns that"
            }
        ]
    },
    "CEIL_INTDIV": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "b"
            }
        ]
    },
    "CudaNdarray_pickler": {
        "args": [
            {
                "name": "cnda"
            }
        ]
    },
    "CudaNdarray_unpickler": {
        "args": [
            {
                "name": "npa"
            }
        ]
    },
    "Diagonal above which to zero elements.  `k = 0` ": {
        "args": [
            {
                "name": "the ault) is the"
            }
        ]
    },
    "ElemwiseOpTime": {
        "args": [
            {
                "name": "N"
            },
            {
                "default": "False",
                "name": "script"
            },
            {
                "default": "1000",
                "name": "loops"
            }
        ]
    },
    "FloatParam": {
        "args": [
            {
                "name": "ault"
            },
            {
                "default": "None",
                "name": "is_valid"
            },
            {
                "default": "True",
                "name": "allow_override"
            }
        ]
    },
    "GA_C_ORDER, pygpu_ault_context": {
        "args": [
            {
                "name": ""
            },
            {
                "name": ""
            }
        ]
    },
    "GpuConvOp_from_ConvOp": {
        "args": [
            {
                "name": "op"
            }
        ]
    },
    "If False ": {
        "args": [
            {
                "name": "ault)"
            },
            {
                "name": "perform them all. Else"
            },
            {
                "name": "perform automatic updates on all Variables"
            }
        ]
    },
    "If None ": {
        "args": [
            {
                "name": "ault)"
            },
            {
                "name": "we use the dtype in the list below"
            },
            {
                "name": ""
            }
        ]
    },
    "If return_matrix is False ": {
        "args": [
            {
                "name": "ault"
            },
            {
                "name": "same as NumPy"
            }
        ]
    },
    "If unpack_single is True ": {
        "args": [
            {
                "name": "ault) and that the function has only one"
            }
        ]
    },
    "Index of the diagonal: 0 ": {
        "args": [
            {
                "name": "the ault) refers to the main diagonal"
            },
            {
                "name": ""
            }
        ]
    },
    "IntParam": {
        "args": [
            {
                "name": "_timeout_ault"
            },
            {
                "default": " 0",
                "name": "lambda i: i >"
            },
            {
                "name": ""
            }
        ]
    },
    "LR": {
        "args": [
            {
                "default": "None",
                "name": "x"
            },
            {
                "default": "None",
                "name": "y"
            },
            {
                "default": "None",
                "name": "v"
            },
            {
                "default": "None",
                "name": "c"
            },
            {
                "default": "None",
                "name": "l2_coef"
            }
        ]
    },
    "Layer": {
        "args": [
            {
                "default": "None",
                "name": "x"
            },
            {
                "default": "None",
                "name": "w"
            },
            {
                "default": "None",
                "name": "b"
            }
        ]
    },
    "Lop": {
        "args": [
            {
                "name": "f"
            },
            {
                "name": "wrt"
            },
            {
                "name": "eval_points"
            },
            {
                "default": "None",
                "name": "consider_constant"
            },
            {
                "name": ""
            }
        ]
    },
    "MovedModule": {
        "args": [
            {
                "name": "\"html_entities\""
            },
            {
                "name": "\"htmlentitys\""
            },
            {
                "name": "\"html.entities\")"
            },
            {
                "name": ""
            }
        ]
    },
    "NNet": {
        "args": [
            {
                "default": "None",
                "name": "x"
            },
            {
                "default": "None",
                "name": "y"
            },
            {
                "default": "2",
                "name": "n_hid_layers"
            }
        ]
    },
    "One of 'conv', 'cross'. ": {
        "args": [
            {
                "name": "ault: 'conv'"
            }
        ]
    },
    "Optional function. See TensorType": {
        "args": [
            {
                "name": ".get_size for inition"
            }
        ]
    },
    "PCA": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "PyGpuContextObject *c = pygpu_ault_context": {
        "args": [
            {
                "name": ";"
            }
        ]
    },
    "R_op": {
        "args": [
            {
                "name": "inputs"
            },
            {
                "name": "eval_points"
            }
        ]
    },
    "Rop": {
        "args": [
            {
                "name": "f"
            },
            {
                "name": "wrt"
            },
            {
                "name": "eval_points"
            }
        ]
    },
    "StrParam": {
        "args": [
            {
                "name": "ault_cuda_root)"
            },
            {
                "name": ""
            }
        ]
    },
    "TensorConstant": {
        "args": [
            {
                "name": "*inputs"
            },
            {
                "name": "**kwargs"
            }
        ]
    },
    "TensorType": {
        "args": [
            {
                "name": "*inputs"
            },
            {
                "name": "**kwargs"
            }
        ]
    },
    "TensorVariable": {
        "args": [
            {
                "name": "*inputs"
            },
            {
                "name": "**kwargs"
            }
        ]
    },
    "The `then` branch is ined as the first N tensors ": {
        "args": [
            {
                "name": "after the"
            }
        ]
    },
    "The ault ": {
        "args": [
            {
                "name": "None) is to compute the cumprod over the flattened array."
            }
        ]
    },
    "The ault age threshold ": {
        "args": [
            {
                "name": "in seconds) for cache files we want to use."
            }
        ]
    },
    "The op object is created by calling op": {
        "args": [
            {
                "name": ""
            },
            {
                "name": "so good ault value"
            }
        ]
    },
    "This will save all ault inputs, the graph, and *** to the pickle file ": {
        "args": [
            {
                "name": "WRITEME)."
            }
        ]
    },
    "Variable that is ": {
        "args": [
            {
                "name": "aults to being) shared between functions that"
            }
        ]
    },
    "When axis is None ": {
        "args": [
            {
                "name": "the ault value)"
            },
            {
                "name": "the product is performed"
            }
        ]
    },
    "WrapLinkerMany": {
        "args": [
            {
                "name": "linkers"
            },
            {
                "name": "wrappers"
            }
        ]
    },
    "`ifelse_lift` ": {
        "args": [
            {
                "name": "cond_lift_single_if"
            }
        ]
    },
    "abs_": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "abs__inplace": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "abs_rel_err": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "b"
            }
        ]
    },
    "abs_rel_errors": {
        "args": [
            {
                "name": "g_pt"
            }
        ]
    },
    "accept": {
        "args": [
            {
                "name": "fgraph"
            },
            {
                "default": "None",
                "name": "no_recycling"
            }
        ]
    },
    "accept_var_updates": {
        "args": [
            {
                "name": "updated_vars"
            }
        ]
    },
    "access_grad_cache": {
        "args": [
            {
                "name": "var"
            }
        ]
    },
    "access_term_cache": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "account_for": {
        "args": [
            {
                "name": "var"
            }
        ]
    },
    "actually handling the failure, which is ined in struct_gen": {
        "args": [
            {
                "name": "."
            }
        ]
    },
    "add": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "add_calculate": {
        "args": [
            {
                "name": "num"
            },
            {
                "name": "denum"
            },
            {
                "default": "False",
                "name": "aslist"
            },
            {
                "default": "None",
                "name": "out_type"
            }
        ]
    },
    "add_clear_storage": {
        "args": [
            {
                "name": "f"
            },
            {
                "name": "computed"
            },
            {
                "name": "storage_map"
            }
        ]
    },
    "add_function": {
        "args": [
            {
                "name": "fn"
            }
        ]
    },
    "add_hint": {
        "args": [
            {
                "name": "r"
            },
            {
                "name": "k"
            },
            {
                "name": "v"
            }
        ]
    },
    "add_impact": {
        "args": [
            {
                "name": "r"
            },
            {
                "name": "view_o"
            },
            {
                "name": "impact"
            }
        ]
    },
    "add_include": {
        "args": [
            {
                "name": "str"
            }
        ]
    },
    "add_init_code": {
        "args": [
            {
                "name": "code"
            }
        ]
    },
    "add_inplace": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "b"
            }
        ]
    },
    "add_input": {
        "args": [
            {
                "name": "sinput"
            }
        ]
    },
    "add_key": {
        "args": [
            {
                "name": "key"
            },
            {
                "default": "True",
                "name": "save_pkl"
            }
        ]
    },
    "add_links": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "b):  # b depends on a"
            }
        ]
    },
    "add_move": {
        "args": [
            {
                "name": "move"
            }
        ]
    },
    "add_nitsot_outputs": {
        "args": [
            {
                "name": "fgraph"
            },
            {
                "name": "old_scan_node"
            },
            {
                "name": ""
            }
        ]
    },
    "add_requirements": {
        "args": [
            {
                "name": "fgraph"
            }
        ]
    },
    "add_simplifier": {
        "args": [
            {
                "name": "simplifier"
            },
            {
                "name": "reason"
            }
        ]
    },
    "add_standard_rpath": {
        "args": [
            {
                "name": "rpath"
            }
        ]
    },
    "add_support_code": {
        "args": [
            {
                "name": "code"
            }
        ]
    },
    "add_tag_trace": {
        "args": [
            {
                "name": "thing"
            },
            {
                "default": "1",
                "name": "user_line"
            }
        ]
    },
    "add_tags": {
        "args": [
            {
                "name": "name"
            },
            {
                "name": "*tags"
            }
        ]
    },
    "add_to_zview": {
        "args": [
            {
                "name": "name"
            },
            {
                "name": "x"
            },
            {
                "name": "fail"
            }
        ]
    },
    "addbroadcast": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "*axes"
            }
        ]
    },
    "adv_index_broadcastable_pattern": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "idx"
            }
        ]
    },
    "advance_iterator": {
        "args": [
            {
                "name": "it"
            }
        ]
    },
    "alg_ = ": {
        "args": [
            {
                "name": "'CONV_ALGO'"
            },
            {
                "name": "alg"
            }
        ]
    },
    "alias of 'reduced', deprecated ": {
        "args": [
            {
                "name": "ault"
            }
        ]
    },
    "alias_root": {
        "args": [
            {
                "name": "v"
            }
        ]
    },
    "all": {
        "args": [
            {
                "name": "iterable"
            }
        ]
    },
    "allocate_memory": {
        "args": [
            {
                "name": "T"
            },
            {
                "name": "y_info"
            },
            {
                "name": "y"
            }
        ]
    },
    "allow_downcast: Bool or None ": {
        "args": [
            {
                "name": "ault: None"
            }
        ]
    },
    "alpha_merge": {
        "args": [
            {
                "name": "cls"
            },
            {
                "name": "alpha_in"
            },
            {
                "name": "beta_in"
            },
            {
                "name": "nd"
            }
        ]
    },
    "amdlibm_speed_up": {
        "args": [
            {
                "name": "op"
            }
        ]
    },
    "analyze": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "ancestors": {
        "args": [
            {
                "name": "variable_list"
            },
            {
                "default": "None",
                "name": "blockers"
            }
        ]
    },
    "and not isinstance": {
        "args": [
            {
                "name": "no_ault_updates"
            },
            {
                "name": "list"
            }
        ]
    },
    "and_": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "b"
            }
        ]
    },
    "and__inplace": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "b"
            }
        ]
    },
    "angle": {
        "args": [
            {
                "name": "z"
            }
        ]
    },
    "any": {
        "args": [
            {
                "name": "iterable"
            }
        ]
    },
    "append": {
        "args": [
            {
                "name": "toAppend"
            }
        ]
    },
    "apply": {
        "args": [
            {
                "name": "fgraph"
            }
        ]
    },
    "applySparseFilter": {
        "args": [
            {
                "name": "kerns"
            },
            {
                "name": "kshp"
            },
            {
                "name": "nkern"
            },
            {
                "name": "images"
            },
            {
                "name": "imgshp"
            },
            {
                "name": ""
            }
        ]
    },
    "apply_meth": {
        "args": [
            {
                "name": "tag"
            }
        ]
    },
    "apply_name": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "apply_opt": {
        "args": [
            {
                "name": "fgraph"
            },
            {
                "name": "node"
            }
        ]
    },
    "apply_policy": {
        "args": [
            {
                "name": "policy"
            },
            {
                "name": "r"
            },
            {
                "name": "name"
            },
            {
                "name": "sub"
            }
        ]
    },
    "apply_rebroadcast_opt": {
        "args": [
            {
                "name": "rval"
            }
        ]
    },
    "arange": {
        "args": [
            {
                "name": "start"
            },
            {
                "default": "None",
                "name": "stop"
            },
            {
                "default": "1",
                "name": "step"
            },
            {
                "default": "None",
                "name": "dtype"
            }
        ]
    },
    "arccos": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "arccos_inplace": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "arccosh": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "arccosh_inplace": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "arcsin": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "arcsin_inplace": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "arcsinh": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "arcsinh_inplace": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "arctan": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "arctan2": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "b"
            }
        ]
    },
    "arctan2_inplace": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "b"
            }
        ]
    },
    "arctan_inplace": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "arctanh": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "arctanh_inplace": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "argmax": {
        "args": [
            {
                "default": "None",
                "name": "axis"
            },
            {
                "default": "False",
                "name": "keepdims"
            }
        ]
    },
    "argmin": {
        "args": [
            {
                "default": "None",
                "name": "axis"
            },
            {
                "default": "False",
                "name": "keepdims"
            }
        ]
    },
    "argsort": {
        "args": [
            {
                "default": "-1",
                "name": "axis"
            },
            {
                "default": "'quicksort'",
                "name": "kind"
            },
            {
                "default": "None",
                "name": "order"
            }
        ]
    },
    "as_C_string_const": {
        "args": [
            {
                "name": "s"
            }
        ]
    },
    "as_cuda_array": {
        "args": [
            {
                "name": "obj"
            }
        ]
    },
    "as_cuda_ndarray_variable": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "as_cuda_or_tensor_variable": {
        "args": [
            {
                "name": "x"
            },
            {
                "default": "None",
                "name": "name"
            },
            {
                "default": "None",
                "name": "ndim"
            }
        ]
    },
    "as_destructive": {
        "args": []
    },
    "as_gpuarray": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "as_gpuarray_variable": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "as_index_variable": {
        "args": [
            {
                "name": "idx"
            }
        ]
    },
    "as_int_none_variable": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "as_op": {
        "args": [
            {
                "name": "itypes"
            },
            {
                "name": "otypes"
            },
            {
                "default": "None",
                "name": "infer_shape"
            }
        ]
    },
    "as_scalar": {
        "args": [
            {
                "name": "x"
            },
            {
                "default": "None",
                "name": "name"
            }
        ]
    },
    "as_sparse_or_tensor_variable": {
        "args": [
            {
                "name": "x"
            },
            {
                "default": "None",
                "name": "name"
            }
        ]
    },
    "as_sparse_variable": {
        "args": [
            {
                "name": "x"
            },
            {
                "default": "None",
                "name": "name"
            }
        ]
    },
    "as_string": {
        "args": [
            {
                "name": "i"
            },
            {
                "name": "o"
            },
            {
                "name": ""
            }
        ]
    },
    "as_tensor_variable": {
        "args": [
            {
                "name": "data"
            }
        ]
    },
    "assign": {
        "args": [
            {
                "name": "condition"
            },
            {
                "name": "printer"
            }
        ]
    },
    "astype": {
        "args": [
            {
                "name": "dtype"
            }
        ]
    },
    "atexit.register": {
        "args": [
            {
                "name": "atexit_print_ault_profile_mode"
            }
        ]
    },
    "atexit_print_ault_profile_mode": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "attach_feature": {
        "args": [
            {
                "name": "feature"
            }
        ]
    },
    "attach_updater": {
        "args": [
            {
                "name": "fgraph"
            },
            {
                "name": "importer"
            },
            {
                "name": "pruner"
            },
            {
                "default": "None",
                "name": "chin"
            }
        ]
    },
    "attempt_distribution": {
        "args": [
            {
                "name": "factor"
            },
            {
                "name": "num"
            },
            {
                "name": "denum"
            },
            {
                "name": "out_type"
            }
        ]
    },
    "ault = Default": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "ault when calling theano.shared": {
        "args": [
            {
                "name": "value) then users must really go out of their"
            }
        ]
    },
    "ault: PyErr_SetString": {
        "args": [
            {
                "name": "PyExc_ValueError"
            },
            {
                "name": ""
            }
        ]
    },
    "ault_args = Subtensor.ault_helper_c_code_args": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "ault_blas_ldflags": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "ault_compiledirname": {
        "args": [
            {
                "name": ""
            },
            {
                "name": ""
            }
        ]
    },
    "ault_cuda_root": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "ault_helper_c_code_args": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "ault_infer_shape": {
        "args": [
            {
                "name": "node"
            },
            {
                "name": "i_shapes"
            }
        ]
    },
    "ault_lines = get_lines": {
        "args": [
            {
                "name": "\"%s -E -v -\" % theano.config.cxx"
            }
        ]
    },
    "ault_make_thunk = [get_unbound_function": {
        "args": [
            {
                "name": "theano.gof.Op.make_thunk)"
            },
            {
                "name": ""
            }
        ]
    },
    "ault_openmp = GCC_compiler.try_compile_tmp": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "ault_output": {
        "args": []
    },
    "aults = [None] * len": {
        "args": [
            {
                "name": "self.inputs"
            }
        ]
    },
    "aults = [getattr": {
        "args": [
            {
                "name": "input"
            },
            {
                "name": "'value'"
            },
            {
                "name": "None) for input in inputs]"
            }
        ]
    },
    "autoname: Bool ": {
        "args": [
            {
                "name": "ault: True"
            }
        ]
    },
    "axis_grad = grad_unined": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "axis_grad = theano.gradient.grad_unined": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "b": {
        "args": [
            {
                "name": "s"
            }
        ]
    },
    "bartlett": {
        "args": [
            {
                "name": "M"
            }
        ]
    },
    "basecompiledir_ls": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "basecompiledir_purge": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "basic_multinomialtest": {
        "args": [
            {
                "name": "f"
            },
            {
                "name": "steps"
            },
            {
                "name": "sample_size"
            },
            {
                "name": "target_pvals"
            },
            {
                "name": ""
            }
        ]
    },
    "basictest": {
        "args": [
            {
                "name": "f"
            },
            {
                "name": "steps"
            },
            {
                "name": "sample_size"
            },
            {
                "default": "\"\"",
                "name": "prefix"
            },
            {
                "default": "False",
                "name": "allow_01"
            },
            {
                "default": "None",
                "name": "inputs"
            },
            {
                "name": ""
            }
        ]
    },
    "batched_dot": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "y"
            }
        ]
    },
    "batched_tensordot": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "y"
            },
            {
                "default": "2",
                "name": "axes"
            }
        ]
    },
    "belongs_to_set": {
        "args": [
            {
                "name": "node"
            },
            {
                "name": "set_nodes"
            }
        ]
    },
    "binary_crossentropy": {
        "args": [
            {
                "name": "output"
            },
            {
                "name": "target"
            }
        ]
    },
    "bincount": {
        "args": [
            {
                "name": "x"
            },
            {
                "default": "None",
                "name": "weights"
            },
            {
                "default": "None",
                "name": "minlength"
            }
        ]
    },
    "binomial": {
        "args": [
            {
                "default": "None",
                "name": "size"
            },
            {
                "default": "1",
                "name": "n"
            },
            {
                "default": "0.5",
                "name": "p"
            },
            {
                "default": "None",
                "name": "ndim"
            },
            {
                "default": "'int64'",
                "name": "dtype"
            },
            {
                "name": ""
            }
        ]
    },
    "blas_header_text": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "blas_header_version": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "body": {
        "args": [
            {
                "name": "mode"
            },
            {
                "name": "gpu"
            }
        ]
    },
    "booltype": {
        "args": [
            {
                "name": "s"
            }
        ]
    },
    "borrow: Bool ": {
        "args": [
            {
                "name": "ault: take the same value as mutable"
            }
        ]
    },
    "bound": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "bptrs": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "broadcast_like": {
        "args": [
            {
                "name": "value"
            },
            {
                "name": "template"
            },
            {
                "name": "fgraph"
            },
            {
                "default": "None",
                "name": "dtype"
            }
        ]
    },
    "bsr_matrix": {
        "args": [
            {
                "default": "None",
                "name": "name"
            },
            {
                "default": "None",
                "name": "dtype"
            }
        ]
    },
    "build": {
        "args": []
    },
    "build_gemm_call": {
        "args": []
    },
    "build_gemm_version": {
        "args": []
    },
    "build_graph": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "by ault). Disabling may make compilation slightly faster ": {
        "args": [
            {
                "name": "but is not"
            }
        ]
    },
    "c": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "b"
            }
        ]
    },
    "c_cleanup": {
        "args": [
            {
                "name": "name"
            },
            {
                "name": "sub"
            }
        ]
    },
    "c_cleanup_code_struct": {
        "args": [
            {
                "name": "node"
            },
            {
                "name": "name"
            }
        ]
    },
    "c_code": {
        "args": [
            {
                "name": "node"
            },
            {
                "name": "nodename"
            },
            {
                "name": "inp"
            },
            {
                "name": "out"
            },
            {
                "name": "sub"
            }
        ]
    },
    "c_code_cache_version": {
        "args": []
    },
    "c_code_cache_version_": {
        "args": []
    },
    "c_code_cache_version_apply": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "c_code_cleanup": {
        "args": [
            {
                "name": "node"
            },
            {
                "name": "name"
            },
            {
                "name": "inputs"
            },
            {
                "name": "outputs"
            },
            {
                "name": "sub"
            }
        ]
    },
    "c_code_contiguous": {
        "args": [
            {
                "name": "node"
            },
            {
                "name": "name"
            },
            {
                "name": "inp"
            },
            {
                "name": "out"
            },
            {
                "name": "sub"
            }
        ]
    },
    "c_code_contiguous_disabled": {
        "args": [
            {
                "name": "node"
            },
            {
                "name": "name"
            },
            {
                "name": "inp"
            },
            {
                "name": "out"
            },
            {
                "name": "sub"
            }
        ]
    },
    "c_code_contiguous_raw": {
        "args": [
            {
                "name": "dtype"
            },
            {
                "name": "n"
            },
            {
                "name": "i"
            },
            {
                "name": "o"
            }
        ]
    },
    "c_code_helper": {
        "args": [
            {
                "name": "bottom"
            },
            {
                "name": "weights"
            },
            {
                "name": ""
            }
        ]
    },
    "c_code_reduce_001": {
        "args": [
            {
                "name": "sio"
            },
            {
                "name": "node"
            },
            {
                "name": "name"
            },
            {
                "name": "x"
            },
            {
                "name": "z"
            },
            {
                "name": "fail"
            }
        ]
    },
    "c_code_reduce_0011": {
        "args": [
            {
                "name": "sio"
            },
            {
                "name": "node"
            },
            {
                "name": "name"
            },
            {
                "name": "x"
            },
            {
                "name": "z"
            },
            {
                "name": "fail"
            }
        ]
    },
    "c_code_reduce_01": {
        "args": [
            {
                "name": "sio"
            },
            {
                "name": "node"
            },
            {
                "name": "name"
            },
            {
                "name": "x"
            },
            {
                "name": "z"
            },
            {
                "name": "fail"
            }
        ]
    },
    "c_code_reduce_010": {
        "args": [
            {
                "name": "sio"
            },
            {
                "name": "node"
            },
            {
                "name": "name"
            },
            {
                "name": "x"
            },
            {
                "name": "z"
            },
            {
                "name": "fail"
            }
        ]
    },
    "c_code_reduce_0101": {
        "args": [
            {
                "name": "sio"
            },
            {
                "name": "node"
            },
            {
                "name": "name"
            },
            {
                "name": "x"
            },
            {
                "name": "z"
            },
            {
                "name": "fail"
            }
        ]
    },
    "c_code_reduce_011": {
        "args": [
            {
                "name": "sio"
            },
            {
                "name": "node"
            },
            {
                "name": "name"
            },
            {
                "name": "x"
            },
            {
                "name": "z"
            },
            {
                "name": "fail"
            }
        ]
    },
    "c_code_reduce_0111": {
        "args": [
            {
                "name": "sio"
            },
            {
                "name": "node"
            },
            {
                "name": "name"
            },
            {
                "name": "x"
            },
            {
                "name": "z"
            },
            {
                "name": "fail"
            }
        ]
    },
    "c_code_reduce_01X": {
        "args": [
            {
                "name": "sio"
            },
            {
                "name": "node"
            },
            {
                "name": "name"
            },
            {
                "name": "x"
            },
            {
                "name": "z"
            },
            {
                "name": "fail"
            },
            {
                "name": "N"
            }
        ]
    },
    "c_code_reduce_1": {
        "args": [
            {
                "name": "sio"
            },
            {
                "name": "node"
            },
            {
                "name": "name"
            },
            {
                "name": "x"
            },
            {
                "name": "z"
            },
            {
                "name": "fail"
            }
        ]
    },
    "c_code_reduce_10": {
        "args": [
            {
                "name": "sio"
            },
            {
                "name": "node"
            },
            {
                "name": "name"
            },
            {
                "name": "x"
            },
            {
                "name": "z"
            },
            {
                "name": "fail"
            }
        ]
    },
    "c_code_reduce_100": {
        "args": [
            {
                "name": "sio"
            },
            {
                "name": "node"
            },
            {
                "name": "name"
            },
            {
                "name": "x"
            },
            {
                "name": "z"
            },
            {
                "name": "fail"
            }
        ]
    },
    "c_code_reduce_1011": {
        "args": [
            {
                "name": "sio"
            },
            {
                "name": "node"
            },
            {
                "name": "name"
            },
            {
                "name": "x"
            },
            {
                "name": "z"
            },
            {
                "name": "fail"
            }
        ]
    },
    "c_code_reduce_11": {
        "args": [
            {
                "name": "sio"
            },
            {
                "name": "node"
            },
            {
                "name": "name"
            },
            {
                "name": "x"
            },
            {
                "name": "z"
            },
            {
                "name": "fail"
            }
        ]
    },
    "c_code_reduce_110": {
        "args": [
            {
                "name": "sio"
            },
            {
                "name": "node"
            },
            {
                "name": "name"
            },
            {
                "name": "x"
            },
            {
                "name": "z"
            },
            {
                "name": "fail"
            }
        ]
    },
    "c_code_reduce_111": {
        "args": [
            {
                "name": "sio"
            },
            {
                "name": "node"
            },
            {
                "name": "name"
            },
            {
                "name": "x"
            },
            {
                "name": "z"
            },
            {
                "name": "fail"
            }
        ]
    },
    "c_code_reduce_1111": {
        "args": [
            {
                "name": "sio"
            },
            {
                "name": "node"
            },
            {
                "name": "name"
            },
            {
                "name": "x"
            },
            {
                "name": "z"
            },
            {
                "name": "fail"
            }
        ]
    },
    "c_code_reduce_ccontig": {
        "args": [
            {
                "name": "sio"
            },
            {
                "name": "node"
            },
            {
                "name": "name"
            },
            {
                "name": "x"
            },
            {
                "name": "z"
            },
            {
                "name": "fail"
            }
        ]
    },
    "c_code_template": {
        "args": [
            {
                "name": "dtype"
            }
        ]
    },
    "c_compile_args": {
        "args": []
    },
    "c_compiler": {
        "args": []
    },
    "c_declare": {
        "args": [
            {
                "name": "name"
            },
            {
                "name": "sub"
            },
            {
                "default": "True",
                "name": "check_input"
            }
        ]
    },
    "c_extract": {
        "args": [
            {
                "name": "name"
            },
            {
                "name": "sub"
            },
            {
                "default": "True",
                "name": "check_input"
            },
            {
                "name": ""
            }
        ]
    },
    "c_extract_out": {
        "args": [
            {
                "name": "name"
            },
            {
                "name": "sub"
            },
            {
                "default": "True",
                "name": "check_input"
            },
            {
                "default": "True",
                "name": "check_broadcast"
            }
        ]
    },
    "c_header_dirs": {
        "args": []
    },
    "c_headers": {
        "args": []
    },
    "c_init": {
        "args": [
            {
                "name": "name"
            },
            {
                "name": "sub"
            }
        ]
    },
    "c_init_code": {
        "args": []
    },
    "c_init_code_apply": {
        "args": [
            {
                "name": "node"
            },
            {
                "name": "name"
            }
        ]
    },
    "c_init_code_struct": {
        "args": [
            {
                "name": "node"
            },
            {
                "name": "name"
            },
            {
                "name": "sub"
            }
        ]
    },
    "c_is_simple": {
        "args": []
    },
    "c_lib_dirs": {
        "args": []
    },
    "c_libraries": {
        "args": []
    },
    "c_literal": {
        "args": [
            {
                "name": "data"
            }
        ]
    },
    "c_no_compile_args": {
        "args": []
    },
    "c_set_tensor4d": {
        "args": [
            {
                "name": "var"
            },
            {
                "name": "desc"
            },
            {
                "name": "err"
            },
            {
                "name": "fail"
            }
        ]
    },
    "c_src_callkernel": {
        "args": [
            {
                "name": "node"
            },
            {
                "name": "nodename"
            }
        ]
    },
    "c_src_kernel": {
        "args": [
            {
                "name": "node"
            },
            {
                "name": "nodename"
            },
            {
                "name": "nd"
            }
        ]
    },
    "c_src_kernel_Ccontiguous": {
        "args": [
            {
                "name": "node"
            },
            {
                "name": "nodename"
            }
        ]
    },
    "c_src_kernel_tiling": {
        "args": [
            {
                "name": "node"
            },
            {
                "name": "nodename"
            }
        ]
    },
    "c_src_kernel_tiling_less_registers": {
        "args": [
            {
                "name": "node"
            },
            {
                "name": "nodename"
            }
        ]
    },
    "c_support_code": {
        "args": [
            {
                "name": "cls"
            }
        ]
    },
    "c_support_code_apply": {
        "args": [
            {
                "name": "node"
            },
            {
                "name": "nodename"
            }
        ]
    },
    "c_support_code_struct": {
        "args": [
            {
                "name": "node"
            },
            {
                "name": "name"
            }
        ]
    },
    "c_sync": {
        "args": [
            {
                "name": "name"
            },
            {
                "name": "sub"
            }
        ]
    },
    "cache_version": {
        "args": []
    },
    "calc_limit": {
        "args": [
            {
                "name": "d"
            }
        ]
    },
    "call ": {
        "args": [
            {
                "name": "or expression instance) whereas `Op` is theano's version of a function inition."
            }
        ]
    },
    "call_subprocess_Popen": {
        "args": [
            {
                "name": "command"
            },
            {
                "name": "**params"
            }
        ]
    },
    "callable": {
        "args": [
            {
                "name": "obj"
            }
        ]
    },
    "canonical_arguments": {
        "args": [
            {
                "name": "sequences"
            },
            {
                "name": ""
            }
        ]
    },
    "cast": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "dtype"
            }
        ]
    },
    "categorical_crossentropy": {
        "args": [
            {
                "name": "coding_dist"
            },
            {
                "name": "true_dist"
            }
        ]
    },
    "cblas_header_text": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "ceil": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "ceil_inplace": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "ceil_intdiv": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "b"
            }
        ]
    },
    "change_input": {
        "args": [
            {
                "name": "node"
            },
            {
                "name": "i"
            },
            {
                "name": "new_r"
            },
            {
                "default": "None",
                "name": "reason"
            }
        ]
    },
    "char_from_number": {
        "args": [
            {
                "name": "number"
            }
        ]
    },
    "check": {
        "args": [
            {
                "name": "out"
            }
        ]
    },
    "check_chain": {
        "args": [
            {
                "name": "r"
            },
            {
                "name": "*chain"
            }
        ]
    },
    "check_deterministic": {
        "args": [
            {
                "name": "iterable"
            }
        ]
    },
    "check_equal": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "y"
            }
        ]
    },
    "check_equal_numpy": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "y"
            }
        ]
    },
    "check_for_x_over_absX": {
        "args": [
            {
                "name": "numerators"
            },
            {
                "name": "denominators"
            }
        ]
    },
    "check_force_gemv_init": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "check_input": {
        "args": [
            {
                "name": "inputs"
            }
        ]
    },
    "check_integrity": {
        "args": []
    },
    "check_key": {
        "args": [
            {
                "name": "key"
            },
            {
                "name": "key_pkl"
            }
        ]
    },
    "check_types": {
        "args": [
            {
                "name": "i"
            },
            {
                "name": "node"
            },
            {
                "name": "*thunks"
            }
        ]
    },
    "check_variable": {
        "args": [
            {
                "name": "r"
            }
        ]
    },
    "check_variable_norec": {
        "args": [
            {
                "name": "new_r"
            }
        ]
    },
    "chi2sf": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "k"
            }
        ]
    },
    "chi2sf_inplace": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "k"
            }
        ]
    },
    "chk": {
        "args": [
            {
                "name": "pstate"
            },
            {
                "name": "r"
            }
        ]
    },
    "choice": {
        "args": [
            {
                "default": "None",
                "name": "size"
            },
            {
                "default": "2",
                "name": "a"
            },
            {
                "default": "True",
                "name": "replace"
            },
            {
                "default": "None",
                "name": "p"
            },
            {
                "default": "None",
                "name": "ndim"
            },
            {
                "name": ""
            }
        ]
    },
    "choice_helper": {
        "args": [
            {
                "name": "random_state"
            },
            {
                "name": "a"
            },
            {
                "name": "replace"
            },
            {
                "name": "p"
            },
            {
                "name": "size"
            }
        ]
    },
    "choose": {
        "args": [
            {
                "name": "continuous"
            },
            {
                "name": "derivative"
            }
        ]
    },
    "class aultdict": {
        "args": [
            {
                "name": "dict"
            }
        ]
    },
    "class memodict": {
        "args": [
            {
                "name": "aultdict"
            }
        ]
    },
    "class_callcount": {
        "args": []
    },
    "class_impl": {
        "args": []
    },
    "class_nodes": {
        "args": []
    },
    "class_time": {
        "args": []
    },
    "clean": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "cleanup": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "clear": {
        "args": []
    },
    "clear_base_files": {
        "args": []
    },
    "clear_old": {
        "args": [
            {
                "default": "None",
                "name": "age_thresh_del"
            },
            {
                "default": "False",
                "name": "delete_if_problem"
            }
        ]
    },
    "clear_storage": {
        "args": []
    },
    "clear_unversioned": {
        "args": [
            {
                "default": "None",
                "name": "min_age"
            }
        ]
    },
    "clients": {
        "args": [
            {
                "name": "r"
            }
        ]
    },
    "clip": {
        "args": [
            {
                "name": "a_min"
            },
            {
                "name": "a_max"
            }
        ]
    },
    "clone": {
        "args": [
            {
                "default": "None",
                "name": "dtype"
            },
            {
                "default": "None",
                "name": "broadcastable"
            }
        ]
    },
    "clone_a": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "copy_inputs_over"
            }
        ]
    },
    "clone_assign": {
        "args": [
            {
                "name": "condition"
            },
            {
                "name": "printer"
            }
        ]
    },
    "clone_d.setault": {
        "args": [
            {
                "name": "old_o"
            },
            {
                "name": "new_o"
            }
        ]
    },
    "clone_get_equiv": {
        "args": [
            {
                "name": "inputs"
            },
            {
                "name": "outputs"
            },
            {
                "name": ""
            }
        ]
    },
    "clone_inputs": {
        "args": [
            {
                "name": "i"
            }
        ]
    },
    "clone_v_get_shared_updates": {
        "args": [
            {
                "name": "v"
            },
            {
                "name": "copy_inputs_over"
            }
        ]
    },
    "clone_with_new_inputs": {
        "args": [
            {
                "name": "inputs"
            },
            {
                "default": "True",
                "name": "strict"
            }
        ]
    },
    "cmd.extend": {
        "args": [
            {
                "name": "['-Xcompiler'"
            },
            {
                "name": "'-unined"
            },
            {
                "name": "dynamic_lookup']"
            }
        ]
    },
    "cmodule_key": {
        "args": []
    },
    "cmodule_key_": {
        "args": [
            {
                "name": "fgraph"
            },
            {
                "name": "no_recycling"
            },
            {
                "default": "None",
                "name": "compile_args"
            },
            {
                "name": ""
            }
        ]
    },
    "cmp": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "b"
            }
        ]
    },
    "code": {
        "args": []
    },
    "code_gen": {
        "args": []
    },
    "code_version": {
        "args": [
            {
                "name": "version"
            }
        ]
    },
    "col": {
        "args": [
            {
                "default": "None",
                "name": "name"
            },
            {
                "default": "None",
                "name": "dtype"
            }
        ]
    },
    "col_scale": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "s"
            }
        ]
    },
    "collapse": {
        "args": [
            {
                "name": "idxs"
            },
            {
                "name": "cond"
            }
        ]
    },
    "collect_callbacks": {
        "args": [
            {
                "name": "name"
            },
            {
                "name": "*args"
            }
        ]
    },
    "combinations": {
        "args": [
            {
                "name": "iterable"
            },
            {
                "name": "r"
            }
        ]
    },
    "comm_guard": {
        "args": [
            {
                "name": "type1"
            },
            {
                "name": "type2"
            }
        ]
    },
    "compare_variables": {
        "args": [
            {
                "name": "i"
            },
            {
                "name": "node"
            },
            {
                "name": "*thunks"
            }
        ]
    },
    "comparison": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "y"
            }
        ]
    },
    "compile": {
        "args": [
            {
                "name": "smod"
            },
            {
                "default": "None",
                "name": "initial_values"
            }
        ]
    },
    "compile_args": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "compile_cmodule": {
        "args": [
            {
                "default": "None",
                "name": "location"
            }
        ]
    },
    "compile_cutils": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "compile_cutils_code": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "compile_fn": {
        "args": [
            {
                "name": "f"
            },
            {
                "name": "path_locals"
            },
            {
                "name": "common_inputs"
            }
        ]
    },
    "compile_str": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "compiledir_purge": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "complete": {
        "args": [
            {
                "name": "inputs"
            }
        ]
    },
    "complex": {
        "args": [
            {
                "name": "real"
            },
            {
                "name": "imag"
            }
        ]
    },
    "complex_from_polar": {
        "args": [
            {
                "name": "abs"
            },
            {
                "name": "angle"
            }
        ]
    },
    "compose_impl": {
        "args": [
            {
                "name": "r"
            }
        ]
    },
    "compress_outs": {
        "args": [
            {
                "name": "op"
            },
            {
                "name": "not_required"
            },
            {
                "name": "inputs"
            }
        ]
    },
    "computeH": {
        "args": [
            {
                "name": "V"
            },
            {
                "name": "W"
            },
            {
                "name": "b"
            },
            {
                "name": "d"
            }
        ]
    },
    "computeR": {
        "args": [
            {
                "name": "W"
            },
            {
                "name": "b"
            },
            {
                "name": "d"
            },
            {
                "name": "H"
            },
            {
                "default": "None",
                "name": "Rshape"
            }
        ]
    },
    "compute_gc_dependencies": {
        "args": [
            {
                "name": "variables"
            }
        ]
    },
    "compute_gradient": {
        "args": [
            {
                "name": "y"
            },
            {
                "name": "g_y"
            }
        ]
    },
    "compute_map = aultdict": {
        "args": [
            {
                "name": "lambda: [0]"
            }
        ]
    },
    "compute_mul": {
        "args": [
            {
                "name": "tree"
            }
        ]
    },
    "compute_total_times": {
        "args": []
    },
    "concatenate": {
        "args": [
            {
                "name": "tensor_list"
            },
            {
                "default": "0",
                "name": "axis"
            }
        ]
    },
    "cond_make_inplace": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "cond_merge_ifs_false": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "cond_merge_ifs_true": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "cond_merge_random_op": {
        "args": [
            {
                "name": "main_node"
            }
        ]
    },
    "cond_remove_identical": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "config_files_from_theanorc": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "conj": {
        "args": []
    },
    "conj_inplace": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "connection_pattern": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "consider_constant": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "consistent_": {
        "args": [
            {
                "name": "fgraph"
            }
        ]
    },
    "constant": {
        "args": [
            {
                "name": "x"
            },
            {
                "default": "None",
                "name": "name"
            }
        ]
    },
    "constant_folding": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "constant_or_value": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "rtype"
            },
            {
                "default": "None",
                "name": "name"
            },
            {
                "default": "None",
                "name": "ndim"
            },
            {
                "default": "None",
                "name": "dtype"
            }
        ]
    },
    "construct": {
        "args": [
            {
                "name": "symbol"
            }
        ]
    },
    "construct_slices": {
        "args": [
            {
                "name": "curlen"
            }
        ]
    },
    "constructor": {
        "args": [
            {
                "name": "f"
            }
        ]
    },
    "conv": {
        "args": [
            {
                "name": "val"
            }
        ]
    },
    "conv2d": {
        "args": [
            {
                "name": "input"
            },
            {
                "name": "filters"
            },
            {
                "default": "None",
                "name": "image_shape"
            },
            {
                "default": "None",
                "name": "filter_shape"
            },
            {
                "name": ""
            }
        ]
    },
    "conv2d_fft": {
        "args": [
            {
                "name": "input"
            },
            {
                "name": "filters"
            },
            {
                "default": "None",
                "name": "image_shape"
            },
            {
                "default": "None",
                "name": "filter_shape"
            },
            {
                "name": ""
            }
        ]
    },
    "conv3D": {
        "args": [
            {
                "name": "V"
            },
            {
                "name": "W"
            },
            {
                "name": "b"
            },
            {
                "name": "d"
            }
        ]
    },
    "conv3d": {
        "args": [
            {
                "name": "signals"
            },
            {
                "name": "filters"
            },
            {
                "name": ""
            }
        ]
    },
    "conv3d_fft": {
        "args": [
            {
                "name": "input"
            },
            {
                "name": "filters"
            },
            {
                "default": "None",
                "name": "image_shape"
            },
            {
                "default": "None",
                "name": "filter_shape"
            },
            {
                "name": ""
            }
        ]
    },
    "conv_csc": {
        "args": [
            {
                "name": "ind"
            },
            {
                "name": "indptr"
            },
            {
                "name": "shp"
            }
        ]
    },
    "conv_csr": {
        "args": [
            {
                "name": "ind"
            },
            {
                "name": "indptr"
            },
            {
                "name": "shp"
            }
        ]
    },
    "conv_op": {
        "args": [
            {
                "name": "*inputs"
            }
        ]
    },
    "convert": {
        "args": [
            {
                "name": "entry"
            }
        ]
    },
    "convert_function_input": {
        "args": [
            {
                "name": "input"
            }
        ]
    },
    "convert_variable": {
        "args": [
            {
                "name": "var"
            }
        ]
    },
    "copy": {
        "args": []
    },
    "copy_into": {
        "args": [
            {
                "name": "view"
            },
            {
                "name": "source"
            }
        ]
    },
    "copy_of_x": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "copy_shape": {
        "args": [
            {
                "name": "nd_out"
            }
        ]
    },
    "cos": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "cos_inplace": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "cosh": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "cosh_inplace": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "count": {
        "args": [
            {
                "name": "elem"
            }
        ]
    },
    "count_minimum_peak": {
        "args": [
            {
                "name": "node_list"
            },
            {
                "name": "fgraph"
            },
            {
                "name": "nodes_mem"
            }
        ]
    },
    "count_running_memory": {
        "args": [
            {
                "name": "order"
            },
            {
                "name": "fgraph"
            },
            {
                "name": "nodes_mem"
            }
        ]
    },
    "cpuCount": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "cpy = self.maker.create": {
        "args": [
            {
                "name": "aults"
            },
            {
                "default": "True",
                "name": "trustme"
            }
        ]
    },
    "create": {
        "args": [
            {
                "default": "None",
                "name": "input_storage"
            },
            {
                "default": "False",
                "name": "trustme"
            }
        ]
    },
    "create_iadd_node": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "crossentropy_softmax_1hot": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "y_idx"
            },
            {
                "name": "**kwargs"
            }
        ]
    },
    "crossentropy_softmax_1hot_with_bias": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "b"
            },
            {
                "name": "y_idx"
            },
            {
                "name": "**kwargs"
            }
        ]
    },
    "crossentropy_softmax_max_and_argmax_1hot": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "y_idx"
            },
            {
                "name": "**kwargs"
            }
        ]
    },
    "crossentropy_softmax_max_and_argmax_1hot_with_bias": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "b"
            },
            {
                "name": "y_idx"
            },
            {
                "name": "**kwargs"
            }
        ]
    },
    "crossentropy_to_crossentropy_with_softmax": {
        "args": [
            {
                "name": "fgraph"
            }
        ]
    },
    "crossentropy_to_crossentropy_with_softmax_with_bias": {
        "args": [
            {
                "name": "fgraph"
            }
        ]
    },
    "csc_matrix": {
        "args": [
            {
                "default": "None",
                "name": "name"
            },
            {
                "default": "None",
                "name": "dtype"
            }
        ]
    },
    "csm_data": {
        "args": [
            {
                "name": "csm"
            }
        ]
    },
    "csm_indices": {
        "args": [
            {
                "name": "csm"
            }
        ]
    },
    "csm_indptr": {
        "args": [
            {
                "name": "csm"
            }
        ]
    },
    "csm_shape": {
        "args": [
            {
                "name": "csm"
            }
        ]
    },
    "csr_matrix": {
        "args": [
            {
                "default": "None",
                "name": "name"
            },
            {
                "default": "None",
                "name": "dtype"
            }
        ]
    },
    "cthunk_factory": {
        "args": [
            {
                "name": "error_storage"
            },
            {
                "name": "in_storage"
            },
            {
                "name": "out_storage"
            },
            {
                "name": ""
            }
        ]
    },
    "ctx = gpuarray.get_ault_context": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "cuda_shared_constructor": {
        "args": [
            {
                "name": "value"
            },
            {
                "default": "None",
                "name": "name"
            },
            {
                "default": "False",
                "name": "strict"
            },
            {
                "name": ""
            }
        ]
    },
    "cudamat_to_cudandarray": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "cudandarray_to_cudamat": {
        "args": [
            {
                "name": "x"
            },
            {
                "default": "False",
                "name": "copyif"
            }
        ]
    },
    "cudandarray_to_garray": {
        "args": [
            {
                "name": "x"
            },
            {
                "default": "False",
                "name": "copyif"
            }
        ]
    },
    "cumprod": {
        "args": [
            {
                "default": "None",
                "name": "axis"
            }
        ]
    },
    "cumsum": {
        "args": [
            {
                "default": "None",
                "name": "axis"
            }
        ]
    },
    "cxxflags.extend": {
        "args": [
            {
                "name": "['-unined'"
            },
            {
                "name": "'dynamic_lookup']"
            }
        ]
    },
    "d": {
        "args": [
            {
                "name": "kerns"
            }
        ]
    },
    "dCdd = grad_unined": {
        "args": [
            {
                "name": "2"
            },
            {
                "name": "d"
            }
        ]
    },
    "dLdd = grad_unined": {
        "args": [
            {
                "name": "1"
            },
            {
                "name": "d"
            }
        ]
    },
    "dct.setault": {
        "args": [
            {
                "name": "'global_fn'"
            },
            {
                "name": "_print_fn"
            }
        ]
    },
    "dct_matrix": {
        "args": [
            {
                "name": "rows"
            },
            {
                "name": "cols"
            },
            {
                "default": "True",
                "name": "unitary"
            }
        ]
    },
    "debug_assert": {
        "args": [
            {
                "name": "condition"
            },
            {
                "default": "None",
                "name": "msg"
            }
        ]
    },
    "debug_counter": {
        "args": [
            {
                "name": "name"
            },
            {
                "default": "1",
                "name": "every"
            }
        ]
    },
    "debug_error_message": {
        "args": [
            {
                "name": "msg"
            }
        ]
    },
    "debugprint": {
        "args": [
            {
                "name": "r"
            },
            {
                "default": "''",
                "name": "prefix"
            },
            {
                "default": "-1",
                "name": "depth"
            },
            {
                "default": "None",
                "name": "done"
            },
            {
                "default": "False",
                "name": "print_type"
            },
            {
                "name": ""
            }
        ]
    },
    "decl_limits": {
        "args": [
            {
                "name": "nd"
            }
        ]
    },
    "decl_ptrs": {
        "args": [
            {
                "name": "d"
            },
            {
                "name": "offset"
            }
        ]
    },
    "decl_shared_stride": {
        "args": [
            {
                "name": "nin"
            },
            {
                "name": "nout"
            },
            {
                "name": "nd"
            }
        ]
    },
    "decl_view": {
        "args": []
    },
    "deco": {
        "args": [
            {
                "name": "f"
            }
        ]
    },
    "decorator": {
        "args": [
            {
                "name": "f"
            }
        ]
    },
    "deg2rad": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "deg2rad_inplace": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "delete_keys_from": {
        "args": [
            {
                "name": "entry_from_key"
            },
            {
                "default": "True",
                "name": "do_manual_check"
            }
        ]
    },
    "dependence": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "b"
            }
        ]
    },
    "deprecated": {
        "args": [
            {
                "name": "filename"
            },
            {
                "default": "''",
                "name": "msg"
            }
        ]
    },
    "deps": {
        "args": [
            {
                "name": "obj"
            }
        ]
    },
    "describe": {
        "args": [
            {
                "name": "r"
            }
        ]
    },
    "detach_updater": {
        "args": [
            {
                "name": "fgraph"
            },
            {
                "name": "u"
            }
        ]
    },
    "detect_macos_sdot_bug": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "detect_nan": {
        "args": [
            {
                "name": "i"
            },
            {
                "name": "node"
            },
            {
                "name": "fn"
            }
        ]
    },
    "diag": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "diagonal": {
        "args": [
            {
                "default": "0",
                "name": "offset"
            },
            {
                "default": "0",
                "name": "axis1"
            },
            {
                "default": "1",
                "name": "axis2"
            }
        ]
    },
    "diff": {
        "args": [
            {
                "name": "x"
            },
            {
                "default": "1",
                "name": "n"
            },
            {
                "default": "-1",
                "name": "axis"
            }
        ]
    },
    "diff_dict": {
        "args": [
            {
                "name": "a_time"
            },
            {
                "name": "b_time_"
            }
        ]
    },
    "difference": {
        "args": [
            {
                "name": "seq1"
            },
            {
                "name": "seq2"
            }
        ]
    },
    "difference_update": {
        "args": [
            {
                "name": "s"
            }
        ]
    },
    "dimshuffle": {
        "args": [
            {
                "name": "*pattern"
            }
        ]
    },
    "dimshuffle_as_view": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "dimshuffled_alloc": {
        "args": [
            {
                "name": "i"
            }
        ]
    },
    "discard": {
        "args": [
            {
                "name": "key"
            }
        ]
    },
    "disconnected_grad": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "disown": {
        "args": []
    },
    "distribute": {
        "args": [
            {
                "name": "value"
            },
            {
                "name": "indices"
            },
            {
                "name": "containers"
            }
        ]
    },
    "distribute_greedy": {
        "args": [
            {
                "name": "pos_pairs"
            },
            {
                "name": "neg_pairs"
            },
            {
                "name": "num"
            },
            {
                "name": "denum"
            },
            {
                "name": ""
            }
        ]
    },
    "div_proxy": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "y"
            }
        ]
    },
    "divmod": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "y"
            }
        ]
    },
    "dlimport": {
        "args": [
            {
                "name": "fullpath"
            },
            {
                "default": "None",
                "name": "suffix"
            }
        ]
    },
    "dlimport_workdir": {
        "args": [
            {
                "name": "basedir"
            }
        ]
    },
    "dnn_available": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "do = getattr": {
        "args": [
            {
                "name": "self.op"
            },
            {
                "name": "'ault_output'"
            },
            {
                "name": "None"
            }
        ]
    },
    "do_constant_folding": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "do_type_checking": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "doc=\"alias for self.ault_output": {
        "args": [
            {
                "name": "\""
            }
        ]
    },
    "done in float64 ": {
        "args": [
            {
                "name": "acc_dtype would be float64 by ault)"
            },
            {
                "name": ""
            }
        ]
    },
    "dot": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "y"
            }
        ]
    },
    "dtype_in_elemwise_supported": {
        "args": [
            {
                "name": "op"
            }
        ]
    },
    "dtype_specs": {
        "args": []
    },
    "dummy": {
        "args": [
            {
                "name": "*dargs"
            },
            {
                "name": "**dkwargs"
            }
        ]
    },
    "e_arity": {
        "args": [
            {
                "name": "takes"
            },
            {
                "name": "got"
            }
        ]
    },
    "eigh": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": "'L'",
                "name": "UPLO"
            }
        ]
    },
    "eigvalsh": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "b"
            },
            {
                "default": "True",
                "name": "lower"
            }
        ]
    },
    "elements": {
        "args": []
    },
    "elemwise_max_input_fct": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "encompasses_broadcastable": {
        "args": [
            {
                "name": "b1"
            },
            {
                "name": "b2"
            }
        ]
    },
    "end_while": {
        "args": [
            {
                "name": "d"
            }
        ]
    },
    "ensure_allocated": {
        "args": [
            {
                "name": "storage"
            },
            {
                "name": "shape"
            },
            {
                "name": "dtype"
            }
        ]
    },
    "ensure_float": {
        "args": [
            {
                "name": "val"
            },
            {
                "name": "ault"
            },
            {
                "name": "name"
            }
        ]
    },
    "ensure_init_r": {
        "args": [
            {
                "name": "r"
            }
        ]
    },
    "eq": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "b"
            }
        ]
    },
    "eq_inplace": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "b"
            }
        ]
    },
    "equal_computations": {
        "args": [
            {
                "name": "xs"
            },
            {
                "name": "ys"
            },
            {
                "default": "None",
                "name": "in_xs"
            },
            {
                "default": "None",
                "name": "in_ys"
            }
        ]
    },
    "equal_slices": {
        "args": [
            {
                "name": "s1"
            },
            {
                "name": "s2"
            }
        ]
    },
    "equals": {
        "args": [
            {
                "name": "other"
            }
        ]
    },
    "erf": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "erf_inplace": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "erfc": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "erfc_inplace": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "erfcinv": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "erfinv": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "eval": {
        "args": [
            {
                "name": "i"
            },
            {
                "name": "node"
            },
            {
                "name": "fn"
            }
        ]
    },
    "evalTime": {
        "args": [
            {
                "name": "f"
            },
            {
                "name": "v"
            },
            {
                "default": "False",
                "name": "script"
            },
            {
                "default": "1000",
                "name": "loops"
            }
        ]
    },
    "eval_uniform": {
        "args": [
            {
                "name": "size"
            },
            {
                "name": "nstreams"
            }
        ]
    },
    "excluding": {
        "args": [
            {
                "name": "*tags"
            }
        ]
    },
    "exec_": {
        "args": [
            {
                "name": "_code_"
            },
            {
                "default": "None",
                "name": "_globs_"
            },
            {
                "default": "None",
                "name": "_locs_"
            }
        ]
    },
    "execute": {
        "args": [
            {
                "name": "node"
            },
            {
                "name": "args"
            },
            {
                "name": "outs"
            }
        ]
    },
    "execute_callbacks": {
        "args": [
            {
                "name": "name"
            },
            {
                "name": "*args"
            },
            {
                "name": "**kwargs"
            }
        ]
    },
    "execution by ault.  ": {
        "args": [
            {
                "name": "NOT IMPLEMENTED YET"
            },
            {
                "name": "BUT IS IN TRAC"
            }
        ]
    },
    "existing lock ": {
        "args": [
            {
                "name": "ault config 'compile.timeout'"
            }
        ]
    },
    "exp": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "exp2": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "exp2_inplace": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "exp_float32_op": {
        "args": [
            {
                "name": "op"
            }
        ]
    },
    "exp_inplace": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "expand": {
        "args": [
            {
                "name": "tensor_var"
            },
            {
                "name": "size"
            }
        ]
    },
    "expand_in": {
        "args": [
            {
                "name": "sinput"
            },
            {
                "name": "rinputs"
            }
        ]
    },
    "expm1": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "expm1_inplace": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "extend": {
        "args": [
            {
                "name": "toAppend"
            }
        ]
    },
    "extra symbols ined in `CLinker` sub symbols ": {
        "args": [
            {
                "name": "such as 'fail')."
            }
        ]
    },
    "extract_constant": {
        "args": [
            {
                "name": "x"
            },
            {
                "default": "True",
                "name": "elemwise"
            }
        ]
    },
    "eye": {
        "args": [
            {
                "name": "n"
            },
            {
                "default": "None",
                "name": "m"
            },
            {
                "default": "0",
                "name": "k"
            },
            {
                "default": "None",
                "name": "dtype"
            }
        ]
    },
    "f": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "f2": {
        "args": [
            {
                "name": "f"
            },
            {
                "name": "names"
            }
        ]
    },
    "failure_code": {
        "args": [
            {
                "name": "sub"
            }
        ]
    },
    "failure_code_init": {
        "args": [
            {
                "name": "sub"
            }
        ]
    },
    "fake_shared": {
        "args": [
            {
                "name": "var"
            }
        ]
    },
    "fancy_sum": {
        "args": [
            {
                "name": "terms"
            }
        ]
    },
    "fast_inplace_check": {
        "args": [
            {
                "name": "inputs"
            }
        ]
    },
    "fct_memory.setault": {
        "args": [
            {
                "name": "node.fgraph"
            },
            {
                "name": "{}"
            }
        ]
    },
    "fct_memory[node.fgraph].setault": {
        "args": [
            {
                "name": "node"
            },
            {
                "name": "[]"
            }
        ]
    },
    "fct_shapes.setault": {
        "args": [
            {
                "name": "node.fgraph"
            },
            {
                "name": "{}"
            }
        ]
    },
    "fct_shapes[node.fgraph].setault": {
        "args": [
            {
                "name": "node"
            },
            {
                "name": "[]"
            }
        ]
    },
    "fetch_val_for_key": {
        "args": [
            {
                "name": "key"
            }
        ]
    },
    "fetch_variables": {
        "args": []
    },
    "ff_2p134": {
        "args": [
            {
                "name": "rstate"
            }
        ]
    },
    "ff_2p72": {
        "args": [
            {
                "name": "rstate"
            }
        ]
    },
    "fgraph_updated_vars": {
        "args": [
            {
                "name": "fgraph"
            },
            {
                "name": "expanded_inputs"
            }
        ]
    },
    "fill": {
        "args": [
            {
                "name": "value"
            }
        ]
    },
    "fill_chain": {
        "args": [
            {
                "name": "v"
            }
        ]
    },
    "fill_diagonal": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "val"
            }
        ]
    },
    "fill_diagonal_offset": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "val"
            },
            {
                "name": "offset"
            }
        ]
    },
    "fill_node_total_time": {
        "args": [
            {
                "name": "node"
            },
            {
                "name": "total_times"
            }
        ]
    },
    "filter": {
        "args": [
            {
                "name": "data"
            },
            {
                "default": "False",
                "name": "strict"
            },
            {
                "default": "None",
                "name": "allow_downcast"
            }
        ]
    },
    "filter_base_compiledir": {
        "args": [
            {
                "name": "path"
            }
        ]
    },
    "filter_compiledir": {
        "args": [
            {
                "name": "path"
            }
        ]
    },
    "filter_inplace": {
        "args": [
            {
                "name": "data"
            },
            {
                "name": "old_data"
            },
            {
                "default": "False",
                "name": "strict"
            },
            {
                "name": ""
            }
        ]
    },
    "filter_nvcc_flags": {
        "args": [
            {
                "name": "s"
            }
        ]
    },
    "filter_output": {
        "args": [
            {
                "name": "fd_in"
            }
        ]
    },
    "filter_variable": {
        "args": [
            {
                "name": "other"
            }
        ]
    },
    "filter_vm_lazy": {
        "args": [
            {
                "name": "val"
            }
        ]
    },
    "find_cuda_root": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "find_node": {
        "args": [
            {
                "name": "v"
            },
            {
                "name": "cls"
            }
        ]
    },
    "find_path_to": {
        "args": [
            {
                "name": "output_var"
            },
            {
                "name": "input_var"
            }
        ]
    },
    "find_same_graph_in_db": {
        "args": [
            {
                "name": "graph_db"
            }
        ]
    },
    "find_task": {
        "args": [
            {
                "name": "failure_code"
            }
        ]
    },
    "find_up": {
        "args": [
            {
                "name": "l_node"
            },
            {
                "name": "f_node"
            }
        ]
    },
    "fiter_variable": {
        "args": [
            {
                "name": "other"
            }
        ]
    },
    "fix_idx": {
        "args": [
            {
                "name": "idx"
            }
        ]
    },
    "flatbody": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "flatnonzero": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "flatten": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "float32_shared_constructor": {
        "args": [
            {
                "name": "value"
            },
            {
                "default": "None",
                "name": "name"
            },
            {
                "default": "False",
                "name": "strict"
            },
            {
                "name": ""
            }
        ]
    },
    "floatX_convert": {
        "args": [
            {
                "name": "s"
            }
        ]
    },
    "float_out": {
        "args": [
            {
                "name": "*types"
            }
        ]
    },
    "float_out_nocomplex": {
        "args": [
            {
                "name": "*types"
            }
        ]
    },
    "floor": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "floor_div": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "b"
            }
        ]
    },
    "floor_inplace": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "flops": {
        "args": [
            {
                "name": "inputs"
            },
            {
                "name": "outputs"
            }
        ]
    },
    "fn_name": {
        "args": [
            {
                "name": "..."
            }
        ]
    },
    "foldl": {
        "args": [
            {
                "name": "fn"
            },
            {
                "name": ""
            }
        ]
    },
    "foldr": {
        "args": [
            {
                "name": "fn"
            },
            {
                "name": ""
            }
        ]
    },
    "force_unlock": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "forced_replace": {
        "args": [
            {
                "name": "out"
            },
            {
                "name": "x"
            },
            {
                "name": "y"
            }
        ]
    },
    "format": {
        "args": [
            {
                "name": "var"
            },
            {
                "name": "as_var"
            }
        ]
    },
    "format_as": {
        "args": [
            {
                "name": "use_list"
            },
            {
                "name": "use_tuple"
            },
            {
                "name": "outputs"
            }
        ]
    },
    "format_c_function_args": {
        "args": [
            {
                "name": "inp"
            },
            {
                "name": "out"
            }
        ]
    },
    "free": {
        "args": []
    },
    "from_return_values": {
        "args": [
            {
                "name": "values"
            }
        ]
    },
    "fromkeys": {
        "args": [
            {
                "name": "cls"
            },
            {
                "name": "iterable"
            },
            {
                "default": "None",
                "name": "v"
            }
        ]
    },
    "function": {
        "args": [
            {
                "name": "inputs"
            },
            {
                "default": "None",
                "name": "outputs"
            },
            {
                "default": "None",
                "name": "mode"
            },
            {
                "default": "None",
                "name": "updates"
            },
            {
                "default": "None",
                "name": "givens"
            },
            {
                "name": ""
            }
        ]
    },
    "function_dump": {
        "args": [
            {
                "name": "filename"
            },
            {
                "name": "inputs"
            },
            {
                "default": "None",
                "name": "outputs"
            },
            {
                "default": "None",
                "name": "mode"
            },
            {
                "default": "None",
                "name": "updates"
            },
            {
                "name": ""
            }
        ]
    },
    "function_maker": {
        "args": [
            {
                "name": "i"
            },
            {
                "name": "o"
            },
            {
                "name": "m"
            },
            {
                "name": "*args"
            },
            {
                "name": "**kwargs"
            }
        ]
    },
    "g": {
        "args": [
            {
                "name": "*args"
            },
            {
                "name": "**kwargs"
            }
        ]
    },
    "gamma": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "gamma_inplace": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "gammaln": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "gammaln_inplace": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "garray_to_cudandarray": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "gc_helper": {
        "args": [
            {
                "name": "node_list"
            }
        ]
    },
    "gcc_llvm": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "gcc_version": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "ge": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "b"
            }
        ]
    },
    "ge_inplace": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "b"
            }
        ]
    },
    "gemv_c_code": {
        "args": [
            {
                "name": "aa"
            },
            {
                "name": "xx"
            },
            {
                "name": "yy"
            },
            {
                "name": "zz"
            },
            {
                "name": "alpha"
            },
            {
                "name": "beta"
            },
            {
                "name": "destructive"
            },
            {
                "name": "fail"
            },
            {
                "name": ""
            }
        ]
    },
    "gen": {
        "args": [
            {
                "name": "op"
            },
            {
                "name": "*args"
            },
            {
                "name": "**kwargs"
            }
        ]
    },
    "gen_conv_code_unroll_batch_kern": {
        "args": [
            {
                "name": "d"
            },
            {
                "default": "1",
                "name": "unroll_bsize"
            },
            {
                "default": "1",
                "name": "unroll_ksize"
            }
        ]
    },
    "gen_graph": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "general_toposort": {
        "args": [
            {
                "name": "r_out"
            },
            {
                "name": "deps"
            },
            {
                "default": "False",
                "name": "debug_print"
            }
        ]
    },
    "generate_kernel": {
        "args": [
            {
                "name": "node"
            },
            {
                "name": "odtype"
            },
            {
                "name": "redux"
            }
        ]
    },
    "generic_constructor": {
        "args": [
            {
                "name": "value"
            },
            {
                "default": "None",
                "name": "name"
            },
            {
                "default": "False",
                "name": "strict"
            },
            {
                "default": "None",
                "name": "allow_downcast"
            }
        ]
    },
    "ger_c_code": {
        "args": [
            {
                "name": "A"
            },
            {
                "name": "a"
            },
            {
                "name": "x"
            },
            {
                "name": "y"
            },
            {
                "name": "Z"
            },
            {
                "name": "destructive"
            },
            {
                "name": "fail"
            }
        ]
    },
    "get": {
        "args": [
            {
                "name": "item"
            },
            {
                "name": "ault"
            }
        ]
    },
    "getInplElemwiseAdditionKernel": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "b"
            }
        ]
    },
    "get_all_basic_scalar": {
        "args": [
            {
                "name": "composite_op"
            }
        ]
    },
    "get_ault_mode": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "get_auth_token": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "get_c_cleanup": {
        "args": [
            {
                "name": "r"
            },
            {
                "name": "name"
            },
            {
                "name": "sub"
            }
        ]
    },
    "get_c_declare": {
        "args": [
            {
                "name": "r"
            },
            {
                "name": "name"
            },
            {
                "name": "sub"
            }
        ]
    },
    "get_c_extract": {
        "args": [
            {
                "name": "r"
            },
            {
                "name": "name"
            },
            {
                "name": "sub"
            }
        ]
    },
    "get_c_extract_out": {
        "args": [
            {
                "name": "r"
            },
            {
                "name": "name"
            },
            {
                "name": "sub"
            }
        ]
    },
    "get_c_init": {
        "args": [
            {
                "name": "r"
            },
            {
                "name": "name"
            },
            {
                "name": "sub"
            }
        ]
    },
    "get_c_macros": {
        "args": [
            {
                "name": "node"
            },
            {
                "name": "name"
            },
            {
                "default": "None",
                "name": "check_input"
            }
        ]
    },
    "get_c_sync": {
        "args": [
            {
                "name": "r"
            },
            {
                "name": "name"
            },
            {
                "name": "sub"
            }
        ]
    },
    "get_canonical_form_slice": {
        "args": [
            {
                "name": "theslice"
            },
            {
                "name": "length"
            }
        ]
    },
    "get_clients": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "get_clients2": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "get_config_md5": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "get_constant": {
        "args": [
            {
                "name": "v"
            }
        ]
    },
    "get_constant_idx": {
        "args": [
            {
                "name": "inputs"
            },
            {
                "default": "False",
                "name": "allow_partial"
            },
            {
                "name": ""
            }
        ]
    },
    "get_debug_values": {
        "args": [
            {
                "name": "*args"
            }
        ]
    },
    "get_depth": {
        "args": []
    },
    "get_destroyers_of": {
        "args": [
            {
                "name": "r"
            }
        ]
    },
    "get_device_type_sizes": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "get_diagonal_subtensor_view": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "i0"
            },
            {
                "name": "i1"
            }
        ]
    },
    "get_dtype": {
        "args": [
            {
                "name": "t"
            }
        ]
    },
    "get_dynamic_module": {
        "args": []
    },
    "get_entry": {
        "args": []
    },
    "get_flags": {
        "args": [
            {
                "name": "*types"
            }
        ]
    },
    "get_function_aults = operator.attrgetter": {
        "args": [
            {
                "name": "_func_aults"
            }
        ]
    },
    "get_gcc_shared_library_arg": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "get_helper_c_code_args": {
        "args": []
    },
    "get_home_dir": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "get_id_str": {
        "args": [
            {
                "name": "obj"
            }
        ]
    },
    "get_idx_list": {
        "args": [
            {
                "name": "inputs"
            },
            {
                "name": "idx_list"
            },
            {
                "default": "False",
                "name": "get_count"
            }
        ]
    },
    "get_impact": {
        "args": [
            {
                "name": "root"
            },
            {
                "name": "view_o"
            }
        ]
    },
    "get_info_on_inputs": {
        "args": [
            {
                "name": "named_inputs"
            },
            {
                "name": "n_unnamed_inputs"
            }
        ]
    },
    "get_init_tasks": {
        "args": []
    },
    "get_inp_idx": {
        "args": [
            {
                "name": "iidx"
            }
        ]
    },
    "get_input_pos": {
        "args": [
            {
                "name": "output_index"
            }
        ]
    },
    "get_io_macros": {
        "args": [
            {
                "name": "inputs"
            },
            {
                "name": "outputs"
            }
        ]
    },
    "get_kernel_cache": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "get_lib_extension": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "get_lines": {
        "args": [
            {
                "name": "cmd"
            },
            {
                "default": "True",
                "name": "parse"
            }
        ]
    },
    "get_linker_optimizer": {
        "args": [
            {
                "name": "linker"
            },
            {
                "name": "optimizer"
            }
        ]
    },
    "get_local_optimizers": {
        "args": []
    },
    "get_lock": {
        "args": [
            {
                "default": "None",
                "name": "lock_dir"
            },
            {
                "name": "**kw"
            }
        ]
    },
    "get_loop_strides": {
        "args": [
            {
                "name": "loop_order"
            },
            {
                "name": "i"
            }
        ]
    },
    "get_mode": {
        "args": [
            {
                "name": "gpu"
            }
        ]
    },
    "get_module_cache": {
        "args": [
            {
                "name": "dirname"
            },
            {
                "default": "None",
                "name": "init_args"
            }
        ]
    },
    "get_module_hash": {
        "args": [
            {
                "name": "src_code"
            },
            {
                "name": "key"
            }
        ]
    },
    "get_nothing": {
        "args": [
            {
                "name": "r"
            },
            {
                "name": "name"
            },
            {
                "name": "sub"
            }
        ]
    },
    "get_num_denum": {
        "args": [
            {
                "name": "input"
            }
        ]
    },
    "get_op_params": {
        "args": []
    },
    "get_out_idx": {
        "args": [
            {
                "name": "iidx"
            }
        ]
    },
    "get_out_shape": {
        "args": [
            {
                "name": "ishape"
            },
            {
                "name": "kshape"
            },
            {
                "name": "border_mode"
            },
            {
                "name": "subsample"
            }
        ]
    },
    "get_outer_iidx_from_inner_iidx_seq": {
        "args": []
    },
    "get_outer_ndim": {
        "args": [
            {
                "name": "var"
            },
            {
                "name": "scan_args"
            }
        ]
    },
    "get_output_pos": {
        "args": [
            {
                "name": "input_index"
            }
        ]
    },
    "get_output_slice_idx": {
        "args": [
            {
                "name": "output_index"
            }
        ]
    },
    "get_parents": {
        "args": []
    },
    "get_path": {
        "args": [
            {
                "name": "cls"
            },
            {
                "name": "f"
            }
        ]
    },
    "get_persistent_module_cache": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "get_plural": {
        "args": [
            {
                "name": "n"
            }
        ]
    },
    "get_pull_request": {
        "args": [
            {
                "name": "project"
            },
            {
                "name": "num"
            },
            {
                "default": "3",
                "name": "github_api"
            }
        ]
    },
    "get_pulls_list": {
        "args": [
            {
                "name": "project"
            },
            {
                "default": "3",
                "name": "github_api"
            }
        ]
    },
    "get_safe_part": {
        "args": [
            {
                "name": "key"
            }
        ]
    },
    "get_scalar_constant_value": {
        "args": []
    },
    "get_scalar_ops": {
        "args": [
            {
                "name": "s"
            }
        ]
    },
    "get_scalar_type": {
        "args": [
            {
                "name": "dtype"
            }
        ]
    },
    "get_shape_info": {
        "args": [
            {
                "name": "obj"
            }
        ]
    },
    "get_size": {
        "args": [
            {
                "name": "shape_info"
            }
        ]
    },
    "get_src_code": {
        "args": []
    },
    "get_str_list_logical_scalar": {
        "args": [
            {
                "name": "node"
            },
            {
                "default": "'ii_i%i_value'",
                "name": "value_str"
            },
            {
                "name": ""
            }
        ]
    },
    "get_sub_macros": {
        "args": [
            {
                "name": "sub"
            }
        ]
    },
    "get_substream_rstates": {
        "args": [
            {
                "name": "n_streams"
            },
            {
                "default": "True",
                "name": "inc_rstate"
            }
        ]
    },
    "get_tag": {
        "args": []
    },
    "get_test_value": {
        "args": [
            {
                "name": "v"
            }
        ]
    },
    "get_unbound_function": {
        "args": [
            {
                "name": "unbound"
            }
        ]
    },
    "get_updates_and_outputs": {
        "args": [
            {
                "name": "ls"
            }
        ]
    },
    "get_value": {
        "args": [
            {
                "default": "False",
                "name": "borrow"
            },
            {
                "default": "False",
                "name": "return_internal_type"
            }
        ]
    },
    "get_vector_length": {
        "args": [
            {
                "name": "v"
            }
        ]
    },
    "getroot": {
        "args": [
            {
                "name": "r"
            },
            {
                "name": "view_i"
            }
        ]
    },
    "getter": {
        "args": [
            {
                "name": "s"
            }
        ]
    },
    "give_variables_names": {
        "args": [
            {
                "name": "variables"
            }
        ]
    },
    "global_process_count.setault": {
        "args": [
            {
                "name": "opt"
            },
            {
                "name": "0"
            }
        ]
    },
    "gpuScanOptimization": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "gpu_images2neibs": {
        "args": [
            {
                "name": "ten4"
            },
            {
                "name": "neib_shape"
            },
            {
                "default": "None",
                "name": "neib_step"
            },
            {
                "default": "'valid'",
                "name": "mode"
            }
        ]
    },
    "gpu_kernels": {
        "args": [
            {
                "name": "node"
            },
            {
                "name": "name"
            }
        ]
    },
    "gpu_print_wrapper": {
        "args": [
            {
                "name": "op"
            },
            {
                "name": "cnda"
            }
        ]
    },
    "gpu_reconstruct_graph": {
        "args": [
            {
                "name": "inputs"
            },
            {
                "name": "outputs"
            },
            {
                "default": "None",
                "name": "tag"
            }
        ]
    },
    "gpu_safe_new": {
        "args": [
            {
                "name": "x"
            },
            {
                "default": "''",
                "name": "tag"
            }
        ]
    },
    "gpuarray_shared_constructor": {
        "args": [
            {
                "name": "value"
            },
            {
                "default": "None",
                "name": "name"
            },
            {
                "default": "False",
                "name": "strict"
            },
            {
                "name": ""
            }
        ]
    },
    "grab_cpu_scalar": {
        "args": [
            {
                "name": "v"
            },
            {
                "name": "nd"
            }
        ]
    },
    "grad": {
        "args": [
            {
                "name": "inp"
            },
            {
                "name": "grads"
            }
        ]
    },
    "grad_clip": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "lower_bound"
            },
            {
                "name": "upper_bound"
            }
        ]
    },
    "grad_not_implemented": {
        "args": [
            {
                "name": "op"
            },
            {
                "name": "x_pos"
            },
            {
                "name": "x"
            },
            {
                "default": "\"\"",
                "name": "comment"
            }
        ]
    },
    "grad_unined": {
        "args": [
            {
                "name": "4"
            },
            {
                "name": "outputIdx"
            },
            {
                "name": ""
            }
        ]
    },
    "graph_merge_softmax_with_crossentropy_softmax": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "gt": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "b"
            }
        ]
    },
    "gt_inplace": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "b"
            }
        ]
    },
    "guess_n_streams": {
        "args": [
            {
                "name": "size"
            },
            {
                "default": "False",
                "name": "warn"
            }
        ]
    },
    "handle_disconnected": {
        "args": [
            {
                "name": "var"
            }
        ]
    },
    "handle_int": {
        "args": [
            {
                "name": "v"
            }
        ]
    },
    "hard_sigmoid": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "has_all_shape": {
        "args": [
            {
                "name": "imshp"
            },
            {
                "name": "kshp"
            },
            {
                "default": "1",
                "name": "nkern"
            },
            {
                "default": "1",
                "name": "bsize"
            }
        ]
    },
    "has_duplicates": {
        "args": [
            {
                "name": "l"
            }
        ]
    },
    "hash_from_code": {
        "args": [
            {
                "name": "msg"
            }
        ]
    },
    "hash_from_dict": {
        "args": [
            {
                "name": "d"
            }
        ]
    },
    "hash_from_file": {
        "args": [
            {
                "name": "file_path"
            }
        ]
    },
    "hash_from_ndarray": {
        "args": [
            {
                "name": "data"
            }
        ]
    },
    "hash_from_sparse": {
        "args": [
            {
                "name": "data"
            }
        ]
    },
    "hash_listsDictsTuples": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "hashtype": {
        "args": []
    },
    "header_dirs": {
        "args": []
    },
    "headers": {
        "args": []
    },
    "helper": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "y"
            }
        ]
    },
    "helper_c_code": {
        "args": [
            {
                "name": "node"
            },
            {
                "name": "name"
            },
            {
                "name": "inputs"
            },
            {
                "name": "outputs"
            },
            {
                "name": "sub"
            },
            {
                "name": "idx_list"
            },
            {
                "name": "view_ndim"
            },
            {
                "name": ""
            }
        ]
    },
    "helper_c_code_cache_version": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "hessian": {
        "args": [
            {
                "name": "cost"
            },
            {
                "name": "wrt"
            },
            {
                "default": "None",
                "name": "consider_constant"
            },
            {
                "name": ""
            }
        ]
    },
    "hex_digest": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "hints": {
        "args": [
            {
                "name": "variable"
            }
        ]
    },
    "hist": {
        "args": [
            {
                "name": "coll"
            }
        ]
    },
    "horizontal_stack": {
        "args": [
            {
                "name": "*args"
            }
        ]
    },
    "hstack": {
        "args": [
            {
                "name": "blocks"
            },
            {
                "default": "None",
                "name": "format"
            },
            {
                "default": "None",
                "name": "dtype"
            }
        ]
    },
    "icc_module_compile_str": {
        "args": [
            {
                "name": "*args"
            }
        ]
    },
    "identity_like": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "if ": {
        "args": [
            {
                "name": "no_ault_updates is False or"
            }
        ]
    },
    "if callable": {
        "args": [
            {
                "name": "self.ault"
            }
        ]
    },
    "if get_unbound_function": {
        "args": [
            {
                "name": "node.op.make_thunk) not in ault_make_thunk"
            }
        ]
    },
    "if hasattr": {
        "args": [
            {
                "name": "v"
            },
            {
                "name": "'ault_update'"
            }
        ]
    },
    "if isinstance": {
        "args": [
            {
                "name": "ault"
            },
            {
                "name": "gof.Container"
            }
        ]
    },
    "if len": {
        "args": [
            {
                "name": "ault_lines) < 1"
            }
        ]
    },
    "if not callable": {
        "args": [
            {
                "name": "configparam.ault"
            }
        ]
    },
    "if not isinstance": {
        "args": [
            {
                "name": "no_ault_updates"
            },
            {
                "name": "bool)\\"
            }
        ]
    },
    "if pygpu.get_ault_context": {
        "args": [
            {
                "default": " \"cuda\"",
                "name": ".kind !"
            }
        ]
    },
    "if trustme or isinstance": {
        "args": [
            {
                "name": "__ault"
            },
            {
                "name": "gof.Container"
            }
        ]
    },
    "if x.fullname == 'linker'][0].ault.startswith": {
        "args": [
            {
                "name": "'cvm')"
            },
            {
                "name": "e"
            }
        ]
    },
    "ifelse": {
        "args": [
            {
                "name": "condition"
            },
            {
                "name": "then_branch"
            },
            {
                "name": "else_branch"
            },
            {
                "default": "None",
                "name": "name"
            }
        ]
    },
    "ifelse_lift_single_if_through_acceptable_ops": {
        "args": [
            {
                "name": "main_node"
            }
        ]
    },
    "imag": {
        "args": [
            {
                "name": "z"
            }
        ]
    },
    "images2neibs": {
        "args": [
            {
                "name": "ten4"
            },
            {
                "name": "neib_shape"
            },
            {
                "default": "None",
                "name": "neib_step"
            },
            {
                "default": "'valid'",
                "name": "mode"
            }
        ]
    },
    "impl": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "implicit: Bool ": {
        "args": [
            {
                "name": "ault: False"
            }
        ]
    },
    "implicit: Bool or None ": {
        "args": [
            {
                "name": "ault: None"
            }
        ]
    },
    "importer": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "in2out": {
        "args": [
            {
                "name": "*local_opts"
            },
            {
                "name": "**kwargs"
            }
        ]
    },
    "in_shape": {
        "args": [
            {
                "name": "output_shape"
            }
        ]
    },
    "in_sig": {
        "args": [
            {
                "name": "i"
            },
            {
                "name": "topological_pos"
            },
            {
                "name": "i_idx"
            }
        ]
    },
    "in_var": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "k"
            }
        ]
    },
    "inc_input_pos": {
        "args": [
            {
                "name": "amt"
            }
        ]
    },
    "inc_ptrs": {
        "args": [
            {
                "name": "d"
            },
            {
                "name": "amt"
            }
        ]
    },
    "inc_rstate": {
        "args": []
    },
    "inc_spec_pos": {
        "args": [
            {
                "name": "amt"
            }
        ]
    },
    "inc_subtensor": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "y"
            },
            {
                "default": "False",
                "name": "inplace"
            },
            {
                "default": "False",
                "name": "set_instead_of_inc"
            },
            {
                "name": ""
            }
        ]
    },
    "include": {
        "args": [
            {
                "name": "symbolic_module"
            },
            {
                "default": "None",
                "name": "name"
            }
        ]
    },
    "include_line": {
        "args": [
            {
                "name": "line"
            }
        ]
    },
    "including": {
        "args": [
            {
                "name": "*tags"
            }
        ]
    },
    "ind": {
        "args": [
            {
                "name": "elem"
            }
        ]
    },
    "ine_macros, un_macros = self.get_c_macros": {
        "args": [
            {
                "name": "node"
            },
            {
                "name": "name"
            },
            {
                "name": ""
            }
        ]
    },
    "ine_macros.append": {
        "args": [
            {
                "name": "\"#ine FAIL %s\" %"
            }
        ]
    },
    "infer_reuse_pattern": {
        "args": [
            {
                "name": "fgraph"
            },
            {
                "name": "outputs_to_disown"
            }
        ]
    },
    "infer_shape": {
        "args": [
            {
                "name": "node"
            },
            {
                "name": "shape"
            }
        ]
    },
    "info": {
        "args": [
            {
                "name": "*msg"
            }
        ]
    },
    "init_c_code": {
        "args": []
    },
    "init_code": {
        "args": []
    },
    "init_entry": {
        "args": [
            {
                "name": "entry"
            },
            {
                "default": "0",
                "name": "depth"
            }
        ]
    },
    "init_fgraph": {
        "args": []
    },
    "init_name": {
        "args": []
    },
    "init_py_impls": {
        "args": []
    },
    "init_r": {
        "args": [
            {
                "name": "r"
            }
        ]
    },
    "inline_reduce": {
        "args": [
            {
                "name": "N"
            },
            {
                "name": "buf"
            },
            {
                "name": "pos"
            },
            {
                "name": "count"
            },
            {
                "name": "manner_fn"
            }
        ]
    },
    "inline_reduce_fixed_shared": {
        "args": [
            {
                "name": "N"
            },
            {
                "name": "buf"
            },
            {
                "name": "x"
            },
            {
                "name": "stride_x"
            },
            {
                "name": "pos"
            },
            {
                "name": "count"
            },
            {
                "name": ""
            }
        ]
    },
    "inline_reduce_fixed_shared_max": {
        "args": [
            {
                "name": "N"
            },
            {
                "name": "buf"
            },
            {
                "name": "x"
            },
            {
                "name": "stride_x"
            },
            {
                "name": "pos"
            },
            {
                "name": "count"
            },
            {
                "name": ""
            }
        ]
    },
    "inline_reduce_max": {
        "args": [
            {
                "name": "N"
            },
            {
                "name": "buf"
            },
            {
                "name": "pos"
            },
            {
                "name": "count"
            }
        ]
    },
    "inline_reduce_min": {
        "args": [
            {
                "name": "N"
            },
            {
                "name": "buf"
            },
            {
                "name": "pos"
            },
            {
                "name": "count"
            }
        ]
    },
    "inline_reduce_prod": {
        "args": [
            {
                "name": "N"
            },
            {
                "name": "buf"
            },
            {
                "name": "pos"
            },
            {
                "name": "count"
            }
        ]
    },
    "inline_reduce_sum": {
        "args": [
            {
                "name": "N"
            },
            {
                "name": "buf"
            },
            {
                "name": "pos"
            },
            {
                "name": "count"
            }
        ]
    },
    "inline_softmax": {
        "args": [
            {
                "name": "N"
            },
            {
                "name": "buf"
            },
            {
                "name": "buf2"
            },
            {
                "name": "threadPos"
            },
            {
                "name": "threadCount"
            }
        ]
    },
    "inline_softmax_fixed_shared": {
        "args": [
            {
                "name": "N"
            },
            {
                "name": "buf"
            },
            {
                "name": "x"
            },
            {
                "name": "stride_x"
            },
            {
                "name": ""
            }
        ]
    },
    "inner graph with the new cvm linker ": {
        "args": [
            {
                "name": "with ault modes"
            },
            {
                "name": ""
            }
        ]
    },
    "inner_function": {
        "args": [
            {
                "name": "*args"
            }
        ]
    },
    "inner_mitmot": {
        "args": [
            {
                "name": "list_inputs"
            }
        ]
    },
    "inner_mitmot_outs": {
        "args": [
            {
                "name": "list_outputs"
            }
        ]
    },
    "inner_mitsot": {
        "args": [
            {
                "name": "list_inputs"
            }
        ]
    },
    "inner_mitsot_outs": {
        "args": [
            {
                "name": "list_outputs"
            }
        ]
    },
    "inner_nitsot_outs": {
        "args": [
            {
                "name": "list_outputs"
            }
        ]
    },
    "inner_non_seqs": {
        "args": [
            {
                "name": "list_inputs"
            }
        ]
    },
    "inner_seqs": {
        "args": [
            {
                "name": "list_inputs"
            }
        ]
    },
    "inner_shared": {
        "args": [
            {
                "name": "list_inputs"
            }
        ]
    },
    "inner_shared_outs": {
        "args": [
            {
                "name": "list_outputs"
            }
        ]
    },
    "inner_sitsot": {
        "args": [
            {
                "name": "list_inputs"
            }
        ]
    },
    "inner_sitsot_only_last_step_used": {
        "args": [
            {
                "name": "var"
            },
            {
                "name": "scan_args"
            }
        ]
    },
    "inner_sitsot_outs": {
        "args": [
            {
                "name": "list_outputs"
            }
        ]
    },
    "inpl_ = [": {
        "args": [
            {
                "name": "'CONV_INPLACE'"
            },
            {
                "name": "'1')]"
            }
        ]
    },
    "inplace_elemwise_optimizer": {
        "args": [
            {
                "name": "fgraph"
            }
        ]
    },
    "inplace_elemwise_optimizer_op": {
        "args": [
            {
                "name": "OP"
            }
        ]
    },
    "inplace_increment1d_slow": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "idx"
            },
            {
                "name": "y"
            }
        ]
    },
    "inplace_optimizer": {
        "args": [
            {
                "name": "f"
            }
        ]
    },
    "input_pos": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "input_storage.append": {
        "args": [
            {
                "name": "ault"
            }
        ]
    },
    "inputs": {
        "args": [
            {
                "name": "variable_list"
            },
            {
                "default": "None",
                "name": "blockers"
            }
        ]
    },
    "insert": {
        "args": [
            {
                "name": "index"
            },
            {
                "name": "toInsert"
            }
        ]
    },
    "insert_deepcopy": {
        "args": [
            {
                "name": "fgraph"
            },
            {
                "name": "wrapped_inputs"
            },
            {
                "name": "wrapped_outputs"
            }
        ]
    },
    "instantiate_code": {
        "args": [
            {
                "name": "n_args"
            }
        ]
    },
    "int2byte": {
        "args": [
            {
                "name": "i"
            }
        ]
    },
    "int_div": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "b"
            }
        ]
    },
    "int_div_inplace": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "b"
            }
        ]
    },
    "int_or_true_div": {
        "args": [
            {
                "name": "x_discrete"
            },
            {
                "name": "y_discrete"
            }
        ]
    },
    "int_out": {
        "args": [
            {
                "name": "*types"
            }
        ]
    },
    "int_out_nocomplex": {
        "args": [
            {
                "name": "*types"
            }
        ]
    },
    "intersection_update": {
        "args": [
            {
                "name": "s"
            }
        ]
    },
    "inv": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "inv_as_solve": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "inv_inplace": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "inverse_permutation": {
        "args": [
            {
                "name": "perm"
            }
        ]
    },
    "invert": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "invert_inplace": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "io_toposort": {
        "args": [
            {
                "name": "inputs"
            },
            {
                "name": "outputs"
            },
            {
                "default": "None",
                "name": "orderings"
            }
        ]
    },
    "irecv": {
        "args": [
            {
                "name": "shape"
            },
            {
                "name": "dtype"
            },
            {
                "name": "source"
            },
            {
                "name": "tag"
            }
        ]
    },
    "iround": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": "\"half_away_from_zero\"",
                "name": "mode"
            }
        ]
    },
    "isNaN_or_Inf_or_None": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "is_1pexp": {
        "args": [
            {
                "name": "t"
            }
        ]
    },
    "is_condition": {
        "args": [
            {
                "name": "elem"
            }
        ]
    },
    "is_constant_value": {
        "args": [
            {
                "name": "var"
            },
            {
                "name": "value"
            }
        ]
    },
    "is_equal": {
        "args": [
            {
                "name": "var"
            },
            {
                "name": "val"
            }
        ]
    },
    "is_exp": {
        "args": [
            {
                "name": "var"
            }
        ]
    },
    "is_hint_node": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "is_list_outputs": {
        "args": [
            {
                "name": "elem"
            }
        ]
    },
    "is_mul": {
        "args": [
            {
                "name": "var"
            }
        ]
    },
    "is_neg": {
        "args": [
            {
                "name": "var"
            }
        ]
    },
    "is_nvcc_available": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "is_outputs": {
        "args": [
            {
                "name": "elem"
            }
        ]
    },
    "is_positive": {
        "args": [
            {
                "name": "v"
            }
        ]
    },
    "is_psd": {
        "args": [
            {
                "name": "v"
            }
        ]
    },
    "is_same_entry": {
        "args": [
            {
                "name": "entry_1"
            },
            {
                "name": "entry_2"
            }
        ]
    },
    "is_same_graph": {
        "args": [
            {
                "name": "var1"
            },
            {
                "name": "var2"
            },
            {
                "default": "None",
                "name": "givens"
            },
            {
                "default": "False",
                "name": "debug"
            }
        ]
    },
    "is_same_graph_with_merge": {
        "args": [
            {
                "name": "var1"
            },
            {
                "name": "var2"
            },
            {
                "default": "None",
                "name": "givens"
            }
        ]
    },
    "is_symmetric": {
        "args": [
            {
                "name": "v"
            }
        ]
    },
    "is_updates": {
        "args": [
            {
                "name": "elem"
            }
        ]
    },
    "is_valid_bool": {
        "args": [
            {
                "name": "s"
            }
        ]
    },
    "is_valid_check_preallocated_output_param": {
        "args": [
            {
                "name": "param"
            }
        ]
    },
    "is_valid_value": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "isend": {
        "args": [
            {
                "name": "var"
            },
            {
                "name": "dest"
            },
            {
                "name": "tag"
            }
        ]
    },
    "isinf": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "isnan": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "issymbolicmethod": {
        "args": [
            {
                "name": "thing"
            }
        ]
    },
    "issymbolicmodule": {
        "args": [
            {
                "name": "thing"
            }
        ]
    },
    "item_to_var": {
        "args": [
            {
                "name": "t"
            }
        ]
    },
    "iter_over_pairs": {
        "args": [
            {
                "name": "pairs"
            }
        ]
    },
    "iteritems": {
        "args": [
            {
                "name": "d"
            }
        ]
    },
    "iterkeys": {
        "args": [
            {
                "name": "d"
            }
        ]
    },
    "itervalues": {
        "args": [
            {
                "name": "d"
            }
        ]
    },
    "jacobian": {
        "args": [
            {
                "name": "expression"
            },
            {
                "name": "wrt"
            },
            {
                "default": "None",
                "name": "consider_constant"
            },
            {
                "name": ""
            }
        ]
    },
    "jobman_job": {
        "args": [
            {
                "name": "state"
            },
            {
                "name": "channel"
            }
        ]
    },
    "join_options": {
        "args": [
            {
                "name": "init_part"
            }
        ]
    },
    "just_symbolic": {
        "args": [
            {
                "name": "dct"
            }
        ]
    },
    "key_cmp": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "b"
            }
        ]
    },
    "key_to_cmp": {
        "args": [
            {
                "name": "key"
            }
        ]
    },
    "keys": {
        "args": []
    },
    "keys.setault": {
        "args": [
            {
                "name": "key"
            },
            {
                "name": "0"
            }
        ]
    },
    "kron": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "b"
            }
        ]
    },
    "largest": {
        "args": [
            {
                "name": "*args"
            }
        ]
    },
    "last_access_time": {
        "args": [
            {
                "name": "path"
            }
        ]
    },
    "launch_Ccontiguous": {
        "args": [
            {
                "name": "nodename"
            },
            {
                "name": "scalar_op"
            },
            {
                "default": "True",
                "name": "sync"
            }
        ]
    },
    "launch_General": {
        "args": [
            {
                "name": "nodename"
            },
            {
                "name": "scalar_op"
            },
            {
                "name": "force_nd"
            },
            {
                "default": "True",
                "name": "sync"
            }
        ]
    },
    "ldflags": {
        "args": [
            {
                "default": "True",
                "name": "libs"
            },
            {
                "default": "False",
                "name": "flags"
            },
            {
                "default": "False",
                "name": "libs_dir"
            },
            {
                "default": "False",
                "name": "include_dir"
            }
        ]
    },
    "le": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "b"
            }
        ]
    },
    "le_inplace": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "b"
            }
        ]
    },
    "lib_dirs": {
        "args": []
    },
    "libraries": {
        "args": []
    },
    "limits": {
        "args": [
            {
                "name": "d"
            }
        ]
    },
    "list_code": {
        "args": [
            {
                "default": "sys.stdout",
                "name": "ofile"
            }
        ]
    },
    "list_of_nodes": {
        "args": [
            {
                "name": "inputs"
            },
            {
                "name": "outputs"
            }
        ]
    },
    "list_scalar_op": {
        "args": [
            {
                "name": "op"
            }
        ]
    },
    "load": {
        "args": [
            {
                "name": "path"
            },
            {
                "name": "dtype"
            },
            {
                "name": "broadcastable"
            },
            {
                "default": "None",
                "name": "mmap_mode"
            }
        ]
    },
    "load_back": {
        "args": [
            {
                "name": "mod"
            },
            {
                "name": "name"
            }
        ]
    },
    "load_c_code": {
        "args": []
    },
    "load_graph_db": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "load_reduce": {
        "args": []
    },
    "load_shared_variable": {
        "args": [
            {
                "name": "val"
            }
        ]
    },
    "local_0_dot_x": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_1msigmoid": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_IncSubtensor_serialize": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_abs_lift": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_abs_merge": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_add_mul_fusion": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_add_specialize": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_addsd_ccode": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_adv_sub1_adv_inc_sub1": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_advanced_indexing_crossentropy_onehot": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_advanced_indexing_crossentropy_onehot_grad": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_alloc_unary": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_argmax_pushdown": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_assert": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_bitwidth": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "local_cast_cast": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_conv3d_fft": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_conv3d_gemm": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_conv_dnn": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_conv_dnn_alternative": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_conv_fft_full": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_conv_fft_valid": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_conv_gemm": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_convgrad3d_fft": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_convgrad3d_gemm": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_convtransp3d_fft": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_convtransp3d_gemm": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_crossentropy_to_crossentropy_with_softmax_grad": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_csm_grad_c": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_csm_properties_csm": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_cut_gpu_host_gpu": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_cut_useless_reduce": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_dense_from_sparse_sparse_from_dense": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_destructive": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_det_chol": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_dimshuffle_lift": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_dimshuffle_no_inplace_at_canonicalize": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_div_switch_sink": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_div_to_inv": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_dnn_conv_alpha_merge": {
        "args": [
            {
                "name": "node"
            },
            {
                "name": "*inputs"
            }
        ]
    },
    "local_dnn_conv_inplace": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_dnn_conv_output_merge": {
        "args": [
            {
                "name": "node"
            },
            {
                "name": "*inputs"
            }
        ]
    },
    "local_dnn_convgi_inplace": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_dnn_convgw_inplace": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_dnn_convi_alpha_merge": {
        "args": [
            {
                "name": "node"
            },
            {
                "name": "*inputs"
            }
        ]
    },
    "local_dnn_convi_output_merge": {
        "args": [
            {
                "name": "node"
            },
            {
                "name": "*inputs"
            }
        ]
    },
    "local_dnn_convw_alpha_merge": {
        "args": [
            {
                "name": "node"
            },
            {
                "name": "*inputs"
            }
        ]
    },
    "local_dnn_convw_output_merge": {
        "args": [
            {
                "name": "node"
            },
            {
                "name": "*inputs"
            }
        ]
    },
    "local_dot22_to_dot22scalar": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_dot22_to_ger_or_gemv": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_dot_to_dot22": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_elemwise_alloc": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_elemwise_alloc_op": {
        "args": [
            {
                "name": "ElemwiseOP"
            },
            {
                "name": "AllocOP"
            },
            {
                "name": "DimShuffleOP"
            }
        ]
    },
    "local_elemwise_fusion_op": {
        "args": [
            {
                "name": "OP"
            },
            {
                "default": "lambda node: 1024",
                "name": "max_input_fct"
            }
        ]
    },
    "local_elemwise_sub_zeros": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_exp_over_1_plus_exp": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_fill_cut": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_fill_sink": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_fill_to_alloc": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_flatten_lift": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_fuse": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_gemm_to_gemv": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_gemm_to_ger": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_gpu_advanced_incsubtensor1": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_gpu_advanced_subtensor1": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_gpu_careduce": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_gpu_conv": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_gpu_conv3d": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_gpu_conv_grad3d": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_gpu_conv_transp3d": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_gpu_crossentorpy_softmax_1hot_with_bias_dx": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_gpu_crossentorpy_softmax_argmax_1hot_with_bias": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_gpu_dimshuffle_0": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_gpu_dot22": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_gpu_dot22scalar": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_gpu_dot_to_dot22": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_gpu_downsample_factor_max": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_gpu_downsample_factor_max_grad": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_gpu_downsample_factor_max_grad_grad": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_gpu_elemwise": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_gpu_elemwise_0": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_gpu_elemwise_1": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_gpu_elemwise_careduce": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_gpu_extract_diagonal": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_gpu_eye": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_gpu_flatten": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_gpu_gemm": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_gpu_gemv": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_gpu_ger": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_gpu_incsubtensor": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_gpu_join": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_gpu_lazy_ifelse": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_gpu_multinomial": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_gpu_print_op": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_gpu_rebroadcast": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_gpu_reshape": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_gpu_shape": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_gpu_softmax": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_gpu_softmax_with_bias": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_gpu_specifyShape_0": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_gpu_split": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_gpu_subtensor": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_gpua_advanced_incsubtensor": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_gpua_careduce": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_gpua_crossentropysoftmax1hotwithbiasdx": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_gpua_crossentropysoftmaxargmax1hotwithbias": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_gpua_dimshuffle": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_gpua_dot22": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_gpua_eye": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_gpua_gemm": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_gpua_gemv": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_gpua_ger": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_gpua_incsubtensor": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_gpua_join": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_gpua_mrg": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_gpua_shape": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_gpua_softmax": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_gpua_softmaxwithbias": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_gpua_specifyShape": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_gpua_split": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_gpua_subtensor": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_gpuaalloc": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_gpuaalloc2": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_gpuajoin_1": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_gpualloc": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_gpualloc_memset_0": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_gpuflatten": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_gpujoin_1": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_gpureshape": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_grad_clip": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_grad_log_erfc_neg": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_greedy_distributor": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_hard_sigmoid": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_incsubtensor_of_zeros": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_inplace_DiagonalSubtensor": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_inplace_addsd_ccode": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_inplace_blocksparse_gemv": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_inplace_blocksparse_outer": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_inplace_gemm": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_inplace_gemv": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_inplace_ger": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_inplace_gpuagemm": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_inplace_gpuagemv": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_inplace_gpuager": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_inplace_incsubtensor1": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_inplace_remove0": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_inplace_setsubtensor": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_inv_1_plus_exp": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_inv_canon": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_join_1": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_join_empty": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_join_make_vector": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_lift_transpose_through_dot": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_log1p": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_log_add": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_log_erfc": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_log_pow": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_log_prod_sqr": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_max_and_argmax": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_max_to_min": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_mul_s_d": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_mul_s_v": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_mul_specialize": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_mul_switch_sink": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_mul_to_sqr": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_mul_zero": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_neg_div_neg": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_neg_neg": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_neg_to_mul": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_opt": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_optimizer": {
        "args": [
            {
                "name": "tracks"
            },
            {
                "default": "False",
                "name": "inplace"
            }
        ]
    },
    "local_pool_dnn": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_pool_dnn_grad": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_pool_dnn_grad_stride": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_pool_dnn_stride": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_pow_canonicalize": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_pow_specialize": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_pow_specialize_device": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_print_as_we_go_along": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_pycuda_gpu_elemwise": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_pycuda_gpu_elemwise_kernel": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_rebroadcast_lift": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_recursive_function": {
        "args": [
            {
                "name": "list_opt"
            },
            {
                "name": "out"
            },
            {
                "name": "optimized_vars"
            },
            {
                "name": "depth"
            }
        ]
    },
    "local_reduce_broadcastable": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_reduce_join": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_remove_all_assert": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_remove_switch_const_cond": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_remove_useless_assert": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_reshape_chain": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_reshape_lift": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_sampling_dot_csr": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_scalar_reshape": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_scalar_tensor_scalar": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_scan_to_gpua": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_set_to_inc_subtensor": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_setsubtensor_of_constants": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_shape_to_shape_i": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_sigm_gest": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_sigm_times_exp": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_softmax_dnn": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_softmax_dnn_grad": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_softmax_grad": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_softmax_with_bias": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_structured_add_s_v": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_structured_dot": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_subtensor_lift": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_subtensor_make_vector": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_subtensor_merge": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_subtensor_of_alloc": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_subtensor_of_dot": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_sum_all_to_none": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_sum_alloc": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_sum_div_dimshuffle": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_sum_mul_by_scalar": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_sum_over_empty": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_sum_sum": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_tensor_scalar_tensor": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_to_gpu": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_track_shape_i": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_traverse": {
        "args": [
            {
                "name": "out"
            }
        ]
    },
    "local_ultra_fast_sigmoid": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_upcast_elemwise_constant_inputs": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_useless_alloc": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_useless_elemwise": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_useless_fill": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_useless_inc_subtensor": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_useless_rebroadcast": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_useless_subtensor": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_useless_tile": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_usmm_csc_dense_inplace": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "local_usmm_csx": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "lock": {
        "args": [
            {
                "name": "tmp_dir"
            },
            {
                "default": "notset",
                "name": "timeout"
            },
            {
                "default": "None",
                "name": "min_wait"
            },
            {
                "default": "None",
                "name": "max_wait"
            },
            {
                "default": "1",
                "name": "verbosity"
            }
        ]
    },
    "lock_ctx": {
        "args": [
            {
                "default": "None",
                "name": "lock_dir"
            },
            {
                "default": "False",
                "name": "keep_lock"
            },
            {
                "name": "**kw"
            }
        ]
    },
    "log": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "log10": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "log10_inplace": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "log1p": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "log1p_inplace": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "log2": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "log2_inplace": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "log_inplace": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "log_thunk_trace": {
        "args": [
            {
                "name": "value"
            },
            {
                "default": "sys.stderr",
                "name": "f"
            }
        ]
    },
    "logical_output_shape_2d": {
        "args": [
            {
                "name": "imshp"
            },
            {
                "name": "kshp"
            },
            {
                "name": "mode"
            }
        ]
    },
    "logistic_regression": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "long_print": {
        "args": [
            {
                "default": "sys.stderr",
                "name": "file"
            },
            {
                "default": "None",
                "name": "fct_name"
            },
            {
                "default": "None",
                "name": "message"
            },
            {
                "name": ""
            }
        ]
    },
    "loop_over": {
        "args": [
            {
                "name": "preloop"
            },
            {
                "name": "code"
            },
            {
                "name": "indices"
            },
            {
                "name": "i"
            }
        ]
    },
    "lt": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "b"
            }
        ]
    },
    "lt_inplace": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "b"
            }
        ]
    },
    "m": {
        "args": [
            {
                "name": "t"
            }
        ]
    },
    "makeKeepDims": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "y"
            },
            {
                "name": "axis"
            }
        ]
    },
    "make_all": {
        "args": [
            {
                "default": " None",
                "name": "profiler "
            },
            {
                "default": " None",
                "name": "input_storage "
            }
        ]
    },
    "make_alloc": {
        "args": [
            {
                "name": "loop_orders"
            },
            {
                "name": "dtype"
            },
            {
                "name": "sub"
            },
            {
                "default": "'0'",
                "name": "fortran"
            }
        ]
    },
    "make_argument": {
        "args": [
            {
                "name": "v"
            },
            {
                "name": "name"
            }
        ]
    },
    "make_array": {
        "args": [
            {
                "name": "dt"
            }
        ]
    },
    "make_auth_header": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "make_c_gemv_destructive": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "make_c_ger_destructive": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "make_checks": {
        "args": [
            {
                "name": "loop_orders"
            },
            {
                "name": "dtypes"
            },
            {
                "name": "sub"
            }
        ]
    },
    "make_constant": {
        "args": [
            {
                "name": "value"
            },
            {
                "default": "None",
                "name": "name"
            }
        ]
    },
    "make_declare": {
        "args": [
            {
                "name": "loop_orders"
            },
            {
                "name": "dtypes"
            },
            {
                "name": "sub"
            }
        ]
    },
    "make_dependence_cmp": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "make_depends": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "make_equiv": {
        "args": [
            {
                "name": "lo"
            },
            {
                "name": "li"
            }
        ]
    },
    "make_function": {
        "args": [
            {
                "default": "True",
                "name": "unpack_single"
            },
            {
                "name": "**kwargs"
            }
        ]
    },
    "make_ger_destructive": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "make_gpu_optimizer": {
        "args": [
            {
                "name": "op"
            },
            {
                "name": "to_gpu"
            }
        ]
    },
    "make_graph": {
        "args": [
            {
                "name": "img"
            },
            {
                "name": "kern"
            }
        ]
    },
    "make_loop": {
        "args": [
            {
                "name": "loop_orders"
            },
            {
                "name": "dtypes"
            },
            {
                "name": "loop_tasks"
            },
            {
                "name": "sub"
            },
            {
                "default": "None",
                "name": "openmp"
            }
        ]
    },
    "make_loop_careduce": {
        "args": [
            {
                "name": "loop_orders"
            },
            {
                "name": "dtypes"
            },
            {
                "name": "loop_tasks"
            },
            {
                "name": "sub"
            }
        ]
    },
    "make_new_inplace": {
        "args": [
            {
                "default": "None",
                "name": "output_types_preference"
            },
            {
                "default": "None",
                "name": "name"
            }
        ]
    },
    "make_node": {
        "args": [
            {
                "name": "generator"
            },
            {
                "name": "size"
            }
        ]
    },
    "make_op": {
        "args": [
            {
                "name": "fn"
            }
        ]
    },
    "make_out_pattern": {
        "args": [
            {
                "name": "X"
            }
        ]
    },
    "make_py_code": {
        "args": []
    },
    "make_reordered_loop": {
        "args": [
            {
                "name": "init_loop_orders"
            },
            {
                "name": "olv_index"
            },
            {
                "name": "dtypes"
            },
            {
                "name": "inner_task"
            },
            {
                "name": "sub"
            },
            {
                "default": "None",
                "name": "openmp"
            }
        ]
    },
    "make_thunk": {
        "args": [
            {
                "name": "node"
            },
            {
                "name": "storage_map"
            },
            {
                "name": "_"
            },
            {
                "name": "_2"
            }
        ]
    },
    "make_variable": {
        "args": [
            {
                "default": "None",
                "name": "name"
            }
        ]
    },
    "make_vector_shape": {
        "args": [
            {
                "name": "r"
            }
        ]
    },
    "make_view_array": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "view_ndim"
            }
        ]
    },
    "make_vm": {
        "args": [
            {
                "name": "nodes"
            },
            {
                "name": "thunks"
            },
            {
                "name": ""
            }
        ]
    },
    "map": {
        "args": [
            {
                "name": "fn"
            },
            {
                "name": ""
            }
        ]
    },
    "map_out": {
        "args": [
            {
                "name": "outer_i"
            },
            {
                "name": "inner_o"
            },
            {
                "name": "outer_o"
            },
            {
                "name": "seen"
            }
        ]
    },
    "map_storage": {
        "args": [
            {
                "name": "fgraph"
            },
            {
                "name": "order"
            },
            {
                "name": "input_storage"
            },
            {
                "name": "output_storage"
            }
        ]
    },
    "matVecModM": {
        "args": [
            {
                "name": "A"
            },
            {
                "name": "s"
            },
            {
                "name": "m"
            }
        ]
    },
    "match": {
        "args": [
            {
                "name": "pattern"
            },
            {
                "name": "expr"
            },
            {
                "name": "u"
            },
            {
                "default": "False",
                "name": "allow_multiple_clients"
            },
            {
                "default": "False",
                "name": "pdb"
            }
        ]
    },
    "matrix": {
        "args": [
            {
                "default": "None",
                "name": "name"
            },
            {
                "default": "None",
                "name": "dtype"
            }
        ]
    },
    "matrix_dot": {
        "args": [
            {
                "name": "*args"
            }
        ]
    },
    "matrix_power": {
        "args": [
            {
                "name": "M"
            },
            {
                "name": "n"
            }
        ]
    },
    "max": {
        "args": [
            {
                "default": "None",
                "name": "axis"
            },
            {
                "default": "False",
                "name": "keepdims"
            }
        ]
    },
    "max_and_argmax": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": "None",
                "name": "axis"
            },
            {
                "default": "False",
                "name": "keepdims"
            }
        ]
    },
    "max_err": {
        "args": [
            {
                "name": "g_pt"
            },
            {
                "name": "abs_tol"
            },
            {
                "name": "rel_tol"
            }
        ]
    },
    "max_inputs_to_GpuElemwise": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "max_pool": {
        "args": [
            {
                "name": "images"
            },
            {
                "name": "imgshp"
            },
            {
                "name": "maxpoolshp"
            }
        ]
    },
    "max_pool2D": {
        "args": [
            {
                "name": "*args"
            },
            {
                "name": "**kwargs"
            }
        ]
    },
    "maximum": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "y"
            }
        ]
    },
    "maximum_inplace": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "b"
            }
        ]
    },
    "may_share_memory": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "b"
            }
        ]
    },
    "mean": {
        "args": [
            {
                "default": "None",
                "name": "axis"
            },
            {
                "default": "None",
                "name": "dtype"
            },
            {
                "default": "False",
                "name": "keepdims"
            },
            {
                "default": "None",
                "name": "acc_dtype"
            }
        ]
    },
    "memo.setault": {
        "args": [
            {
                "name": "output"
            },
            {
                "name": "new_output"
            }
        ]
    },
    "memodict": {
        "args": [
            {
                "name": "f"
            }
        ]
    },
    "memoize": {
        "args": [
            {
                "name": "f"
            }
        ]
    },
    "merge": {
        "args": [
            {
                "name": "other"
            }
        ]
    },
    "merge_broadcastables": {
        "args": [
            {
                "name": "broadcastables"
            }
        ]
    },
    "merge_list": {
        "args": [
            {
                "name": "l1"
            },
            {
                "name": "l2"
            }
        ]
    },
    "merge_num_denum": {
        "args": [
            {
                "name": "num"
            },
            {
                "name": "denum"
            }
        ]
    },
    "merge_profile": {
        "args": [
            {
                "name": "prof1"
            },
            {
                "name": "prof2"
            }
        ]
    },
    "merge_two_slices": {
        "args": [
            {
                "name": "slice1"
            },
            {
                "name": "len1"
            },
            {
                "name": "slice2"
            },
            {
                "name": "len2"
            }
        ]
    },
    "method": {
        "args": []
    },
    "method_decl": {
        "args": []
    },
    "min": {
        "args": [
            {
                "default": "None",
                "name": "axis"
            },
            {
                "default": "False",
                "name": "keepdims"
            }
        ]
    },
    "min_informative_str": {
        "args": [
            {
                "name": "obj"
            },
            {
                "default": "0",
                "name": "indent_level"
            },
            {
                "name": ""
            }
        ]
    },
    "min_memory_generator": {
        "args": [
            {
                "name": "executable_nodes"
            },
            {
                "name": "viewed_by"
            },
            {
                "name": "view_of"
            }
        ]
    },
    "minimum": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "y"
            }
        ]
    },
    "minimum_inplace": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "b"
            }
        ]
    },
    "missing_test_message": {
        "args": [
            {
                "name": "msg"
            }
        ]
    },
    "mitmot_out_taps": {
        "args": []
    },
    "mitmot_taps": {
        "args": []
    },
    "mitsot_taps": {
        "args": []
    },
    "mod": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "b"
            }
        ]
    },
    "mod_check": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "y"
            }
        ]
    },
    "mod_inplace": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "b"
            }
        ]
    },
    "mode = get_ault_mode": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "module_from_key": {
        "args": [
            {
                "name": "key"
            },
            {
                "default": "None",
                "name": "lnk"
            },
            {
                "default": "False",
                "name": "keep_lock"
            }
        ]
    },
    "module_name_from_dir": {
        "args": [
            {
                "name": "dirname"
            },
            {
                "default": "True",
                "name": "err"
            },
            {
                "default": "None",
                "name": "files"
            }
        ]
    },
    "modwalker": {
        "args": [
            {
                "name": "path_locals"
            },
            {
                "name": "values"
            }
        ]
    },
    "most_common": {
        "args": [
            {
                "default": "None",
                "name": "n"
            }
        ]
    },
    "movable": {
        "args": [
            {
                "name": "i"
            }
        ]
    },
    "mp": {
        "args": [
            {
                "name": "input"
            }
        ]
    },
    "mpi_send_wait_key": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "mpi_tag_key": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "mrg_next_value": {
        "args": [
            {
                "name": "rstate"
            },
            {
                "name": "new_rstate"
            }
        ]
    },
    "mrg_random_make_inplace": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "mul": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "y"
            }
        ]
    },
    "mul_calculate": {
        "args": [
            {
                "name": "num"
            },
            {
                "name": "denum"
            },
            {
                "default": "False",
                "name": "aslist"
            },
            {
                "default": "None",
                "name": "out_type"
            }
        ]
    },
    "mul_inplace": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "b"
            }
        ]
    },
    "multMatVect": {
        "args": [
            {
                "name": "v"
            },
            {
                "name": "A"
            },
            {
                "name": "m1"
            },
            {
                "name": "B"
            },
            {
                "name": "m2"
            }
        ]
    },
    "mult_and_reduce": {
        "args": [
            {
                "name": "input_fft_v"
            },
            {
                "name": "filters_fft_v"
            },
            {
                "default": "None",
                "name": "input_shape"
            },
            {
                "name": ""
            }
        ]
    },
    "multi_index": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "multinomial": {
        "args": [
            {
                "default": "None",
                "name": "size"
            },
            {
                "default": "1",
                "name": "n"
            },
            {
                "default": "None",
                "name": "pvals"
            },
            {
                "default": "None",
                "name": "ndim"
            },
            {
                "default": "'int64'",
                "name": "dtype"
            },
            {
                "name": ""
            }
        ]
    },
    "multinomial_helper": {
        "args": [
            {
                "name": "random_state"
            },
            {
                "name": "n"
            },
            {
                "name": "pvals"
            },
            {
                "name": "size"
            }
        ]
    },
    "mutable: Bool ": {
        "args": [
            {
                "name": "ault: False if update is None"
            },
            {
                "name": "True if update is not None"
            }
        ]
    },
    "my_as_scalar": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "my_dup": {
        "args": [
            {
                "name": "st"
            },
            {
                "name": "size"
            }
        ]
    },
    "my_dup2": {
        "args": [
            {
                "name": "st"
            }
        ]
    },
    "n_streams": {
        "args": [
            {
                "name": "size"
            }
        ]
    },
    "name: Any type. ": {
        "args": [
            {
                "default": "True",
                "name": "If autoname"
            },
            {
                "name": "aults to variable.name)."
            }
        ]
    },
    "nbs_keys.setault": {
        "args": [
            {
                "name": "val"
            },
            {
                "name": "0"
            }
        ]
    },
    "nbs_mod.setault": {
        "args": [
            {
                "name": "val"
            },
            {
                "name": "0"
            }
        ]
    },
    "nclients": {
        "args": [
            {
                "name": "r"
            }
        ]
    },
    "neg": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "neg_inplace": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "neibs2images": {
        "args": [
            {
                "name": "neibs"
            },
            {
                "name": "neib_shape"
            },
            {
                "name": "original_shape"
            },
            {
                "default": "'valid'",
                "name": "mode"
            }
        ]
    },
    "neq": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "b"
            }
        ]
    },
    "neq_inplace": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "b"
            }
        ]
    },
    "neural_net": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "new": {
        "args": [
            {
                "name": "cls"
            },
            {
                "name": "rstate"
            },
            {
                "name": "ndim"
            },
            {
                "name": "dtype"
            },
            {
                "name": "size"
            }
        ]
    },
    "new_auto_update": {
        "args": [
            {
                "name": "cls"
            },
            {
                "name": "generator"
            },
            {
                "name": "ndim"
            },
            {
                "name": "dtype"
            },
            {
                "name": "size"
            },
            {
                "name": "seed"
            }
        ]
    },
    "new_f": {
        "args": [
            {
                "name": "arg1"
            },
            {
                "name": "*rest"
            }
        ]
    },
    "new_fn": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "newfunc": {
        "args": [
            {
                "name": "*fargs"
            },
            {
                "name": "**fkeywords"
            }
        ]
    },
    "next": {
        "args": []
    },
    "next_seed": {
        "args": []
    },
    "no_transpose_symmetric": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "node_created.setault": {
        "args": [
            {
                "name": "opt"
            },
            {
                "name": "0"
            }
        ]
    },
    "nonzero": {
        "args": [
            {
                "default": "False",
                "name": "return_matrix"
            }
        ]
    },
    "nonzero_values": {
        "args": []
    },
    "norm": {
        "args": [
            {
                "name": "L"
            },
            {
                "default": "None",
                "name": "axis"
            }
        ]
    },
    "normal": {
        "args": [
            {
                "default": "None",
                "name": "size"
            },
            {
                "default": "0.0",
                "name": "avg"
            },
            {
                "default": "1.0",
                "name": "std"
            },
            {
                "default": "None",
                "name": "ndim"
            },
            {
                "name": ""
            }
        ]
    },
    "normal_function": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "not callable": {
        "args": [
            {
                "name": "ault_factory"
            }
        ]
    },
    "not hasattr": {
        "args": [
            {
                "name": "ault_factory"
            },
            {
                "name": "'__call__'"
            }
        ]
    },
    "numpy_compare": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "b"
            },
            {
                "default": " 1e-6",
                "name": "tolerance "
            }
        ]
    },
    "numpy_debug_linker": {
        "args": [
            {
                "name": "pre"
            },
            {
                "default": "None",
                "name": "post"
            }
        ]
    },
    "numpy_dot": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "b"
            }
        ]
    },
    "numpy_scalar": {
        "args": [
            {
                "name": "data"
            }
        ]
    },
    "nvcc_kernel": {
        "args": [
            {
                "name": "name"
            },
            {
                "name": "params"
            },
            {
                "name": "body"
            }
        ]
    },
    "o_shapes = self.ault_infer_shape": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "object that ines the `get_src_code": {
        "args": [
            {
                "name": "` and"
            }
        ]
    },
    "offending_op": {
        "args": []
    },
    "old_shape": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "on": {
        "args": [
            {
                "name": "o_self"
            }
        ]
    },
    "on Variables. If False ": {
        "args": [
            {
                "name": "ault)"
            },
            {
                "name": "perform"
            }
        ]
    },
    "on_attach": {
        "args": [
            {
                "name": "fgraph"
            }
        ]
    },
    "on_change_input": {
        "args": [
            {
                "name": "fgraph"
            },
            {
                "name": "node"
            },
            {
                "name": "i"
            },
            {
                "name": "r"
            },
            {
                "name": "new_r"
            },
            {
                "name": "reason"
            }
        ]
    },
    "on_detach": {
        "args": [
            {
                "name": "fgraph"
            }
        ]
    },
    "on_import": {
        "args": [
            {
                "name": "fgraph"
            },
            {
                "name": "node"
            },
            {
                "name": "reason"
            }
        ]
    },
    "on_prune": {
        "args": [
            {
                "name": "fgraph"
            },
            {
                "name": "node"
            },
            {
                "name": "reason"
            }
        ]
    },
    "one_step": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "one_step_scan": {
        "args": [
            {
                "name": "fn"
            },
            {
                "name": ""
            }
        ]
    },
    "ones": {
        "args": [
            {
                "name": "shape"
            },
            {
                "default": "None",
                "name": "dtype"
            }
        ]
    },
    "ones_like": {
        "args": [
            {
                "name": "model"
            },
            {
                "default": "None",
                "name": "dtype"
            }
        ]
    },
    "op_apply.setault": {
        "args": [
            {
                "name": "op"
            },
            {
                "name": "0"
            }
        ]
    },
    "op_as_string": {
        "args": [
            {
                "name": "i"
            },
            {
                "name": "op"
            },
            {
                "name": ""
            }
        ]
    },
    "op_call.setault": {
        "args": [
            {
                "name": "op"
            },
            {
                "name": "0"
            }
        ]
    },
    "op_callcount": {
        "args": []
    },
    "op_cimpl.setault": {
        "args": [
            {
                "name": "a.op"
            },
            {
                "name": "True"
            }
        ]
    },
    "op_impl": {
        "args": []
    },
    "op_key": {
        "args": []
    },
    "op_lifter": {
        "args": [
            {
                "name": "OP"
            },
            {
                "default": "False",
                "name": "cuda_only"
            }
        ]
    },
    "op_nodes": {
        "args": []
    },
    "op_time": {
        "args": []
    },
    "op_time.setault": {
        "args": [
            {
                "name": "op"
            },
            {
                "name": "0"
            }
        ]
    },
    "operator_eq_cplx": {
        "args": [
            {
                "name": "mytype"
            },
            {
                "name": "othertype"
            }
        ]
    },
    "operator_eq_real": {
        "args": [
            {
                "name": "mytype"
            },
            {
                "name": "othertype"
            }
        ]
    },
    "operator_minus_real": {
        "args": [
            {
                "name": "mytype"
            },
            {
                "name": "othertype"
            }
        ]
    },
    "operator_mul_real": {
        "args": [
            {
                "name": "mytype"
            },
            {
                "name": "othertype"
            }
        ]
    },
    "operator_plus_real": {
        "args": [
            {
                "name": "mytype"
            },
            {
                "name": "othertype"
            }
        ]
    },
    "ops": {
        "args": [
            {
                "name": "i"
            },
            {
                "name": "o"
            }
        ]
    },
    "opt": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "opt_log1p": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "optimize": {
        "args": [
            {
                "name": "fgraph"
            },
            {
                "name": "*args"
            },
            {
                "name": "**kwargs"
            }
        ]
    },
    "optimize_graph_with_cache": {
        "args": [
            {
                "name": "optimizer"
            },
            {
                "name": "inputs"
            },
            {
                "name": "outputs"
            }
        ]
    },
    "optimizer": {
        "args": [
            {
                "name": "f"
            }
        ]
    },
    "or_": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "b"
            }
        ]
    },
    "or__inplace": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "b"
            }
        ]
    },
    "orderings": {
        "args": [
            {
                "name": "function_graph"
            }
        ]
    },
    "orig_function": {
        "args": [
            {
                "name": "inputs"
            },
            {
                "name": "outputs"
            },
            {
                "default": "None",
                "name": "mode"
            },
            {
                "default": "False",
                "name": "accept_inplace"
            },
            {
                "name": ""
            }
        ]
    },
    "orphans": {
        "args": [
            {
                "name": "i"
            },
            {
                "name": "o"
            }
        ]
    },
    "out = property": {
        "args": [
            {
                "name": "ault_output"
            },
            {
                "name": ""
            }
        ]
    },
    "out2in": {
        "args": [
            {
                "name": "*local_opts"
            },
            {
                "name": "**kwargs"
            }
        ]
    },
    "out[0] = ault.copy": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "out_shape": {
        "args": [
            {
                "name": "input_shape"
            }
        ]
    },
    "outer": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "y"
            }
        ]
    },
    "outer_mitmot": {
        "args": [
            {
                "name": "list_inputs"
            }
        ]
    },
    "outer_mitmot_outs": {
        "args": [
            {
                "name": "list_outputs"
            }
        ]
    },
    "outer_mitsot": {
        "args": [
            {
                "name": "list_inputs"
            }
        ]
    },
    "outer_mitsot_outs": {
        "args": [
            {
                "name": "list_outputs"
            }
        ]
    },
    "outer_nitsot": {
        "args": [
            {
                "name": "list_inputs"
            }
        ]
    },
    "outer_nitsot_outs": {
        "args": [
            {
                "name": "list_outputs"
            }
        ]
    },
    "outer_non_seqs": {
        "args": [
            {
                "name": "list_inputs"
            }
        ]
    },
    "outer_seqs": {
        "args": [
            {
                "name": "list_inputs"
            }
        ]
    },
    "outer_shared": {
        "args": [
            {
                "name": "list_inputs"
            }
        ]
    },
    "outer_shared_outs": {
        "args": [
            {
                "name": "list_outputs"
            }
        ]
    },
    "outer_sitsot": {
        "args": [
            {
                "name": "list_inputs"
            }
        ]
    },
    "outer_sitsot_outs": {
        "args": [
            {
                "name": "list_outputs"
            }
        ]
    },
    "output_merge": {
        "args": [
            {
                "name": "cls"
            },
            {
                "name": "alpha_in"
            },
            {
                "name": "beta_in"
            },
            {
                "name": "out_in"
            },
            {
                "name": "nd"
            }
        ]
    },
    "output_subprocess_Popen": {
        "args": [
            {
                "name": "command"
            },
            {
                "name": "**params"
            }
        ]
    },
    "output_type": {
        "args": [
            {
                "name": "inp"
            }
        ]
    },
    "output_types": {
        "args": [
            {
                "name": "input_types"
            }
        ]
    },
    "output_types_preference": {
        "args": [
            {
                "name": "*inputs"
            }
        ]
    },
    "outputs": {
        "args": [
            {
                "name": "*args"
            },
            {
                "name": "**kwargs"
            }
        ]
    },
    "p": {
        "args": [
            {
                "name": "node"
            },
            {
                "name": "args"
            },
            {
                "name": "outs"
            }
        ]
    },
    "pad": {
        "args": []
    },
    "params": {
        "args": [
            {
                "name": "return [w"
            },
            {
                "name": "b]"
            }
        ]
    },
    "params.setault": {
        "args": [
            {
                "name": "'stdin'"
            },
            {
                "name": "null"
            }
        ]
    },
    "parse_config_string": {
        "args": [
            {
                "name": "config_string"
            },
            {
                "default": "True",
                "name": "issue_warnings"
            }
        ]
    },
    "parse_mul_tree": {
        "args": [
            {
                "name": "root"
            }
        ]
    },
    "partial": {
        "args": [
            {
                "name": "func"
            },
            {
                "name": "*args"
            },
            {
                "name": "**keywords"
            }
        ]
    },
    "partition_num_or_denom": {
        "args": [
            {
                "name": "r"
            },
            {
                "name": "f"
            }
        ]
    },
    "pattern_to_str": {
        "args": [
            {
                "name": "pattern"
            }
        ]
    },
    "patternbroadcast": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "broadcastable"
            }
        ]
    },
    "perform": {
        "args": [
            {
                "name": "node"
            },
            {
                "name": "inp"
            },
            {
                "name": "out"
            }
        ]
    },
    "perform_": {
        "args": [
            {
                "name": "node"
            },
            {
                "name": "inputs"
            },
            {
                "name": "output_storage"
            }
        ]
    },
    "perform_sigm_times_exp": {
        "args": [
            {
                "name": "tree"
            },
            {
                "default": "None",
                "name": "exp_x"
            },
            {
                "default": "None",
                "name": "exp_minus_x"
            },
            {
                "default": "None",
                "name": "sigm_x"
            },
            {
                "name": ""
            }
        ]
    },
    "permutation": {
        "args": [
            {
                "default": "None",
                "name": "size"
            },
            {
                "default": "1",
                "name": "n"
            },
            {
                "default": "None",
                "name": "ndim"
            },
            {
                "default": "'int64'",
                "name": "dtype"
            }
        ]
    },
    "permutation_helper": {
        "args": [
            {
                "name": "random_state"
            },
            {
                "name": "n"
            },
            {
                "name": "shape"
            }
        ]
    },
    "permute_row_elements": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "y"
            },
            {
                "default": "0",
                "name": "inverse"
            }
        ]
    },
    "persist": {
        "args": [
            {
                "default": "None",
                "name": "filename"
            }
        ]
    },
    "pfunc": {
        "args": [
            {
                "name": "params"
            },
            {
                "default": "None",
                "name": "outputs"
            },
            {
                "default": "None",
                "name": "mode"
            },
            {
                "default": "None",
                "name": "updates"
            },
            {
                "default": "None",
                "name": "givens"
            },
            {
                "name": ""
            }
        ]
    },
    "plot_apply": {
        "args": [
            {
                "name": "app"
            },
            {
                "name": "d"
            }
        ]
    },
    "poisson": {
        "args": [
            {
                "default": "None",
                "name": "size"
            },
            {
                "default": "None",
                "name": "lam"
            },
            {
                "default": "None",
                "name": "ndim"
            },
            {
                "default": "'int64'",
                "name": "dtype"
            }
        ]
    },
    "pop": {
        "args": [
            {
                "default": "True",
                "name": "last"
            }
        ]
    },
    "popitem": {
        "args": [
            {
                "default": "True",
                "name": "last"
            }
        ]
    },
    "position_independent_str": {
        "args": [
            {
                "name": "obj"
            }
        ]
    },
    "posort": {
        "args": [
            {
                "name": "l"
            },
            {
                "name": "*cmps"
            }
        ]
    },
    "post_gist": {
        "args": [
            {
                "name": "content"
            },
            {
                "default": "''",
                "name": "description"
            },
            {
                "default": "'file'",
                "name": "filename"
            },
            {
                "default": "False",
                "name": "auth"
            }
        ]
    },
    "post_issue_comment": {
        "args": [
            {
                "name": "project"
            },
            {
                "name": "num"
            },
            {
                "name": "body"
            }
        ]
    },
    "pow": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "b"
            }
        ]
    },
    "pow_inplace": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "b"
            }
        ]
    },
    "power": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "y"
            }
        ]
    },
    "pre": {
        "args": [
            {
                "name": "f"
            },
            {
                "name": "inputs"
            },
            {
                "name": "order"
            },
            {
                "name": "thunk_groups"
            }
        ]
    },
    "pre_constant_merge": {
        "args": [
            {
                "name": "vars"
            }
        ]
    },
    "pre_greedy_local_optimizer": {
        "args": [
            {
                "name": "list_optimizations"
            },
            {
                "name": "out"
            }
        ]
    },
    "precise, type. None ": {
        "args": [
            {
                "name": "ault) is almost like False"
            },
            {
                "name": "but allows"
            }
        ]
    },
    "precision. If allow_downcast is None ": {
        "args": [
            {
                "name": "ault)"
            },
            {
                "name": "the behaviour can be"
            }
        ]
    },
    "predict": {
        "args": [
            {
                "name": "cls"
            },
            {
                "name": "x"
            },
            {
                "name": "**kwargs"
            }
        ]
    },
    "preloops.setault": {
        "args": [
            {
                "name": "0"
            },
            {
                "name": "\"\""
            }
        ]
    },
    "pretty_format": {
        "args": [
            {
                "name": "string"
            }
        ]
    },
    "pretty_return": {
        "args": [
            {
                "name": "node_rstate"
            },
            {
                "name": "new_rstate"
            },
            {
                "name": "sample"
            }
        ]
    },
    "print ": {
        "args": [
            {
                "name": "\"  - Replace the ault random number generator by \""
            }
        ]
    },
    "print >> stream, \"    PyObject *m = PyModule_Create": {
        "args": [
            {
                "name": "&module);\""
            }
        ]
    },
    "print_": {
        "args": [
            {
                "name": "*args"
            },
            {
                "name": "**kwargs"
            }
        ]
    },
    "print_command_line_error": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "print_compiledir_content": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "print_diff_summary": {
        "args": [
            {
                "name": "other"
            },
            {
                "default": "15",
                "name": "n_apply_to_print"
            },
            {
                "name": ""
            }
        ]
    },
    "print_from": {
        "args": [
            {
                "name": "i"
            },
            {
                "name": "node"
            },
            {
                "name": "*thunks"
            }
        ]
    },
    "print_info": {
        "args": [
            {
                "name": "i"
            },
            {
                "name": "node"
            },
            {
                "name": "*thunks"
            }
        ]
    },
    "print_init": {
        "args": [
            {
                "name": "stream"
            }
        ]
    },
    "print_input_shapes": {
        "args": [
            {
                "name": "i"
            },
            {
                "name": "node"
            },
            {
                "name": "*thunks"
            }
        ]
    },
    "print_input_types": {
        "args": [
            {
                "name": "i"
            },
            {
                "name": "node"
            },
            {
                "name": "*thunks"
            }
        ]
    },
    "print_method": {
        "args": [
            {
                "name": "stream"
            }
        ]
    },
    "print_profile": {
        "args": [
            {
                "name": "stream"
            },
            {
                "name": "prof"
            },
            {
                "default": "0",
                "name": "level"
            }
        ]
    },
    "print_sep": {
        "args": [
            {
                "name": "i"
            },
            {
                "name": "node"
            },
            {
                "name": "*thunks"
            }
        ]
    },
    "print_summary": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "print_summary_": {
        "args": [
            {
                "name": "fct_name"
            },
            {
                "name": "compile_time"
            },
            {
                "name": "fct_call_time"
            },
            {
                "name": "fct_call"
            },
            {
                "name": ""
            }
        ]
    },
    "printstuff": {
        "args": []
    },
    "prior to the optimization phase ": {
        "args": [
            {
                "name": "ault is False"
            }
        ]
    },
    "process": {
        "args": [
            {
                "name": "r"
            },
            {
                "name": "pstate"
            }
        ]
    },
    "process_constant": {
        "args": [
            {
                "name": "fgraph"
            },
            {
                "name": "c"
            }
        ]
    },
    "process_count.setault": {
        "args": [
            {
                "name": "o"
            },
            {
                "name": "0"
            }
        ]
    },
    "process_graph": {
        "args": [
            {
                "name": "inputs"
            },
            {
                "name": "outputs"
            },
            {
                "default": "None",
                "name": "updates"
            },
            {
                "name": ""
            }
        ]
    },
    "process_node": {
        "args": [
            {
                "name": "fgraph"
            },
            {
                "name": "node"
            }
        ]
    },
    "prod": {
        "args": [
            {
                "default": "None",
                "name": "axis"
            },
            {
                "default": "None",
                "name": "dtype"
            },
            {
                "default": "False",
                "name": "keepdims"
            },
            {
                "default": "None",
                "name": "acc_dtype"
            }
        ]
    },
    "product": {
        "args": [
            {
                "name": "*args"
            },
            {
                "name": "**kwds"
            }
        ]
    },
    "profile.apply_callcount.setault": {
        "args": [
            {
                "name": "node"
            },
            {
                "name": "0"
            }
        ]
    },
    "profile.apply_time.setault": {
        "args": [
            {
                "name": "node"
            },
            {
                "name": "0.0"
            }
        ]
    },
    "profile_printer": {
        "args": [
            {
                "name": "fct_name"
            },
            {
                "name": "compile_time"
            },
            {
                "name": "fct_call_time"
            },
            {
                "name": "fct_call"
            },
            {
                "name": ""
            }
        ]
    },
    "profile_thunk": {
        "args": [
            {
                "name": "i"
            },
            {
                "name": "node"
            },
            {
                "name": "th"
            }
        ]
    },
    "profile_thunk2": {
        "args": [
            {
                "name": "i"
            },
            {
                "name": "node"
            },
            {
                "name": "th"
            }
        ]
    },
    "provide_inputs": {
        "args": [
            {
                "name": "node"
            },
            {
                "name": "inputs"
            }
        ]
    },
    "pruner": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "psd": {
        "args": [
            {
                "name": "v"
            }
        ]
    },
    "psd_solve_with_chol": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "psi": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "psi_inplace": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "ptp": {
        "args": [
            {
                "default": "None",
                "name": "axis"
            }
        ]
    },
    "push_out_inner_vars": {
        "args": [
            {
                "name": "fgraph"
            },
            {
                "name": "inner_vars"
            },
            {
                "name": "old_scan_node"
            },
            {
                "name": ""
            }
        ]
    },
    "pydotprint": {
        "args": [
            {
                "name": "fct"
            },
            {
                "default": "None",
                "name": "outfile"
            },
            {
                "name": ""
            }
        ]
    },
    "pydotprint_variables": {
        "args": [
            {
                "name": "vars"
            },
            {
                "name": ""
            }
        ]
    },
    "pygpu_ault_context": {
        "args": [
            {
                "name": ""
            },
            {
                "name": ""
            }
        ]
    },
    "python_constant_folding": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "python_int_bitwidth": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "qr": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": "\"full\"",
                "name": "mode"
            }
        ]
    },
    "query": {
        "args": [
            {
                "name": "fgraph"
            },
            {
                "name": "op"
            }
        ]
    },
    "r.setault": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "0"
            }
        ]
    },
    "rad2deg": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "rad2deg_inplace": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "raise AttributeError": {
        "args": [
            {
                "name": "\"%s.ault_output is out of range.\" %"
            }
        ]
    },
    "raise Exception": {
        "args": [
            {
                "name": "\"No preined mode exist for string: %s\" % string"
            }
        ]
    },
    "raise TypeError": {
        "args": [
            {
                "name": "\"no_ault_update should be either a boolean or a list\""
            }
        ]
    },
    "raise ValueError": {
        "args": [
            {
                "name": "'halfFFT on odd-length vectors is unined'"
            }
        ]
    },
    "raise_with_op": {
        "args": [
            {
                "name": "node"
            },
            {
                "default": "None",
                "name": "thunk"
            },
            {
                "default": "None",
                "name": "exc_info"
            },
            {
                "default": "None",
                "name": "storage_map"
            }
        ]
    },
    "random_integers": {
        "args": [
            {
                "default": "None",
                "name": "size"
            },
            {
                "default": "0",
                "name": "low"
            },
            {
                "default": "1",
                "name": "high"
            },
            {
                "default": "None",
                "name": "ndim"
            },
            {
                "name": ""
            }
        ]
    },
    "random_integers_helper": {
        "args": [
            {
                "name": "random_state"
            },
            {
                "name": "low"
            },
            {
                "name": "high"
            },
            {
                "name": "size"
            }
        ]
    },
    "random_make_inplace": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "random_projection": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "randomstate_constructor": {
        "args": [
            {
                "name": "value"
            },
            {
                "default": "None",
                "name": "name"
            },
            {
                "default": "False",
                "name": "strict"
            },
            {
                "name": ""
            }
        ]
    },
    "ravel": {
        "args": []
    },
    "real": {
        "args": [
            {
                "name": "z"
            }
        ]
    },
    "real_out": {
        "args": [
            {
                "name": "type"
            }
        ]
    },
    "rebuild_collect_shared": {
        "args": [
            {
                "name": "outputs"
            },
            {
                "name": ""
            }
        ]
    },
    "reconstruct_graph": {
        "args": [
            {
                "name": "inputs"
            },
            {
                "name": "outputs"
            },
            {
                "default": "None",
                "name": "tag"
            }
        ]
    },
    "recur": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "recursive_merge": {
        "args": [
            {
                "name": "var"
            }
        ]
    },
    "recursive_pass": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "ls"
            }
        ]
    },
    "recursively_evaluate": {
        "args": [
            {
                "name": "var"
            }
        ]
    },
    "recv": {
        "args": [
            {
                "name": "shape"
            },
            {
                "name": "dtype"
            },
            {
                "name": "source"
            },
            {
                "name": "tag"
            }
        ]
    },
    "reduce": {
        "args": [
            {
                "name": "fn"
            },
            {
                "name": ""
            }
        ]
    },
    "reflect": {
        "args": [
            {
                "name": "thing"
            }
        ]
    },
    "refresh": {
        "args": [
            {
                "default": "None",
                "name": "age_thresh_use"
            },
            {
                "default": "False",
                "name": "delete_if_problem"
            },
            {
                "default": "True",
                "name": "cleanup"
            }
        ]
    },
    "refresh_droot_impact": {
        "args": []
    },
    "refresh_lock": {
        "args": [
            {
                "name": "lock_file"
            }
        ]
    },
    "register": {
        "args": [
            {
                "name": "name"
            },
            {
                "name": "obj"
            },
            {
                "name": "position"
            },
            {
                "name": "*tags"
            }
        ]
    },
    "register_canonicalize": {
        "args": [
            {
                "name": "lopt"
            },
            {
                "name": "*tags"
            },
            {
                "name": "**kwargs"
            }
        ]
    },
    "register_checker": {
        "args": [
            {
                "name": "checker"
            }
        ]
    },
    "register_linker": {
        "args": [
            {
                "name": "name"
            },
            {
                "name": "linker"
            }
        ]
    },
    "register_mode": {
        "args": [
            {
                "name": "name"
            },
            {
                "name": "mode"
            }
        ]
    },
    "register_opt": {
        "args": [
            {
                "name": "*tags"
            },
            {
                "name": "**kwargs"
            }
        ]
    },
    "register_optimizer": {
        "args": [
            {
                "name": "name"
            },
            {
                "name": "opt"
            }
        ]
    },
    "register_profiler_printer": {
        "args": [
            {
                "name": "fct"
            }
        ]
    },
    "register_specialize": {
        "args": [
            {
                "name": "lopt"
            },
            {
                "name": "*tags"
            },
            {
                "name": "**kwargs"
            }
        ]
    },
    "register_specialize_device": {
        "args": [
            {
                "name": "lopt"
            },
            {
                "name": "*tags"
            },
            {
                "name": "**kwargs"
            }
        ]
    },
    "register_stabilize": {
        "args": [
            {
                "name": "lopt"
            },
            {
                "name": "*tags"
            },
            {
                "name": "**kwargs"
            }
        ]
    },
    "register_uncanonicalize": {
        "args": [
            {
                "name": "lopt"
            },
            {
                "name": "*tags"
            },
            {
                "name": "**kwargs"
            }
        ]
    },
    "reine={'x':": {
        "args": [
            {
                "name": "LogisticLayer.x"
            },
            {
                "name": "LogisticLayer.y)}"
            },
            {
                "name": ""
            }
        ]
    },
    "release_lock": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "remove": {
        "args": [
            {
                "name": "toRemove"
            }
        ]
    },
    "removeAllFgraph": {
        "args": [
            {
                "name": "remove"
            }
        ]
    },
    "remove_constants_and_unused_inputs_scan": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "remove_dimensions": {
        "args": [
            {
                "name": "outs"
            },
            {
                "name": "steps_return"
            },
            {
                "default": "None",
                "name": "offsets"
            }
        ]
    },
    "remove_feature": {
        "args": [
            {
                "name": "feature"
            }
        ]
    },
    "remove_hint_nodes": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "remove_key": {
        "args": [
            {
                "name": "key"
            },
            {
                "default": "True",
                "name": "save_pkl"
            }
        ]
    },
    "remove_move": {
        "args": [
            {
                "name": "name"
            }
        ]
    },
    "remove_tags": {
        "args": [
            {
                "name": "name"
            },
            {
                "name": "*tags"
            }
        ]
    },
    "rename": {
        "args": [
            {
                "name": "ls"
            },
            {
                "name": "suffix"
            }
        ]
    },
    "render_string": {
        "args": [
            {
                "name": "string"
            },
            {
                "name": "sub"
            }
        ]
    },
    "repeat": {
        "args": [
            {
                "name": "repeats"
            },
            {
                "default": "None",
                "name": "axis"
            }
        ]
    },
    "replace": {
        "args": [
            {
                "name": "r"
            },
            {
                "name": "new_r"
            },
            {
                "default": "None",
                "name": "reason"
            },
            {
                "default": "None",
                "name": "verbose"
            }
        ]
    },
    "replace_all": {
        "args": [
            {
                "name": "pairs"
            },
            {
                "default": "None",
                "name": "reason"
            }
        ]
    },
    "replace_all_validate": {
        "args": [
            {
                "name": "fgraph"
            },
            {
                "name": "replacements"
            },
            {
                "name": ""
            }
        ]
    },
    "replace_all_validate_remove": {
        "args": [
            {
                "name": "fgraph"
            },
            {
                "name": "replacements"
            },
            {
                "name": ""
            }
        ]
    },
    "replace_leaf": {
        "args": [
            {
                "name": "arg"
            },
            {
                "name": "leaves"
            },
            {
                "name": "new_leaves"
            },
            {
                "name": "op"
            },
            {
                "name": "neg"
            }
        ]
    },
    "replace_slice": {
        "args": [
            {
                "name": "v"
            }
        ]
    },
    "replace_validate": {
        "args": [
            {
                "name": "fgraph"
            },
            {
                "name": "r"
            },
            {
                "name": "new_r"
            },
            {
                "default": "None",
                "name": "reason"
            }
        ]
    },
    "requiring": {
        "args": [
            {
                "name": "*tags"
            }
        ]
    },
    "reraise": {
        "args": [
            {
                "name": "tp"
            },
            {
                "name": "value"
            },
            {
                "default": "None",
                "name": "tb"
            }
        ]
    },
    "res_is_a": {
        "args": [
            {
                "name": "node"
            },
            {
                "name": "op"
            },
            {
                "default": "None",
                "name": "maxclients"
            }
        ]
    },
    "reset": {
        "args": []
    },
    "reshape": {
        "args": [
            {
                "name": "shape"
            },
            {
                "default": "None",
                "name": "ndim"
            }
        ]
    },
    "result += self._ine_tensor4d_desc": {
        "args": [
            {
                "name": "name"
            },
            {
                "name": "id"
            }
        ]
    },
    "retry_with_equiv": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "return PyModule_Create": {
        "args": [
            {
                "name": "&module);"
            }
        ]
    },
    "return Subtensor.ault_helper_c_code_args": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "return TypedParam": {
        "args": [
            {
                "name": "ault"
            },
            {
                "name": "booltype"
            },
            {
                "name": "is_valid"
            },
            {
                "name": ""
            }
        ]
    },
    "return [grad_unined": {
        "args": [
            {
                "name": "i"
            },
            {
                "name": "inp[i]"
            }
        ]
    },
    "return [gradient.grad_unined": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "return [gx, grad_unined": {
        "args": [
            {
                "name": "1"
            },
            {
                "name": "y)"
            },
            {
                "name": ""
            }
        ]
    },
    "return [theano.gradient.grad_unined": {
        "args": [
            {
                "name": "k"
            },
            {
                "name": "inp"
            },
            {
                "name": ""
            }
        ]
    },
    "return ault.clone": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "return clone_d.setault": {
        "args": [
            {
                "name": "i"
            },
            {
                "name": "i"
            }
        ]
    },
    "return get_ault_datatype": {
        "args": [
            {
                "name": "expr).cname"
            }
        ]
    },
    "return os.linesep.join": {
        "args": [
            {
                "name": "[_macros"
            },
            {
                "name": "_sub"
            },
            {
                "name": "_io"
            },
            {
                "name": ""
            }
        ]
    },
    "reverse": {
        "args": []
    },
    "reverse_dict": {
        "args": [
            {
                "name": "d"
            }
        ]
    },
    "revert": {
        "args": [
            {
                "name": "fgraph"
            },
            {
                "name": "checkpoint"
            }
        ]
    },
    "rint": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "rmtree": {
        "args": [
            {
                "name": "*args"
            },
            {
                "name": "**kwargs"
            }
        ]
    },
    "rmtree_empty": {
        "args": [
            {
                "name": "*args"
            },
            {
                "name": "**kwargs"
            }
        ]
    },
    "roll": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "shift"
            },
            {
                "default": "None",
                "name": "axis"
            }
        ]
    },
    "round": {
        "args": [
            {
                "default": "\"half_away_from_zero\"",
                "name": "mode"
            }
        ]
    },
    "round_half_away_from_zero": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "round_half_away_from_zero_": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "round_half_away_from_zero_inplace": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "round_half_away_from_zero_vec": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "round_half_to_even": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "round_half_to_even_inplace": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "row": {
        "args": [
            {
                "default": "None",
                "name": "name"
            },
            {
                "default": "None",
                "name": "dtype"
            }
        ]
    },
    "row_scale": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "s"
            }
        ]
    },
    "rpath_aults.append": {
        "args": [
            {
                "name": "rpath"
            }
        ]
    },
    "run": {
        "args": [
            {
                "name": "TF"
            }
        ]
    },
    "runScript": {
        "args": [
            {
                "name": "N"
            }
        ]
    },
    "run_context": {
        "args": []
    },
    "run_symbolic": {
        "args": [
            {
                "name": "*args"
            },
            {
                "name": "**kwargs"
            }
        ]
    },
    "run_thunk_of_node": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "run_with_c": {
        "args": [
            {
                "name": "f"
            },
            {
                "default": "False",
                "name": "gpu"
            }
        ]
    },
    "run_with_tensortype_filter_check": {
        "args": [
            {
                "name": "f"
            }
        ]
    },
    "rval": {
        "args": [
            {
                "default": "p",
                "name": "p"
            },
            {
                "default": "node_input_storage",
                "name": "i"
            },
            {
                "default": "node_output_storage",
                "name": "o"
            },
            {
                "default": "node",
                "name": "n"
            }
        ]
    },
    "rval = [grad_unined": {
        "args": [
            {
                "name": "0"
            },
            {
                "name": "axis)]"
            }
        ]
    },
    "rval.setault": {
        "args": [
            {
                "name": "node.op"
            },
            {
                "name": "0"
            }
        ]
    },
    "safe_new": {
        "args": [
            {
                "name": "x"
            },
            {
                "default": "''",
                "name": "tag"
            },
            {
                "default": "None",
                "name": "dtype"
            }
        ]
    },
    "safe_no_home": {
        "args": [
            {
                "name": "home"
            }
        ]
    },
    "safe_to_cpu": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "safe_to_gpu": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "same": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "y"
            }
        ]
    },
    "same_out_float_only": {
        "args": [
            {
                "name": "type"
            }
        ]
    },
    "same_out_nocomplex": {
        "args": [
            {
                "name": "type"
            }
        ]
    },
    "same_shape": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "y"
            },
            {
                "default": "None",
                "name": "dim_x"
            },
            {
                "default": "None",
                "name": "dim_y"
            }
        ]
    },
    "sanitize": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "save": {
        "args": [
            {
                "name": "obj"
            }
        ]
    },
    "save_pkl": {
        "args": []
    },
    "sc_complex_dot_batched": {
        "args": [
            {
                "name": "bx_gpu"
            },
            {
                "name": "by_gpu"
            },
            {
                "name": "bc_gpu"
            },
            {
                "default": "'N'",
                "name": "transa"
            },
            {
                "default": "'N'",
                "name": "transb"
            },
            {
                "name": ""
            }
        ]
    },
    "scalar": {
        "args": [
            {
                "default": "None",
                "name": "name"
            },
            {
                "default": "None",
                "name": "dtype"
            }
        ]
    },
    "scalar_constructor": {
        "args": [
            {
                "name": "value"
            },
            {
                "default": "None",
                "name": "name"
            },
            {
                "default": "False",
                "name": "strict"
            },
            {
                "default": "None",
                "name": "allow_downcast"
            }
        ]
    },
    "scalarconsts_rest": {
        "args": [
            {
                "name": "inputs"
            }
        ]
    },
    "scaled": {
        "args": [
            {
                "name": "thing"
            }
        ]
    },
    "scan": {
        "args": [
            {
                "name": "fn"
            },
            {
                "name": ""
            }
        ]
    },
    "scan_can_remove_outs": {
        "args": [
            {
                "name": "op"
            },
            {
                "name": "out_idxs"
            }
        ]
    },
    "scan_merge_inouts": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "schedule": {
        "args": [
            {
                "name": "fgraph"
            }
        ]
    },
    "search_make_one_sub": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "second": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "b"
            }
        ]
    },
    "second_inplace": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "seed": {
        "args": [
            {
                "default": "None",
                "name": "seed"
            }
        ]
    },
    "select_max": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "y"
            }
        ]
    },
    "select_min": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "y"
            }
        ]
    },
    "self.all = ": {
        "args": [
            {
                "name": "ault"
            },
            {
                "name": ") + options"
            }
        ]
    },
    "self.clients.setault": {
        "args": [
            {
                "name": "output"
            },
            {
                "name": "{}"
            }
        ]
    },
    "self.execute_callbacks_times.setault": {
        "args": [
            {
                "name": "feature"
            },
            {
                "name": "0"
            }
        ]
    },
    "self.print_method": {
        "args": [
            {
                "name": "sio"
            }
        ]
    },
    "self.reasons.setault": {
        "args": [
            {
                "name": "new_r"
            },
            {
                "name": "[]"
            }
        ]
    },
    "self.replaced_by.setault": {
        "args": [
            {
                "name": "new_r"
            },
            {
                "name": "[]"
            }
        ]
    },
    "self.similar_keys.setault": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "self[key] = value = self.ault_factory": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "send": {
        "args": [
            {
                "name": "var"
            },
            {
                "name": "dest"
            },
            {
                "name": "tag"
            }
        ]
    },
    "setUp": {
        "args": []
    },
    "set_gpu_from_theano": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "set_lock_status": {
        "args": [
            {
                "name": "use_lock"
            }
        ]
    },
    "set_shape": {
        "args": [
            {
                "name": "r"
            },
            {
                "name": "s"
            }
        ]
    },
    "set_shape_i": {
        "args": [
            {
                "name": "r"
            },
            {
                "name": "i"
            },
            {
                "name": "s_i"
            }
        ]
    },
    "set_subtensor": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "y"
            },
            {
                "default": "False",
                "name": "inplace"
            },
            {
                "name": ""
            }
        ]
    },
    "set_ufunc": {
        "args": [
            {
                "name": "scalar_op"
            }
        ]
    },
    "set_value": {
        "args": [
            {
                "name": "value"
            },
            {
                "default": "False",
                "name": "borrow"
            }
        ]
    },
    "set_version": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "setter": {
        "args": [
            {
                "name": "s"
            },
            {
                "name": "v"
            }
        ]
    },
    "setval_in_v": {
        "args": [
            {
                "name": "newval"
            }
        ]
    },
    "sgn": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "sgn_inplace": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "shape_i": {
        "args": [
            {
                "name": "var"
            },
            {
                "name": "i"
            },
            {
                "default": "None",
                "name": "fgraph"
            }
        ]
    },
    "shape_ir": {
        "args": [
            {
                "name": "i"
            },
            {
                "name": "r"
            }
        ]
    },
    "shape_of_variables": {
        "args": [
            {
                "name": "fgraph"
            },
            {
                "name": "input_shapes"
            }
        ]
    },
    "shape_padleft": {
        "args": [
            {
                "name": "t"
            },
            {
                "default": "1",
                "name": "n_ones"
            }
        ]
    },
    "shape_padright": {
        "args": [
            {
                "name": "t"
            },
            {
                "default": "1",
                "name": "n_ones"
            }
        ]
    },
    "shape_tuple": {
        "args": [
            {
                "name": "r"
            }
        ]
    },
    "shared": {
        "args": [
            {
                "name": "value"
            },
            {
                "default": "None",
                "name": "name"
            },
            {
                "default": "False",
                "name": "strict"
            },
            {
                "default": "None",
                "name": "allow_downcast"
            },
            {
                "name": "**kwargs"
            }
        ]
    },
    "shared inputs, and their ault_update ": {
        "args": [
            {
                "name": "if applicable) to update_d"
            }
        ]
    },
    "shared_constructor": {
        "args": [
            {
                "name": "ctor"
            },
            {
                "default": "False",
                "name": "remove"
            }
        ]
    },
    "short_platform": {
        "args": [
            {
                "default": "None",
                "name": "r"
            },
            {
                "default": "None",
                "name": "p"
            }
        ]
    },
    "shuffle_row_elements": {
        "args": [
            {
                "name": "input"
            }
        ]
    },
    "sigm_canonicalize": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "signature": {
        "args": []
    },
    "simple_extract_stack": {
        "args": [
            {
                "default": "None",
                "name": "f"
            },
            {
                "default": "None",
                "name": "limit"
            }
        ]
    },
    "simple_meth": {
        "args": [
            {
                "name": "tag"
            }
        ]
    },
    "simplify": {
        "args": [
            {
                "name": "num"
            },
            {
                "name": "denum"
            },
            {
                "name": "out_type"
            }
        ]
    },
    "simplify_constants": {
        "args": [
            {
                "name": "orig_num"
            },
            {
                "name": "orig_denum"
            },
            {
                "default": "None",
                "name": "out_type"
            }
        ]
    },
    "simplify_factors": {
        "args": [
            {
                "name": "num"
            },
            {
                "name": "denum"
            }
        ]
    },
    "simplify_mul": {
        "args": [
            {
                "name": "tree"
            }
        ]
    },
    "sin": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "sin_inplace": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "sinh": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "sinh_inplace": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "smallest": {
        "args": [
            {
                "name": "*args"
            }
        ]
    },
    "softmax_simplifier": {
        "args": [
            {
                "name": "numerators"
            },
            {
                "name": "denominators"
            }
        ]
    },
    "sop_c.setault": {
        "args": [
            {
                "name": "typ"
            },
            {
                "name": "True"
            }
        ]
    },
    "sop_cimpl.setault": {
        "args": [
            {
                "name": "typ"
            },
            {
                "name": "True"
            }
        ]
    },
    "sop_op.setault": {
        "args": [
            {
                "name": "typ"
            },
            {
                "name": "0"
            }
        ]
    },
    "sop_time.setault": {
        "args": [
            {
                "name": "typ"
            },
            {
                "name": "0"
            }
        ]
    },
    "sort": {
        "args": [
            {
                "default": "-1",
                "name": "axis"
            },
            {
                "default": "'quicksort'",
                "name": "kind"
            },
            {
                "default": "None",
                "name": "order"
            }
        ]
    },
    "sort_apply_nodes": {
        "args": [
            {
                "name": "inputs"
            },
            {
                "name": "outputs"
            },
            {
                "name": "cmps"
            }
        ]
    },
    "sort_schedule_fn": {
        "args": [
            {
                "name": "*cmps"
            }
        ]
    },
    "sp_ones_like": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "sp_sum": {
        "args": [
            {
                "name": "x"
            },
            {
                "default": "None",
                "name": "axis"
            },
            {
                "default": "False",
                "name": "sparse_grad"
            }
        ]
    },
    "sp_zeros_like": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "sparse_block_dot_SS": {
        "args": [
            {
                "name": "W"
            },
            {
                "name": "h"
            },
            {
                "name": "inputIdx"
            },
            {
                "name": "b"
            },
            {
                "name": "outputIdx"
            }
        ]
    },
    "sparse_constructor": {
        "args": [
            {
                "name": "value"
            },
            {
                "default": "None",
                "name": "name"
            },
            {
                "default": "False",
                "name": "strict"
            },
            {
                "default": "None",
                "name": "allow_downcast"
            },
            {
                "name": ""
            }
        ]
    },
    "spec_pos": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "spectral_radius_bound": {
        "args": [
            {
                "name": "X"
            },
            {
                "name": "log2_exponent"
            }
        ]
    },
    "split": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "splits_size"
            },
            {
                "name": "n_splits"
            },
            {
                "default": "0",
                "name": "axis"
            }
        ]
    },
    "split_huge_add_or_mul": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "sqr": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "sqr_inplace": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "sqrt": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "sqrt_inplace": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "squeeze": {
        "args": []
    },
    "st_impl": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "k"
            }
        ]
    },
    "stack": {
        "args": [
            {
                "name": "*tensors"
            }
        ]
    },
    "stack_search": {
        "args": [
            {
                "name": "start"
            },
            {
                "name": "expand"
            },
            {
                "default": "'bfs'",
                "name": "mode"
            },
            {
                "default": "False",
                "name": "build_inv"
            }
        ]
    },
    "stacklists": {
        "args": [
            {
                "name": "arg"
            }
        ]
    },
    "start = switch_neg_step": {
        "args": [
            {
                "name": "length - 1"
            },
            {
                "name": "0"
            }
        ]
    },
    "statements": {
        "args": [
            {
                "name": "lst"
            }
        ]
    },
    "static_impl": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "stats_collector": {
        "args": [
            {
                "name": "r"
            },
            {
                "name": "stat_name"
            }
        ]
    },
    "std": {
        "args": [
            {
                "default": "None",
                "name": "axis"
            },
            {
                "default": "False",
                "name": "keepdims"
            }
        ]
    },
    "std_fgraph": {
        "args": [
            {
                "name": "input_specs"
            },
            {
                "name": "output_specs"
            },
            {
                "default": "False",
                "name": "accept_inplace"
            }
        ]
    },
    "std_include_dirs": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "std_lib_dirs": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "std_lib_dirs_and_libs": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "std_libs": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "stop = switch_neg_step": {
        "args": [
            {
                "name": "-1"
            },
            {
                "name": "length"
            }
        ]
    },
    "storage_map.setault": {
        "args": [
            {
                "name": "r"
            },
            {
                "name": "[r.data]"
            }
        ]
    },
    "store_value": {
        "args": [
            {
                "name": "i"
            },
            {
                "name": "node"
            },
            {
                "name": "*thunks"
            }
        ]
    },
    "str_diagnostic": {
        "args": []
    },
    "str_from_slice": {
        "args": [
            {
                "name": "entry"
            }
        ]
    },
    "streamline": {
        "args": [
            {
                "name": "fgraph"
            },
            {
                "name": "thunks"
            },
            {
                "name": "order"
            },
            {
                "default": "None",
                "name": "post_thunk_old_storage"
            },
            {
                "name": ""
            }
        ]
    },
    "streamline_ault_f": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "streamline_fast_f": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "streamline_nice_errors_f": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "strict: Bool ": {
        "args": [
            {
                "name": "ault: False"
            }
        ]
    },
    "stride": {
        "args": [
            {
                "name": "io"
            },
            {
                "name": "p"
            },
            {
                "name": "d"
            }
        ]
    },
    "strip_leading_white_space": {
        "args": [
            {
                "name": "line"
            }
        ]
    },
    "struct_gen": {
        "args": [
            {
                "name": "args"
            },
            {
                "name": "struct_builders"
            },
            {
                "name": "blocks"
            },
            {
                "name": "sub"
            }
        ]
    },
    "struct_variable_codeblocks": {
        "args": [
            {
                "name": "variable"
            },
            {
                "name": "policies"
            },
            {
                "name": "id"
            },
            {
                "name": "symbol_table"
            },
            {
                "name": "sub"
            }
        ]
    },
    "structured_add": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "structured_dot": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "y"
            }
        ]
    },
    "structured_dot_grad": {
        "args": [
            {
                "name": "sparse_A"
            },
            {
                "name": "dense_B"
            },
            {
                "name": "ga"
            }
        ]
    },
    "structured_exp": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "structured_log": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "structured_maximum": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "y"
            }
        ]
    },
    "structured_minimum": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "y"
            }
        ]
    },
    "structured_monoid": {
        "args": [
            {
                "name": "tensor_op"
            }
        ]
    },
    "structured_pow": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "y"
            }
        ]
    },
    "structured_sigmoid": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "sub": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "sub_inplace": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "b"
            }
        ]
    },
    "subgraph_grad": {
        "args": [
            {
                "name": "wrt"
            },
            {
                "name": "end"
            },
            {
                "default": "None",
                "name": "start"
            },
            {
                "default": "None",
                "name": "cost"
            },
            {
                "default": "False",
                "name": "details"
            }
        ]
    },
    "subprocess_Popen": {
        "args": [
            {
                "name": "command"
            },
            {
                "name": "**params"
            }
        ]
    },
    "sum": {
        "args": [
            {
                "default": "None",
                "name": "axis"
            },
            {
                "default": "None",
                "name": "dtype"
            },
            {
                "default": "False",
                "name": "keepdims"
            },
            {
                "default": "None",
                "name": "acc_dtype"
            }
        ]
    },
    "summary": {
        "args": [
            {
                "default": "sys.stderr",
                "name": "file"
            },
            {
                "default": "20",
                "name": "n_ops_to_print"
            },
            {
                "name": ""
            }
        ]
    },
    "summary_class": {
        "args": [
            {
                "default": "sys.stderr",
                "name": "file"
            },
            {
                "default": "None",
                "name": "N"
            }
        ]
    },
    "summary_function": {
        "args": [
            {
                "name": "file"
            }
        ]
    },
    "summary_globals": {
        "args": [
            {
                "name": "file"
            }
        ]
    },
    "summary_memory": {
        "args": [
            {
                "name": "file"
            },
            {
                "default": "None",
                "name": "N"
            }
        ]
    },
    "summary_nodes": {
        "args": [
            {
                "default": "sys.stderr",
                "name": "file"
            },
            {
                "default": "None",
                "name": "N"
            }
        ]
    },
    "summary_ops": {
        "args": [
            {
                "default": "sys.stderr",
                "name": "file"
            },
            {
                "default": "None",
                "name": "N"
            }
        ]
    },
    "support_code": {
        "args": []
    },
    "supports shape-lifting should ine a infer_shape": {
        "args": [
            {
                "name": "node"
            },
            {
                "name": ""
            }
        ]
    },
    "supports_c_code": {
        "args": [
            {
                "name": "inputs"
            }
        ]
    },
    "svd": {
        "args": [
            {
                "name": "a"
            },
            {
                "default": "1",
                "name": "full_matrices"
            },
            {
                "default": "1",
                "name": "compute_uv"
            }
        ]
    },
    "swapaxes": {
        "args": [
            {
                "name": "axis1"
            },
            {
                "name": "axis2"
            }
        ]
    },
    "switch": {
        "args": [
            {
                "name": "cond"
            },
            {
                "name": "ift"
            },
            {
                "name": "iff"
            }
        ]
    },
    "switch_neg_step": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "b"
            }
        ]
    },
    "sym_items": {
        "args": [
            {
                "name": "mod"
            }
        ]
    },
    "symbolic": {
        "args": [
            {
                "name": "f"
            }
        ]
    },
    "symbolic_fn_opts": {
        "args": [
            {
                "name": "**kwargs"
            }
        ]
    },
    "symbolic_member": {
        "args": [
            {
                "name": "ival"
            },
            {
                "default": "None",
                "name": "name"
            }
        ]
    },
    "symbolic_module": {
        "args": [
            {
                "name": "f"
            }
        ]
    },
    "symbolic_params": {
        "args": [
            {
                "name": "cls"
            }
        ]
    },
    "symbolicmethod": {
        "args": [
            {
                "name": "f"
            }
        ]
    },
    "sympy_dtype": {
        "args": [
            {
                "name": "expr"
            }
        ]
    },
    "table_op_class.setault": {
        "args": [
            {
                "name": "op.__class__"
            },
            {
                "name": "0"
            }
        ]
    },
    "tag_solve_triangular": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "take": {
        "args": [
            {
                "name": "indices"
            },
            {
                "default": "None",
                "name": "axis"
            },
            {
                "default": "'raise'",
                "name": "mode"
            }
        ]
    },
    "tan": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "tan_inplace": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "tanh": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "tanh_inplace": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "tanh_layer": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "task_code": {
        "args": [
            {
                "name": "d"
            }
        ]
    },
    "tensor": {
        "args": [
            {
                "name": "*args"
            },
            {
                "name": "**kwargs"
            }
        ]
    },
    "tensor3": {
        "args": [
            {
                "default": "None",
                "name": "name"
            },
            {
                "default": "None",
                "name": "dtype"
            }
        ]
    },
    "tensor4": {
        "args": [
            {
                "default": "None",
                "name": "name"
            },
            {
                "default": "None",
                "name": "dtype"
            }
        ]
    },
    "tensor_constructor": {
        "args": [
            {
                "name": "value"
            },
            {
                "default": "None",
                "name": "name"
            },
            {
                "default": "False",
                "name": "strict"
            },
            {
                "default": "None",
                "name": "allow_downcast"
            },
            {
                "name": ""
            }
        ]
    },
    "tensor_to_cuda": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "tensor_to_gpu": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "tensordot": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "b"
            },
            {
                "default": "2",
                "name": "axes"
            }
        ]
    },
    "test": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "test0": {
        "args": []
    },
    "test_001": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "test_002": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "test_003": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "test_004": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "test_005": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "test_CSMGrad": {
        "args": []
    },
    "test_GPU_nstreams_limit": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "test_bad_size": {
        "args": []
    },
    "test_binomial": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "test_consistency_GPUA_parallel": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "test_consistency_GPUA_serial": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "test_consistency_GPU_parallel": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "test_consistency_GPU_serial": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "test_consistency_cpu_parallel": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "test_consistency_cpu_serial": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "test_consistency_randomstreams": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "test_convolution": {
        "args": []
    },
    "test_deterministic": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "test_gpu_opt": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "test_gradient_scan": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "test_gxx_support": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "test_imgFromNeigh_1d_stridesmaller": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "test_imgFromNeigh_noborder_1d": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "test_matrix_inverse_solve": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "test_maxpool": {
        "args": []
    },
    "test_misc_prints": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "test_multMatVect": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "test_multilayer_conv": {
        "args": []
    },
    "test_multilayer_sparse": {
        "args": []
    },
    "test_multinomial": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "test_multinomial_0": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "test_multinomial_dtypes": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "test_multinomial_large": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "test_multiple_rng_aliasing": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "test_neighFromImg_1d": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "test_neighFromImg_1d_ignoreborder": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "test_neighFromImg_1d_stridesbigger": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "test_neighFromImg_1d_stridesmaller": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "test_neighFromImg_2d": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "test_normal0": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "test_outputs": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "test_random_state_transfer": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "test_sparse": {
        "args": []
    },
    "test_submodule": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "test_uniform": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "theano flag vm.lazy value. Then if we have a None ": {
        "args": [
            {
                "name": "ault) we auto"
            }
        ]
    },
    "theano.function": {
        "args": [
            {
                "name": "[d"
            },
            {
                "name": "b]"
            },
            {
                "name": "[e])     # this works.  d's ault value of 1.5 is ignored."
            }
        ]
    },
    "theano_dtype": {
        "args": [
            {
                "name": "expr"
            }
        ]
    },
    "theano_function": {
        "args": [
            {
                "name": "*args"
            },
            {
                "name": "**kwargs"
            }
        ]
    },
    "theano_hash": {
        "args": []
    },
    "theano_parse_c_arg": {
        "args": [
            {
                "name": "c_arg"
            }
        ]
    },
    "theano_type": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "this input. Using None ": {
        "args": [
            {
                "name": "ault) means we re-use the same value as the"
            }
        ]
    },
    "thunk": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "thunk_hook": {
        "args": [
            {
                "name": "type"
            },
            {
                "name": "value"
            },
            {
                "name": "trace"
            }
        ]
    },
    "tile": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "reps"
            },
            {
                "default": "None",
                "name": "ndim"
            }
        ]
    },
    "time_call": {
        "args": [
            {
                "name": "fn"
            }
        ]
    },
    "time_opts.setault": {
        "args": [
            {
                "name": "opt"
            },
            {
                "name": "0"
            }
        ]
    },
    "tmp": {
        "args": [
            {
                "name": "thing"
            }
        ]
    },
    "to_complex_gpuarray": {
        "args": [
            {
                "name": "x"
            },
            {
                "default": "False",
                "name": "copyif"
            }
        ]
    },
    "to_cudandarray": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "to_gpuarray": {
        "args": [
            {
                "name": "x"
            },
            {
                "default": "False",
                "name": "copyif"
            }
        ]
    },
    "to_list": {
        "args": [
            {
                "name": "ls"
            }
        ]
    },
    "to_one_hot": {
        "args": [
            {
                "name": "y"
            },
            {
                "name": "nb_class"
            },
            {
                "default": "None",
                "name": "dtype"
            }
        ]
    },
    "to_return_values": {
        "args": [
            {
                "name": "values"
            }
        ]
    },
    "to_scalar_type": {
        "args": []
    },
    "toarray": {
        "args": []
    },
    "toposort": {
        "args": [
            {
                "name": "prereqs_d"
            }
        ]
    },
    "trace": {
        "args": []
    },
    "tracks": {
        "args": []
    },
    "transform": {
        "args": [
            {
                "name": "node"
            },
            {
                "default": "True",
                "name": "get_nodes"
            }
        ]
    },
    "transinv_to_invtrans": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "transpose": {
        "args": [
            {
                "name": "*axes"
            }
        ]
    },
    "transpose_inplace": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "**kwargs"
            }
        ]
    },
    "traverse": {
        "args": [
            {
                "name": "out"
            },
            {
                "name": "x"
            },
            {
                "name": "x_copy"
            },
            {
                "name": "d"
            },
            {
                "default": "None",
                "name": "visited"
            }
        ]
    },
    "tri": {
        "args": [
            {
                "name": "N"
            },
            {
                "default": "None",
                "name": "M"
            },
            {
                "default": "0",
                "name": "k"
            },
            {
                "default": "None",
                "name": "dtype"
            }
        ]
    },
    "tril": {
        "args": [
            {
                "name": "m"
            },
            {
                "default": "0",
                "name": "k"
            }
        ]
    },
    "triu": {
        "args": [
            {
                "name": "m"
            },
            {
                "default": "0",
                "name": "k"
            }
        ]
    },
    "true_div": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "b"
            }
        ]
    },
    "true_div_inplace": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "b"
            }
        ]
    },
    "true_dot": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "y"
            },
            {
                "default": "True",
                "name": "grad_preserves_dense"
            }
        ]
    },
    "trunc": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "trunc_inplace": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "try_flags": {
        "args": [
            {
                "name": "flag_list"
            },
            {
                "default": "\"\"",
                "name": "preambule"
            },
            {
                "default": "\"\"",
                "name": "body"
            },
            {
                "name": ""
            }
        ]
    },
    "try_import": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "try_reload": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "try_to_copy_if_needed": {
        "args": [
            {
                "name": "var"
            }
        ]
    },
    "type npy_float%": {
        "args": [
            {
                "name": "half_nbits)s scalar_type;"
            }
        ]
    },
    "type theano_complex%": {
        "args": [
            {
                "name": "nbits)s complex_type;"
            }
        ]
    },
    "typeConstructor": {
        "args": [
            {
                "name": "broadcastable"
            },
            {
                "name": "dtype"
            }
        ]
    },
    "type_guard": {
        "args": [
            {
                "name": "type1"
            }
        ]
    },
    "type_outs.append": {
        "args": [
            {
                "name": "unined_msg"
            }
        ]
    },
    "typed_list_inplace_opt": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "typename": {
        "args": [
            {
                "name": "type"
            }
        ]
    },
    "u": {
        "args": [
            {
                "name": "s"
            }
        ]
    },
    "ultra_fast_sigmoid": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "un = object": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "un-computable variable, an exception ": {
        "args": [
            {
                "name": "GradUninedError) will be"
            }
        ]
    },
    "un_macos.append": {
        "args": [
            {
                "name": "\"#un CONTEXT\""
            }
        ]
    },
    "un_macros.append": {
        "args": [
            {
                "name": "\"#un FAIL\""
            }
        ]
    },
    "unbroadcast": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "*axes"
            }
        ]
    },
    "uniform": {
        "args": [
            {
                "name": "size"
            },
            {
                "default": "0.0",
                "name": "low"
            },
            {
                "default": "1.0",
                "name": "high"
            },
            {
                "default": "None",
                "name": "ndim"
            },
            {
                "name": ""
            }
        ]
    },
    "unify": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "b"
            }
        ]
    },
    "unify_build": {
        "args": [
            {
                "name": "x"
            },
            {
                "name": "U"
            }
        ]
    },
    "unify_merge": {
        "args": [
            {
                "name": "v"
            },
            {
                "name": "o"
            },
            {
                "name": "U"
            }
        ]
    },
    "unify_walk": {
        "args": [
            {
                "name": "v"
            },
            {
                "name": "o"
            },
            {
                "name": "U"
            }
        ]
    },
    "union": {
        "args": [
            {
                "name": "s"
            }
        ]
    },
    "uniq": {
        "args": [
            {
                "name": "seq"
            }
        ]
    },
    "unique": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "unlock": {
        "args": []
    },
    "unpack": {
        "args": [
            {
                "name": "s_i"
            }
        ]
    },
    "unpickle": {
        "args": [
            {
                "name": "fgraph"
            }
        ]
    },
    "unpickle_failure": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "upcast": {
        "args": [
            {
                "name": "*others"
            }
        ]
    },
    "upcast_out_no_complex": {
        "args": [
            {
                "name": "*types"
            }
        ]
    },
    "update": {
        "args": [
            {
                "name": "cls"
            },
            {
                "name": "x"
            },
            {
                "name": "y"
            },
            {
                "name": "**kwargs"
            }
        ]
    },
    "update: Variable instance ": {
        "args": [
            {
                "name": "ault: None"
            }
        ]
    },
    "update_profile": {
        "args": [
            {
                "name": "profile"
            }
        ]
    },
    "update_second_from_first": {
        "args": [
            {
                "name": "r0"
            },
            {
                "name": "r1"
            }
        ]
    },
    "update_self_openmp": {
        "args": []
    },
    "update_shape": {
        "args": [
            {
                "name": "r"
            },
            {
                "name": "other_r"
            }
        ]
    },
    "updates": {
        "args": []
    },
    "upgrade_to_float_no_complex": {
        "args": [
            {
                "name": "*types"
            }
        ]
    },
    "use_blas": {
        "args": []
    },
    "use_c_gemv": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "use_c_ger": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "use_gpu_cumsum": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "use_gpu_images2neibs": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "use_scipy_ger": {
        "args": [
            {
                "name": "node"
            }
        ]
    },
    "use_submodule": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "v_update = v.type.filter_variable": {
        "args": [
            {
                "name": "v.ault_update"
            }
        ]
    },
    "val_str = self.ault": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "validate": {
        "args": [
            {
                "name": "fgraph"
            }
        ]
    },
    "validate_": {
        "args": [
            {
                "name": "fgraph"
            }
        ]
    },
    "value_eq": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "b"
            },
            {
                "default": "True",
                "name": "force_same_dtype"
            }
        ]
    },
    "value_validity_msg": {
        "args": [
            {
                "name": "a"
            }
        ]
    },
    "value_zeros": {
        "args": [
            {
                "name": "shape"
            }
        ]
    },
    "values_eq": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "b"
            }
        ]
    },
    "values_eq_approx": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "b"
            },
            {
                "default": "False",
                "name": "allow_remove_inf"
            },
            {
                "default": "False",
                "name": "allow_remove_nan"
            },
            {
                "name": ""
            }
        ]
    },
    "values_eq_approx_high_tol": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "b"
            }
        ]
    },
    "values_eq_approx_remove_inf": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "b"
            }
        ]
    },
    "values_eq_approx_remove_inf_nan": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "b"
            }
        ]
    },
    "values_eq_approx_remove_low_prec": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "b"
            }
        ]
    },
    "values_eq_approx_remove_nan": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "b"
            }
        ]
    },
    "var": {
        "args": [
            {
                "default": "None",
                "name": "axis"
            },
            {
                "default": "False",
                "name": "keepdims"
            }
        ]
    },
    "var_descriptor": {
        "args": [
            {
                "name": "obj"
            },
            {
                "default": "None",
                "name": "_prev_obs"
            },
            {
                "default": "None",
                "name": "_tag_generator"
            }
        ]
    },
    "var_lookup": {
        "args": [
            {
                "name": "vartype"
            },
            {
                "name": "name"
            },
            {
                "name": "*args"
            },
            {
                "name": "**kwargs"
            }
        ]
    },
    "var_name": {
        "args": [
            {
                "name": "var"
            }
        ]
    },
    "variables": {
        "args": [
            {
                "name": "i"
            },
            {
                "name": "o"
            }
        ]
    },
    "variables_and_orphans": {
        "args": [
            {
                "name": "i"
            },
            {
                "name": "o"
            }
        ]
    },
    "vector": {
        "args": [
            {
                "default": "None",
                "name": "name"
            },
            {
                "default": "None",
                "name": "dtype"
            }
        ]
    },
    "verify_grad": {
        "args": [
            {
                "name": "fun"
            },
            {
                "name": "pt"
            },
            {
                "default": "2",
                "name": "n_tests"
            },
            {
                "default": "None",
                "name": "rng"
            },
            {
                "default": "None",
                "name": "eps"
            },
            {
                "name": ""
            }
        ]
    },
    "verify_grad_sparse": {
        "args": [
            {
                "name": "op"
            },
            {
                "name": "pt"
            },
            {
                "default": "False",
                "name": "structured"
            },
            {
                "name": "*args"
            },
            {
                "name": "**kwargs"
            }
        ]
    },
    "version": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "version_str": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "vertical_stack": {
        "args": [
            {
                "name": "*args"
            }
        ]
    },
    "view_roots": {
        "args": [
            {
                "name": "r"
            }
        ]
    },
    "view_tree_set": {
        "args": [
            {
                "name": "v"
            },
            {
                "name": "treeset"
            }
        ]
    },
    "viewedby_add = aultdict": {
        "args": [
            {
                "name": "lambda: []"
            }
        ]
    },
    "viewedby_remove = aultdict": {
        "args": [
            {
                "name": "lambda: []"
            }
        ]
    },
    "visit": {
        "args": [
            {
                "name": "var"
            }
        ]
    },
    "vstack": {
        "args": [
            {
                "name": "blocks"
            },
            {
                "default": "None",
                "name": "format"
            },
            {
                "default": "None",
                "name": "dtype"
            }
        ]
    },
    "walker": {
        "args": [
            {
                "name": "root"
            }
        ]
    },
    "warn": {
        "args": [
            {
                "name": "exc"
            },
            {
                "name": "nav"
            },
            {
                "name": "repl_pairs"
            },
            {
                "name": "local_opt"
            }
        ]
    },
    "warn_ault": {
        "args": [
            {
                "name": "version"
            }
        ]
    },
    "warn_ignore": {
        "args": [
            {
                "name": "exc"
            },
            {
                "name": "nav"
            },
            {
                "name": "repl_pairs"
            },
            {
                "name": "local_opt"
            }
        ]
    },
    "warn_inplace": {
        "args": [
            {
                "name": "exc"
            },
            {
                "name": "nav"
            },
            {
                "name": "repl_pairs"
            },
            {
                "name": "local_opt"
            }
        ]
    },
    "warning": {
        "args": [
            {
                "name": "*msg"
            }
        ]
    },
    "while_limit": {
        "args": [
            {
                "name": "d"
            }
        ]
    },
    "with_metaclass": {
        "args": [
            {
                "name": "meta"
            },
            {
                "default": "object",
                "name": "base"
            }
        ]
    },
    "wr_offset = theano.gradient.grad_unined": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "wrap": {
        "args": [
            {
                "name": "f"
            }
        ]
    },
    "wrap_in": {
        "args": [
            {
                "name": "input"
            }
        ]
    },
    "wrap_into_list": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "wrap_out": {
        "args": [
            {
                "name": "output"
            }
        ]
    },
    "wrapper": {
        "args": [
            {
                "name": "maker"
            }
        ]
    },
    "write": {
        "args": [
            {
                "name": "data"
            }
        ]
    },
    "x = x.ault_output": {
        "args": [
            {
                "name": ""
            }
        ]
    },
    "xor": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "b"
            }
        ]
    },
    "xor_inplace": {
        "args": [
            {
                "name": "a"
            },
            {
                "name": "b"
            }
        ]
    },
    "zero_grad": {
        "args": [
            {
                "name": "x"
            }
        ]
    },
    "zeros": {
        "args": [
            {
                "name": "shape"
            },
            {
                "default": "None",
                "name": "dtype"
            }
        ]
    },
    "zeros_like": {
        "args": [
            {
                "name": "model"
            }
        ]
    }
}